name: Alpha Release

on:
  push:
    branches:
      - alpha-*.*.*
      - alpha
  workflow_dispatch:

jobs:
  sync-versions:
    name: "Sync packages versions"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: "Sync Versions"
        id: set-version
        run: node scripts/monorepo-version-sync.js ${{ github.ref }} alpha

      - name: "Commit Version Changes"
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: sync versions [ci skip]"
            git push
          else
            echo "No version changes to commit."
          fi

  publish-backend:
    needs: "sync-versions"
    name: "Publish Pre Release Alpha Backend App"
    uses: "./npm-publish.yml@latest"
    with:
      package_path: "apps/backend"
      tag: "alpha"
    secrets:
      npm_auth_token: "${{ secrets.NPM_REGISTRY_TOKEN }}"

  publish-admin:
    needs: "sync-versions"
    name: "Publish Pre Release Alpha Admin App"
    uses: "./npm-publish.yml@latest"
    with:
      package_path: "apps/admin"
      tag: "alpha"
    secrets:
      npm_auth_token: "${{ secrets.NPM_REGISTRY_TOKEN }}"

  build-flutter:
    needs: "sync-versions"
    name: "Build Flutter Display App"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install Flutter SDK"
        uses: "subosito/flutter-action@v2"
        with:
          channel: stable
          flutter-version: 3.27.0

      - name: "Install Melos"
        run: "dart pub global activate melos"

      - name: "Bootstrap Dependencies"
        run: "melos bootstrap"

      - name: "Build generated code"
        run: "melos rebuild-api"

      - name: "Build Flutter Bundle"
        working-directory: "./apps/panel"
        run: "flutter build bundle"

      - name: "Archive Flutter Assets"
        run: |
          tar -czvf smart-panel-display-${{ needs.sync-versions.outputs.version }}.tar.gz -C ./apps/panel/build/flutter_assets .
          shasum -a 256 smart-panel-display-${{ needs.sync-versions.outputs.version }}.tar.gz > SHASUMS256.txt

      - name: "Upload Artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "flutter-assets"
          path: |
            smart-panel-display-${{ needs.sync-versions.outputs.version }}.tar.gz
            SHASUMS256.txt

  pre-release-alpha:
    needs: ["sync-versions", "publish-admin", "publish-backend", "build-flutter"]
    name: "Create Alpha Pre Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Create pre-release"
        uses: "viperproject/create-nightly-release@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.sync-versions.outputs.version }}
          release_name: v${{ needs.publish-admin.outputs.NPM_VERSION }}
          body: |
            Admin App v${{ needs.publish-admin.outputs.NPM_VERSION }} & Backend App v${{ needs.publish-backend.outputs.NPM_VERSION }} & Display App v${{ needs.sync-versions.outputs.version }}
          keep_num: 5
          keep_tags: false

      - name: "Summary"
        run: |
          echo "### âœ… Alpha Release Created: v${{ needs.sync-versions.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Admin App: v${{ needs.publish-admin.outputs.NPM_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend App: v${{ needs.publish-backend.outputs.NPM_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- Display App: v${{ needs.sync-versions.outputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: "Download Flutter Assets"
        uses: "actions/download-artifact@v4"
        with:
          name: "flutter-assets"

      - name: "Attach Flutter Assets"
        uses: "AButler/upload-release-assets@v3"
        with:
          files: "smart-panel-display-${{ needs.sync-versions.outputs.version }}.tar.gz;SHASUMS256.txt"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ needs.sync-versions.outputs.version }}

  releases-to-discord:
    needs: [ "sync-versions", "publish-admin", "publish-backend", "build-flutter", "pre-release-alpha" ]
    name: "Discord Webhooks"
    uses: "./discord-webhooks.yml@latest"
    with:
      title: "FastyBird Smart Panel Alpha Release"
      description: "Version v${{ needs.sync-versions.outputs.version }}"
      url: "https://github.com/fastybird/smart-panel/releases/tag/v${{ needs.sync-versions.outputs.version }}"
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
