name: "Beta Release"

on:
  push:
    branches:
      - "beta-*.*.*"
      - "beta"
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  sync-versions:
    name: "Sync packages versions"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        node-version: [ "22" ]
        operating-system: [ "ubuntu-latest" ]

    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Setup Node"
        uses: "actions/setup-node@v4"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "Sync Versions"
        id: "set-version"
        run: "node .github/scripts/monorepo-version-sync.js ${{ github.ref }} beta"

      - name: "Commit Version Changes"
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: sync versions [ci skip]"
            git push
          else
            echo "No version changes to commit."
          fi

  publish-backend:
    needs: "sync-versions"
    name: "Publish Pre Release Beta Backend App"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        node-version: [ "22" ]
        pnpm-version: [ "10.12.0" ]
        operating-system: [ "ubuntu-latest" ]

    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Setup Node Project"
        uses: "./.github/actions/setup-node-project"
        with:
          node-version: "${{ matrix.node-version }}"
          pnpm-version: "${{ matrix.pnpm-version }}"

      - name: "Build App"
        run: "pnpm --filter @fastybird/smart-panel-backend build"

      - name: "Publish To NPM"
        uses: "./.github/actions/publish-npm-package"
        with:
          package-path: "apps/backend"
          tag: "beta"
          npm-auth-token: ${{ secrets.NPM_REGISTRY_TOKEN }}

      - name: "Extract Published Version"
        id: "extract-version"
        working-directory: "apps/backend"
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
        shell: bash

      - name: "Publish To GitHub NPM"
        uses: "./.github/actions/publish-npm-package"
        with:
          package-path: "apps/backend"
          tag: "beta"
          npm-auth-token: ${{ secrets.GITHUB_TOKEN }}
          npm-registry-url: "https://npm.pkg.github.com"
          npm-registry: "npm.pkg.github.com"

  publish-admin:
    needs: "sync-versions"
    name: "Publish Pre Release Beta Admin App"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        node-version: [ "22" ]
        pnpm-version: [ "10.12.0" ]
        operating-system: [ "ubuntu-latest" ]

    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Setup Node Project"
        uses: "./.github/actions/setup-node-project"
        with:
          node-version: "${{ matrix.node-version }}"
          pnpm-version: "${{ matrix.pnpm-version }}"

      - name: "Build App"
        run: "pnpm --filter @fastybird/smart-panel-admin build"

      - name: "Publish To NPM"
        uses: "./.github/actions/publish-npm-package"
        with:
          package-path: "apps/admin"
          tag: "beta"
          npm-auth-token: ${{ secrets.NPM_REGISTRY_TOKEN }}

      - name: "Extract Published Version"
        id: "extract-version"
        working-directory: "apps/admin"
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
        shell: bash

      - name: "Publish To GitHub NPM"
        uses: "./.github/actions/publish-npm-package"
        with:
          package-path: "apps/admin"
          tag: "beta"
          npm-auth-token: ${{ secrets.GITHUB_TOKEN }}
          npm-registry-url: "https://npm.pkg.github.com"
          npm-registry: "npm.pkg.github.com"

  build-display:
    needs: "sync-versions"
    name: "Build Flutter Display App"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        flutter-version: [ "3.27.0" ]
        flutter-channel: [ "stable" ]
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Setup Flutter"
        uses: "./.github/actions/setup-flutter-project"
        with:
          flutter-version: "${{ matrix.flutter-version }}"
          flutter-channel: "${{ matrix.flutter-channel }}"

      - name: "Build Flutter Bundle"
        run: "melos build-panel-arm-release"

      - name: "Archive Flutter Assets"
        run: |
          tar -czvf smart-panel-display.tar.gz -C ./apps/panel/build/flutter_assets .
          shasum -a 256 smart-panel-display.tar.gz > SHASUMS256.txt

      - name: "Upload Artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "flutter-assets"
          path: |
            smart-panel-display.tar.gz
            SHASUMS256.txt

      - name: "Build Flutter Bundle for (arm64)"
        working-directory: "./apps/panel"
        run: "melos build-panel-arm64-release"

      - name: "Archive Flutter Assets for (arm64)"
        run: |
          tar -czvf smart-panel-display-arm64.tar.gz -C ./apps/panel/build/flutter_assets .
          shasum -a 256 smart-panel-display-arm64.tar.gz > SHASUMS256-arm64.txt

      - name: "Upload Artifact for (arm64)"
        uses: "actions/upload-artifact@v4"
        with:
          name: "flutter-assets-arm64"
          path: |
            smart-panel-display-arm64.tar.gz
            SHASUMS256-arm64.txt

  build-application:
    needs: ["sync-versions", "build-display", "publish-admin", "publish-backend"]
    name: "Pre-Build Application"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Download Display Assets"
        uses: "actions/download-artifact@v4"
        with:
          name: flutter-assets

      - name: "Extract Flutter Assets to /build/display"
        run: |
          mkdir -p ./build/display
          tar -xzf ./smart-panel-display.tar.gz -C ./build/display

      - name: "Prepare Build Folder"
        run: |
          cp .env ./build/
          cp -r var ./build/

      - name: "Remove Monorepo Configuration"
        run: |
          rm ./package.json
          rm ./pnpm-lock.yaml
          rm ./pnpm-workspace.yaml

      - name: "Build ARMv7 App (32-bit)"
        uses: "pguyot/arm-runner-action@v2"
        with:
          base_image: "raspios_lite:latest"
          cpu: "cortex-a7"
          cpu_info: "cpuinfo/raspberrypi_zero2_w"
          image_additional_mb: "4096"
          copy_repository_path: "/opt/smart-panel"
          copy_artifact_path: "smart-panel.tar.gz;SHASUMS256.txt"
          copy_artifact_dest: "."
          commands: |
            apt-get update
            apt-get install -y curl git
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
            apt-get install -y nodejs
            cd /opt/smart-panel/build
            npm add @fastybird/smart-panel-backend@${{ needs.publish-backend.outputs.version }}
            npm add @fastybird/smart-panel-admin@${{ needs.publish-admin.outputs.version }}
            npm install --omit=dev
            cd /opt/smart-panel
            tar -czvf smart-panel.tar.gz -C ./build .
            shasum -a 256 smart-panel.tar.gz > SHASUMS256.txt

      - name: "Upload ARMv7 Artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "application-build-armv7"
          path: |
            smart-panel.tar.gz
            SHASUMS256.txt

      - name: "Download Display Assets (arm64)"
        uses: "actions/download-artifact@v4"
        with:
          name: "flutter-assets-arm64"

      - name: "Extract Flutter Assets to /build-arm64/display"
        run: |
          mkdir -p ./build-arm64/display
          tar -xzf ./smart-panel-display-arm64.tar.gz -C ./build-arm64/display

      - name: "Copy Env & Var for arm64"
        run: |
          cp ./build/package.json ./build-arm64/
          cp ./build/.env.local ./build-arm64/
          cp .env ./build-arm64/
          cp -r var ./build-arm64/

      - name: "Build ARM64 App"
        uses: "pguyot/arm-runner-action@v2"
        with:
          base_image: "raspios_lite_arm64:latest"
          cpu: "cortex-a53"
          cpu_info: "cpuinfo/raspberrypi_zero2_w_arm64"
          image_additional_mb: "4096"
          copy_repository_path: "/opt/smart-panel"
          copy_artifact_path: "smart-panel-arm64.tar.gz;SHASUMS256-arm64.txt"
          copy_artifact_dest: "."
          commands: |
            apt-get update
            apt-get install -y curl git
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
            apt-get install -y nodejs
            cd /opt/smart-panel/build-arm64
            npm add @fastybird/smart-panel-backend@${{ needs.publish-backend.outputs.version }}
            npm add @fastybird/smart-panel-admin@${{ needs.publish-admin.outputs.version }}
            npm install --omit=dev
            cd /opt/smart-panel
            tar -czvf smart-panel-arm64.tar.gz -C ./build-arm64 .
            shasum -a 256 smart-panel-arm64.tar.gz > SHASUMS256-arm64.txt

      - name: "Upload ARM64 Artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "application-build-arm64"
          path: |
            smart-panel-arm64.tar.gz
            SHASUMS256-arm64.txt

  pre-release-beta:
    needs: ["sync-versions", "publish-admin", "publish-backend", "build-application"]
    name: "Create Beta Pre Release"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Create Pre-Release"
        uses: "viperproject/create-nightly-release@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.sync-versions.outputs.version }}
          release_name: v${{ needs.sync-versions.outputs.version }}
          body: |
            Admin App v${{ needs.publish-admin.outputs.version }} & Backend App v${{ needs.publish-backend.outputs.version }} & Display App v${{ needs.sync-versions.outputs.version }}
          keep_num: 5
          keep_tags: false

      - name: "Summary"
        run: |
          echo "### ✅ Beta Release Created: v${{ needs.sync-versions.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Admin App: v${{ needs.publish-admin.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend App: v${{ needs.publish-backend.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Display App: v${{ needs.sync-versions.outputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: "Download Application Build"
        uses: "actions/download-artifact@v4"
        with:
          name: "application-build"

      - name: "Attach Application Build"
        uses: "AButler/upload-release-assets@v3.0"
        with:
          files: "smart-panel.tar.gz;SHASUMS256.txt"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ needs.sync-versions.outputs.version }}

      - name: "Download Application Build (arm64)"
        uses: "actions/download-artifact@v4"
        with:
          name: "application-build-arm64"

      - name: "Attach Application Build (arm64)"
        uses: "AButler/upload-release-assets@v3.0"
        with:
          files: "smart-panel-arm64.tar.gz;SHASUMS256-arm64.txt"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ needs.sync-versions.outputs.version }}

  release-to-discord:
    needs: [ "sync-versions", "publish-admin", "publish-backend", "build-application", "pre-release-beta" ]
    name: "Discord Webhooks"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0

      - name: "Pull Updated Branch"
        run: git pull origin ${{ github.ref_name }}

      - name: "Send Discord Notification"
        uses: "./.github/actions/send-discord-notification"
        with:
          title: "FastyBird Smart Panel Beta Release"
          description: "Version v${{ needs.sync-versions.outputs.version }}"
          url: "https://github.com/fastybird/smart-panel/releases/tag/v${{ needs.sync-versions.outputs.version }}"
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
