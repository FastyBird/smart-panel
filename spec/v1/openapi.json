{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "dt941xb6lps1e"
  },
  "info": {
    "title": "üñ•Ô∏è FastyBird Smart Panel API üöÄ",
    "description": "Welcome to the **FastyBird Smart Panel API Documentation**! This API enables seamless integration between the **FastyBird Smart Panel** and connected devices, providing a local, real-time, and fully customizable **smart home experience**.\n\n---\n\n## **üåü What Does This API Provide?**\n\nThe **FastyBird Smart Panel API** allows you to:\n\n- üéõÔ∏è **Access Smart Devices** ‚Äì Retrieve device information, configurations, and states.  \n- üìä **Monitor Device Status in Real-Time** ‚Äì Stream live updates from sensors and switches.  \n- üîó **Integrate with External Systems** ‚Äì Connect third-party devices and services for a unified experience.  \n- üì° **Subscribe to Events** ‚Äì Use **WebSockets** to get instant updates on device changes.  \n- üöÄ **Control Locally** ‚Äì No cloud dependency, everything runs on your own **local hardware**.  \n\nüí° **Jump straight into the [API Reference](#explore-apis) for all available endpoints.**\n\n---\n\n## **üöÄ Getting Started**\n\n> **üí° This API is designed for local control‚Äîno cloud required.**\n\n### **1Ô∏è‚É£ Install the Smart Panel**\nSet up the **FastyBird Smart Panel** on your hardware.\n\n### **2Ô∏è‚É£ Connect Devices**\nEnsure compatible smart devices are available for the panel to manage.\n\n### **3Ô∏è‚É£ Start Using the API**\nUse REST or WebSockets to **query device states, receive updates, and integrate external systems**.\n\n---\n\n## **üîé API Overview**\nExplore the available API endpoints for integration:\n\n<!--\ntype: tab\ntitle: Devices API\n-->\n\nüîπ **Query smart devices and retrieve metadata.**  \n- [List all devices](#)  \n- [Get device details](#)  \n- [Check device availability](#)  \n- [API Reference](#)  \n\n<!--\ntype: tab\ntitle: Status & Monitoring API\n-->\n\nüîπ **Retrieve sensor readings and real-time device states.**  \n- [Get temperature sensor data](#)  \n- [Monitor smart switch states](#)  \n- [Track energy consumption](#)  \n- [API Reference](#)  \n\n<!--\ntype: tab\ntitle: WebSocket API\n-->\n\nüîπ **Subscribe to live updates for devices & events.**  \n- [Receive real-time device status changes](#)  \n- [Subscribe to WebSocket event streams](#)  \n- [API Reference](#)  \n\n<!-- type: tab-end -->\n\n---\n\n## **üìö API Usage Guides**\nDetailed documentation to help developers integrate the API:\n\nüîπ **[Understanding Device States](#)** ‚Äì Learn how to interpret API responses.  \nüîπ **[Using WebSockets for Real-Time Monitoring](#)** ‚Äì Get instant updates from the panel.  \nüîπ **[Integrating Third-Party Devices](#)** ‚Äì Extend your setup with custom integrations.  \n\nüí° **Need something specific?** Let us know how we can improve the documentation.\n\n---\n\n## **üí° FAQs**\n> **üîç Common API-related questions:**\n\n**Does this API require the cloud?**  \nNo, everything runs **locally** on your **own hardware**.\n\n**How do I authenticate API requests?**  \nUse **API tokens** for secure access. See [Authentication Guide](#).\n\n**Can I get real-time updates from the panel?**  \nYes! The **WebSocket API** provides instant status updates.\n\n**Does the API support third-party integrations?**  \nYes, you can connect external IoT systems via API endpoints.\n\n---\n\n## **üí¨ Need Help?**\nüíå **[Join our Developer Community](#)** ‚Äì Discuss API integrations with others.  \nüìß **[Contact Support](#)** ‚Äì Reach out for technical assistance.  \n\n---\n\nüî• **Built with ‚ù§Ô∏è by FastyBird** | API-first smart panel integration üöÄ",
    "version": "1.0",
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/FastyBird/smart-panel/blob/main/LICENSE.md"
    },
    "contact": {
      "name": "Adam Kadlec",
      "url": "https://fastybird.com",
      "email": "info@fastybird.com"
    },
    "termsOfService": "",
    "summary": "The FastyBird Smart Panel API provides a local, real-time interface for retrieving device data, monitoring statuses, and integrating third-party IoT systems. It enables seamless communication between the smart panel and connected devices, ensuring fast, private, and reliable interactions without cloud dependencies."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/auth-module/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "204": {
            "description": "User registered successfully. No content returned."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-auth-module-register",
        "x-stoplight": {
          "id": "jmi4bezjdu1om"
        },
        "description": "Endpoint to register a new user by providing username, password, and optional profile information.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthRegister"
        }
      }
    },
    "/auth-module/auth/register-display": {
      "post": {
        "summary": "Register a display-only user",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/AuthRegisteredDisplay"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-auth-module-register-display",
        "x-stoplight": {
          "id": "58md4bt1d3b0j"
        },
        "description": "Endpoint to register a user with limited permissions, designed for display-only functionalities.",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "description": "A string identifying the requesting device. Required for registering display-only users.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "FastyBird-Display/1.0"
            }
          }
        ]
      }
    },
    "/auth-module/auth/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthLoggedIn"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-auth-module-login",
        "x-stoplight": {
          "id": "0lirc4n8xlbri"
        },
        "description": "Endpoint for user login, requiring username and password to generate an authentication token.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthLogin"
        }
      }
    },
    "/auth-module/auth/check/username": {
      "post": {
        "summary": "Check username availability",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthCheck"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "validate-auth-module-check-username",
        "x-stoplight": {
          "id": "dleetxrclyi5y"
        },
        "description": "Endpoint to check whether a given username is already in use in the system.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthCheckUsername"
        }
      }
    },
    "/auth-module/auth/check/email": {
      "parameters": [],
      "post": {
        "summary": "Check email availability",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthCheck"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "validate-auth-module-check-email",
        "x-stoplight": {
          "id": "xsa3oon4wo37i"
        },
        "description": "Endpoint to check whether a given email address is already in use in the system.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthCheckEmail"
        }
      }
    },
    "/auth-module/auth/profile": {
      "get": {
        "summary": "Retrieve authenticated user's profile",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthProfile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-auth-module-profile",
        "x-stoplight": {
          "id": "muaci9maz5vvk"
        },
        "description": "Endpoint to retrieve the profile information of the authenticated user, including username, email, and role."
      },
      "parameters": []
    },
    "/auth-module/auth/refresh": {
      "post": {
        "summary": "Refresh user access token",
        "tags": [
          "Auth module"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/AuthRefresh"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-auth-module-refresh",
        "x-stoplight": {
          "id": "24cw2b0rgs184"
        },
        "description": "Endpoint for user access token refresh, requiring refresh token to generate an authentication token.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthRefresh"
        }
      }
    },
    "/users-module/users": {
      "get": {
        "summary": "Retrieve a list of users",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersMultipleUsers"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-users-module-users",
        "x-stoplight": {
          "id": "b2uw27radnx2f"
        },
        "tags": [
          "Users module"
        ],
        "description": "Fetch a paginated list of users, including details such as usernames, emails, and roles."
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users module"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/UsersCreatedUser"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-users-module-user",
        "x-stoplight": {
          "id": "xt11ni9977lsc"
        },
        "description": "Register a new user by providing necessary details such as username, password, and optional profile information.",
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersCreateUser"
        }
      }
    },
    "/users-module/users/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific user",
        "tags": [
          "Users module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersOneUser"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-users-module-user",
        "x-stoplight": {
          "id": "djms7i22710t8"
        },
        "description": "Fetch detailed information about a specific user, including their profile, role, and associated data."
      },
      "patch": {
        "summary": "Update an existing user",
        "tags": [
          "Users module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersUpdatedUser"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-users-module-user",
        "x-stoplight": {
          "id": "4lh3ek91kkr8u"
        },
        "description": "Modify user details such as email, role, or profile information. Partial updates are supported.",
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersUpdateUser"
        }
      },
      "delete": {
        "summary": "Delete an existing user",
        "tags": [
          "Users module"
        ],
        "responses": {
          "204": {
            "description": "The user was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-users-module-user",
        "x-stoplight": {
          "id": "lnk0kfxc4pxeo"
        },
        "description": "Remove a user from the system. This action is irreversible."
      }
    },
    "/devices-module/devices": {
      "get": {
        "tags": [
          "Devices module",
          "Devices"
        ],
        "summary": "Retrieve a list of available devices",
        "description": "Fetches a list of all devices currently registered in the system. Each device includes its metadata (e.g., ID, name, and category), along with associated channels, controls, and properties.",
        "operationId": "get-devices-module-devices",
        "x-stoplight": {
          "id": "cirqmt11kku2o"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleDevices"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create a new device",
        "tags": [
          "Devices module",
          "Devices"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedDevice"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-device",
        "x-stoplight": {
          "id": "0i7wpfd93xpkv"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateDevice"
        },
        "description": "Creates a new device resource in the system. The request requires device-specific attributes such as category and name. The response includes the full representation of the created device, including its associated channels, controls, and properties. Additionally, a Location header is provided with the URI of the newly created resource."
      }
    },
    "/devices-module/devices/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific device",
        "tags": [
          "Devices module",
          "Devices"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneDevice"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device",
        "x-stoplight": {
          "id": "uj1uknygmcwzp"
        },
        "description": "Fetches the details of a specific device using its unique ID. The response includes the device‚Äôs metadata (e.g., ID, name, and category), associated channels, controls, and properties."
      },
      "patch": {
        "summary": "Update an existing device",
        "tags": [
          "Devices module",
          "Devices"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesUpdateDevice"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-devices-module-device",
        "x-stoplight": {
          "id": "woylnlw4hk7n9"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesUpdateDevice"
        },
        "description": "Partially updates the attributes of an existing device identified by its unique ID. The update can modify metadata, such as the device‚Äôs name, category, or description, without requiring the full object."
      },
      "delete": {
        "summary": "Delete an existing device",
        "tags": [
          "Devices module",
          "Devices"
        ],
        "responses": {
          "204": {
            "description": "The device was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-device",
        "x-stoplight": {
          "id": "9vtav0gtdf149"
        },
        "description": "Deletes a specific device identified by its unique ID from the system. This action is irreversible and will remove the device and its associated data from the system."
      }
    },
    "/devices-module/devices/{deviceId}/controls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available device controls",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleDeviceControls"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-controls",
        "x-stoplight": {
          "id": "haco7m2g7mb9x"
        },
        "description": "Fetches a list of controls associated with a specific device. Controls represent actions that can be performed on the device, such as reboot or calibration."
      },
      "post": {
        "summary": "Create a new control for a device",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedDeviceControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-device-control",
        "x-stoplight": {
          "id": "q1xzxvayyc08w"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateDeviceControl"
        },
        "description": "Creates a new control associated with a specific device. Controls represent actions or commands that can be executed on the device, such as reboot or factory reset."
      }
    },
    "/devices-module/devices/{deviceId}/controls/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific control for a device",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneDeviceControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-control",
        "x-stoplight": {
          "id": "54en7gn2idtuk"
        },
        "description": "Fetches detailed information about a specific control associated with a device using its unique ID. The response includes metadata such as the control‚Äôs name, ID, associated device, and timestamps."
      },
      "delete": {
        "summary": "Delete an existing control for a device",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "204": {
            "description": "No The control was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-device-control",
        "x-stoplight": {
          "id": "7wvc6ve0awwru"
        },
        "description": "Deletes a specific control associated with a device using its unique ID. This action is irreversible and removes the control from the system."
      }
    },
    "/devices-module/devices/{deviceId}/channels": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available channels for a device",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannels"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channels",
        "x-stoplight": {
          "id": "f2oulcm2nsoa1"
        },
        "description": "Fetches a list of channels associated with a specific device. Each channel includes metadata (e.g., ID, name, category), associated controls, and properties."
      },
      "post": {
        "summary": "Create a new channel for a device",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-device-channel",
        "x-stoplight": {
          "id": "y1iy5j2j7nsv6"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateDeviceChannel"
        },
        "description": "Creates a new channel associated with a specific device. The channel can have attributes such as name, category, description, and optionally controls and properties."
      }
    },
    "/devices-module/devices/{deviceId}/channels/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific channel for a device",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channel",
        "x-stoplight": {
          "id": "4vyka09g52xit"
        },
        "description": "Fetches detailed information about a specific channel associated with a device using its unique ID. The response includes metadata, category, associated controls, and properties for the channel."
      },
      "patch": {
        "summary": "Update an existing channel for a device",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesUpdatedChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-devices-module-device-channel",
        "x-stoplight": {
          "id": "j7wvkrzimi81d"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesUpdateChannel"
        },
        "description": "Partially updates the attributes of a specific channel associated with a device using its unique ID. The update can modify metadata, such as the channel‚Äôs name, category, or description, without requiring the full object."
      },
      "delete": {
        "summary": "Delete a specific channel for a device",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "204": {
            "description": "The channel was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-device-channel",
        "x-stoplight": {
          "id": "aicilvvewcjrk"
        },
        "description": "Deletes a specific channel associated with a device using its unique ID. This action is irreversible and will remove the channel and its associated data from the system."
      }
    },
    "/devices-module/devices/{deviceId}/channels/{channelId}/controls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/channelId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available controls for a device‚Äôs channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannelControls"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channel-controls",
        "x-stoplight": {
          "id": "rcqx4q0c0qsyq"
        },
        "description": "Fetches a list of controls associated with a specific channel of a device. Controls represent actions or commands that can be executed on the channel, such as reset or calibration."
      },
      "post": {
        "summary": "Create a new control for a specific device‚Äôs channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannelControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-device-channel-control",
        "x-stoplight": {
          "id": "2qwj6qumayypr"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateChannelControl"
        },
        "description": "Creates a new control associated with a specific device channel. Controls represent actions or commands that can be executed on the channel, such as reset or calibration."
      }
    },
    "/devices-module/devices/{deviceId}/channels/{channelId}/controls/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/channelId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific control for a device‚Äôs channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannelControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channel-control",
        "x-stoplight": {
          "id": "xvly6qkd0wajx"
        },
        "description": "Fetches detailed information about a specific control associated with a device channel using its unique ID. The response includes metadata such as the control‚Äôs name, ID, associated channel, and timestamps."
      },
      "delete": {
        "summary": "Delete a specific control from a device‚Äôs channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "204": {
            "description": "The control was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-device-channel-control",
        "x-stoplight": {
          "id": "d5j76obf9ijg9"
        },
        "description": "Deletes a specific control associated with a device channel using its unique ID. This action is irreversible and removes the control from the system."
      }
    },
    "/devices-module/devices/{deviceId}/channels/{channelId}/properties": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/channelId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available properties for a device‚Äôs channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannelProperties"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channel-properties",
        "x-stoplight": {
          "id": "7zharryzaf6ji"
        },
        "description": "Fetches a list of properties associated with a specific channel of a device. Properties represent attributes or measurements related to the channel, such as thermostat mode, temperature, or humidity."
      },
      "post": {
        "summary": "Create a new property for a specific device‚Äôs channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-device-channel-property",
        "x-stoplight": {
          "id": "4b8zce6pcj0og"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateChannelProperty"
        },
        "description": "Creates a new property for a specific device channel. The property can include metadata such as category, permissions, data type, unit, and initial value. The response contains the full representation of the created property, including its unique identifier, associated channel, and metadata."
      }
    },
    "/devices-module/devices/{deviceId}/channels/{channelId}/properties/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/deviceId"
        },
        {
          "$ref": "#/components/parameters/channelId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific property for a device‚Äôs channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-device-channel-property",
        "x-stoplight": {
          "id": "m5c8g3jf1zf3k"
        },
        "description": "Fetches detailed information about a specific property associated with a device channel using its unique ID. The response includes metadata such as the property‚Äôs name, category, value, and associated channel."
      },
      "patch": {
        "summary": "Update and existing property for a specific device‚Äôs channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesUpdatedChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-devices-module-device-channel-property",
        "x-stoplight": {
          "id": "7yr32e4hdbrb7"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesUpdateChannelProperty"
        },
        "description": "Partially updates the details of a specific property associated with a device channel. This operation allows modifications to attributes such as the property‚Äôs name, value, or metadata, while preserving its unique identifier and association with the channel."
      },
      "delete": {
        "summary": "Delete a specific property from a device‚Äôs channel.",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "204": {
            "description": "The property was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-device-channel-property",
        "x-stoplight": {
          "id": "oej5adder08ws"
        },
        "description": "Deletes a specific property associated with a device channel using its unique ID. This operation is irreversible and removes the property from the system."
      }
    },
    "/devices-module/channels": {
      "get": {
        "summary": "Retrieve a list of available channels",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannels"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channels",
        "x-stoplight": {
          "id": "ct8j21lvi0ecu"
        },
        "description": "Fetches a list of channels in the system. The response includes metadata for each channel, such as its ID, name, category, associated device, controls, and properties."
      },
      "post": {
        "summary": "Create a new channel",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-channel",
        "x-stoplight": {
          "id": "qqo6xxersevin"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateChannel"
        },
        "description": "Creates a new channel in the system. The channel can have attributes such as name, category, description, and an associated device. Optionally, controls and properties can also be defined during creation."
      }
    },
    "/devices-module/channels/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific channel",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channel",
        "x-stoplight": {
          "id": "d2kd5n9mq7jdp"
        },
        "description": "Fetches detailed information about a specific channel using its unique ID. The response includes metadata, associated device information, controls, and properties for the channel."
      },
      "patch": {
        "summary": "Update an existing channel",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesUpdatedChannel"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-devices-module-channel",
        "x-stoplight": {
          "id": "ua6tppftt37yy"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesUpdateChannel"
        },
        "description": "Partially updates the attributes of a specific channel using its unique ID. This allows modifications to properties such as the channel‚Äôs name, category, description, or associated controls and properties."
      },
      "delete": {
        "summary": "Delete an existing channel",
        "tags": [
          "Devices module",
          "Channels"
        ],
        "responses": {
          "204": {
            "description": "The channel was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-channel",
        "x-stoplight": {
          "id": "hvvgvonlniekr"
        },
        "description": "Deletes a specific channel using its unique ID. This action is irreversible and removes the channel and all associated data from the system."
      }
    },
    "/devices-module/channels/{channelId}/controls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/channelId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available channel controls",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannelControls"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channel-controls",
        "x-stoplight": {
          "id": "ubu4wz9ixqt5f"
        },
        "description": "Fetches a list of all controls available for channels in the system. Each control represents an actionable operation associated with a channel. The response includes details such as the control‚Äôs ID, name, associated channel, and timestamps."
      },
      "post": {
        "summary": "Create a new control for a channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannelControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-channel-control",
        "x-stoplight": {
          "id": "o1mxyg9kn1kwu"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateChannelControl"
        },
        "description": "Allows the creation of a new control for a specific channel. A control represents an actionable operation or command associated with the channel. The response includes the complete details of the newly created control, including its ID, name, associated channel, and metadata."
      }
    },
    "/devices-module/channels/{channelId}/controls/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/channelId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific control for a channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannelControl"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channel-control",
        "x-stoplight": {
          "id": "q7oomp6j4vlzh"
        },
        "description": "Fetches the details of a specific control associated with a channel. The response includes the control‚Äôs unique identifier, name, associated channel, and metadata such as creation and update timestamps."
      },
      "delete": {
        "summary": "Delete an existing control for a channel",
        "tags": [
          "Devices module",
          "Controls"
        ],
        "responses": {
          "204": {
            "description": "The control was successfully deleted. The response contains no additional content."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-channel-control",
        "x-stoplight": {
          "id": "tzzunaexajaov"
        },
        "description": "Deletes an existing control associated with a specific channel. This operation is irreversible and will remove the control permanently from the system."
      }
    },
    "/devices-module/channels/{channelId}/properties": {
      "parameters": [
        {
          "$ref": "#/components/parameters/channelId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available channel properties",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesMultipleChannelProperties"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channel-properties",
        "x-stoplight": {
          "id": "r9c11deyfcnub"
        },
        "description": "Fetches all properties associated with a specific channel. The response includes metadata for each property, such as category, name, permissions, data type, unit, and current value, along with the associated channel‚Äôs unique identifier."
      },
      "post": {
        "summary": "Create a new property for a channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DevicesCreatedChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-devices-module-channel-property",
        "x-stoplight": {
          "id": "tal8j19kv9vxk"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesCreateChannelProperty"
        },
        "description": "Creates a new property for a channel, such as thermostat mode or brightness level. The property includes metadata like category, permissions, data type, unit, and initial value. The response provides the full representation of the created property along with a Location header containing the URI for the new property resource."
      }
    },
    "/devices-module/channels/{channelId}/properties/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/channelId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific property for a channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesOneChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-devices-module-channel-property",
        "x-stoplight": {
          "id": "wdhldkx9xz5pq"
        },
        "description": "Fetches detailed information about a specific property associated with a channel. The response includes metadata such as the property‚Äôs unique ID, category, permissions, data type, unit, and current value, along with timestamps and the associated channel‚Äôs identifier."
      },
      "patch": {
        "summary": "Update an existing property for a channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DevicesUpdatedChannelProperty"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-devices-module-channel-property",
        "x-stoplight": {
          "id": "spjfk3ymrses4"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DevicesUpdateChannelProperty"
        },
        "description": "Allows partial updates to an existing property associated with a channel. You can update specific attributes such as the name, category, permissions, data type, unit, or current value. The response includes the updated representation of the property."
      },
      "delete": {
        "summary": "Delete an existing property for a channel",
        "tags": [
          "Devices module",
          "Properties"
        ],
        "responses": {
          "204": {
            "description": "The property was successfully deleted. No response body is returned."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-devices-module-channel-property",
        "x-stoplight": {
          "id": "osnd87kexyk1y"
        },
        "description": "Deletes an existing property associated with a channel. This operation is irreversible and permanently removes the property from the system."
      }
    },
    "/dashboard-module/pages": {
      "get": {
        "summary": "Retrieve a list of available pages",
        "description": "Fetches a list of all pages currently registered in the system. Each pages includes its metadata (e.g., ID, title), along with associated tiles and data sources.",
        "tags": [
          "Dashboard module",
          "Pages"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultiplePages"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-pages",
        "x-stoplight": {
          "id": "3d9pmq7o0fxh7"
        }
      },
      "post": {
        "summary": "Create a new page",
        "tags": [
          "Dashboard module",
          "Pages"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedPage"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page",
        "x-stoplight": {
          "id": "qtr0ougar7mmd"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePage"
        },
        "description": "Creates a new page resource in the system. The request requires page-specific attributes such as title. The response includes the full representation of the created page, including its associated tiles and data sources. Additionally, a Location header is provided with the URI of the newly created resource."
      }
    },
    "/dashboard-module/pages/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific page",
        "tags": [
          "Dashboard module",
          "Pages"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOnePage"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page",
        "x-stoplight": {
          "id": "b0t09vs9q9psg"
        },
        "description": "Fetches the details of a specific page using its unique ID. The response includes the page‚Äôs metadata (e.g., ID and title), associated tiles and data sources."
      },
      "patch": {
        "summary": "Update an existing page",
        "tags": [
          "Dashboard module",
          "Pages"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedPage"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "patch-dashboard-module-page",
        "x-stoplight": {
          "id": "kvlujp2vqimlr"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePage"
        },
        "description": "Partially updates the attributes of an existing page identified by its unique ID. The update can modify metadata, such as the page‚Äôs title, without requiring the full object."
      },
      "delete": {
        "summary": "Delete an existing page",
        "tags": [
          "Dashboard module",
          "Pages"
        ],
        "responses": {
          "204": {
            "description": "The page was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page",
        "x-stoplight": {
          "id": "p4tipzawu4kyw"
        },
        "description": "Deletes a specific page identified by its unique ID from the system. This action is irreversible and will remove the page and its associated data from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/data-source": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available data sources for a page",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleDataSources"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-data-sources",
        "x-stoplight": {
          "id": "tsadlbmk7sx0j"
        },
        "description": "Fetches a list of data sources associated with a specific page. Data sources represent attributes or measurements related to the tile, such as device state, weather location, or timezone."
      },
      "post": {
        "summary": "Create a new data source for a specific page",
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-data-source",
        "x-stoplight": {
          "id": "k20cgsmczl5ni"
        },
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "description": "Creates a new data source for a specific page. The data source can include metadata such as associated device, timezone and weather location. The response contains the full representation of the created data source, including its unique identifier, associated tile, and metadata.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageDataSource"
        }
      }
    },
    "/dashboard-module/pages/{pageId}/data-source/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific data source for a page",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-data-source",
        "x-stoplight": {
          "id": "j5uyu0095ucs2"
        },
        "description": "Fetches detailed information about a specific data source associated with a page using its unique ID. The response includes metadata such as the data source‚Äôs associated device, channel, value, and associated tile."
      },
      "patch": {
        "summary": "Update and existing data source for a specific page",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-data-source",
        "x-stoplight": {
          "id": "pyt6cxwaav5ga"
        },
        "description": "Partially updates the details of a specific data source associated with a page. This operation allows modifications to attributes such as the data source‚Äôs associated device, channel, value, or metadata, while preserving its unique identifier and association with the tile.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageDataSource"
        }
      },
      "delete": {
        "summary": "Delete a specific data source from a page",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "204": {
            "description": "The data source was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-data-source",
        "x-stoplight": {
          "id": "wev9gggyfqfej"
        },
        "description": "Deletes a specific data source associated with a page using its unique ID. This operation is irreversible and removes the property from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/tiles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available page tiles",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleTiles"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-tiles",
        "x-stoplight": {
          "id": "efkjuhaz0kpfi"
        },
        "description": "Fetches a list of tiles associated with a specific page. Tiles represent widgets that can be used for displaying data, such as device state, actual clock."
      },
      "post": {
        "summary": "Create a new tile for a page",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-tile",
        "x-stoplight": {
          "id": "166ap1v02f189"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageTile"
        },
        "description": "Creates a new tile associated with a specific page. Tiles represent widgets that can display device state or actual clock."
      }
    },
    "/dashboard-module/pages/{pageId}/tiles/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific tile for a page",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-tile",
        "x-stoplight": {
          "id": "tmpg806ixg7ra"
        },
        "description": "Fetches detailed information about a specific tile associated with a page using its unique ID. The response includes metadata such as the tiles‚Äôs position, ID, associated page, and timestamps."
      },
      "patch": {
        "summary": "Update an existing tile for a page",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-tile",
        "x-stoplight": {
          "id": "gpa7ktqqx9jnf"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageTile"
        },
        "description": "Partially updates the attributes of a specific tile associated with a page using its unique ID. The update can modify metadata, such as the tile‚Äôs position or size, without requiring the full object."
      },
      "delete": {
        "summary": "Delete a specific tile for a page",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "204": {
            "description": "The tile was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-tile",
        "x-stoplight": {
          "id": "emmc0nl2xgknh"
        },
        "description": "Deletes a specific tile associated with a page using its unique ID. This action is irreversible and will remove the tile and its associated data from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/tiles/{tileId}/data-source": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/tileId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available data sources for a page‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleDataSources"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-tile-data-sources",
        "x-stoplight": {
          "id": "ribxt6dq73mc5"
        },
        "description": "Fetches a list of data sources associated with a specific tile of a page. Data sources represent attributes or measurements related to the tile, such as device state, weather location, or timezone."
      },
      "post": {
        "summary": "Create a new data source for a specific page‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-tile-data-source",
        "x-stoplight": {
          "id": "nxoj19wyax8bj"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageTileDataSource"
        },
        "description": "Creates a new data source for a specific page tile. The data source can include metadata such as associated device, timezone and weather location. The response contains the full representation of the created data source, including its unique identifier, associated tile, and metadata."
      }
    },
    "/dashboard-module/pages/{pageId}/tiles/{tileId}/data-source/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/tileId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific data source for a page‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/BadRequestError"
          }
        },
        "operationId": "get-dashboard-module-page-tile-data-source",
        "x-stoplight": {
          "id": "kxac7lwee9i4f"
        },
        "description": "Fetches detailed information about a specific data source associated with a page tile using its unique ID. The response includes metadata such as the data source‚Äôs associated device, channel, value, and associated tile."
      },
      "patch": {
        "summary": "Update and existing data source for a specific page‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-tile-data-source",
        "x-stoplight": {
          "id": "f9oimyx0inrte"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageTileDataSource"
        },
        "description": "Partially updates the details of a specific data source associated with a page tile. This operation allows modifications to attributes such as the data source‚Äôs associated device, channel, value, or metadata, while preserving its unique identifier and association with the tile."
      },
      "delete": {
        "summary": "Delete a specific data source from a page‚Äôs tile.",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "204": {
            "description": "The data source was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-tile-data-source",
        "x-stoplight": {
          "id": "my8yc54kupmpl"
        },
        "description": "Deletes a specific data source associated with a page tile using its unique ID. This operation is irreversible and removes the property from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/cards": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available page cards",
        "tags": [
          "Dashboard module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleCards"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-cards",
        "x-stoplight": {
          "id": "m0jqsjif3q1aq"
        },
        "description": "Fetches a list of cards associated with a specific page. Cards represent widgets that can be used for displaying data, such as device state, actual clock."
      },
      "post": {
        "summary": "Create a new card for a page",
        "tags": [
          "Dashboard module"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedCard"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-card",
        "x-stoplight": {
          "id": "hhu74jk9da0zu"
        },
        "description": "Creates a new card associated with a specific page. Cards represent widgets that can display device state or actual clock.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageCard"
        }
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific card for a page",
        "tags": [
          "Dashboard module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneCard"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-card",
        "x-stoplight": {
          "id": "iuvqz4c3xcct1"
        },
        "description": "Fetches detailed information about a specific card associated with a page using its unique ID. The response includes metadata such as the card‚Äôs position, ID, associated page, and tiles."
      },
      "patch": {
        "summary": "Update an existing card for a page",
        "tags": [
          "Dashboard module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedCard"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-card",
        "x-stoplight": {
          "id": "5chfmmdyfqd5c"
        },
        "description": "Partially updates the attributes of a specific card associated with a page using its unique ID. The update can modify metadata, such as the card‚Äôs position or title, without requiring the full object.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageCard"
        }
      },
      "delete": {
        "summary": "Delete a specific card for a page",
        "tags": [
          "Dashboard module"
        ],
        "responses": {
          "204": {
            "description": "The card was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-card",
        "x-stoplight": {
          "id": "9yzlp3a9s9upg"
        },
        "description": "Deletes a specific card associated with a page using its unique ID. This action is irreversible and will remove the card and its associated data from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/tiles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available card tiles",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleTiles"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-card-tiles",
        "x-stoplight": {
          "id": "120ph09zdezzs"
        },
        "description": "Fetches a list of tiles associated with a specific card. Tiles represent widgets that can be used for displaying data, such as device state, actual clock."
      },
      "post": {
        "summary": "Create a new tile for a card",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-card-tile",
        "x-stoplight": {
          "id": "1yrx9bvmz1l5s"
        },
        "description": "Creates a new tile associated with a specific card. Tiles represent widgets that can display device state or actual clock.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageCardTile"
        }
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/tiles/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific tile for a card",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-card-tile",
        "x-stoplight": {
          "id": "7ufct05amljiy"
        },
        "description": "Fetches detailed information about a specific tile associated with a card using its unique ID. The response includes metadata such as the tiles‚Äôs position, ID, associated page, and timestamps."
      },
      "patch": {
        "summary": "Update an existing tile for a card",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedTile"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-card-tile",
        "x-stoplight": {
          "id": "rykjk4eows7g1"
        },
        "description": "Partially updates the attributes of a specific tile associated with a card using its unique ID. The update can modify metadata, such as the tile‚Äôs position or size, without requiring the full object.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageCardTile"
        }
      },
      "delete": {
        "summary": "Delete a specific tile for a card",
        "tags": [
          "Dashboard module",
          "Tiles"
        ],
        "responses": {
          "204": {
            "description": "The tile was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-card-tile",
        "x-stoplight": {
          "id": "tcmpupjezz0kb"
        },
        "description": "Deletes a specific tile associated with a card using its unique ID. This action is irreversible and will remove the tile and its associated data from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/tiles/{tileId}/data-source": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        },
        {
          "$ref": "#/components/parameters/tileId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available data sources for a card‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleDataSources"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-car-tile-data-sources",
        "x-stoplight": {
          "id": "0x95pikj3b2aa"
        },
        "description": "Fetches a list of data sources associated with a specific tile of a card. Data sources represent attributes or measurements related to the tile, such as device state, weather location, or timezone."
      },
      "post": {
        "summary": "Create a new data source for a specific card‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-card-tile-data-source",
        "x-stoplight": {
          "id": "iue8c2ivvw08g"
        },
        "description": "Creates a new data source for a specific card tile. The data source can include metadata such as associated device, timezone and weather location. The response contains the full representation of the created data source, including its unique identifier, associated tile, and metadata.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageCardTileDataSource"
        }
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/tiles/{tileId}/data-source/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        },
        {
          "$ref": "#/components/parameters/tileId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific data source for a card‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-card-tile-data-source",
        "x-stoplight": {
          "id": "dhzn81742yx5o"
        },
        "description": "Fetches detailed information about a specific data source associated with a card tile using its unique ID. The response includes metadata such as the data source‚Äôs associated device, channel, value, and associated tile."
      },
      "patch": {
        "summary": "Update and existing data source for a specific card‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-card-tile-data-source",
        "x-stoplight": {
          "id": "ir7m7h8ih94rg"
        },
        "description": "Partially updates the details of a specific data source associated with a card tile. This operation allows modifications to attributes such as the data source‚Äôs associated device, channel, value, or metadata, while preserving its unique identifier and association with the tile.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageCardTileDataSource"
        }
      },
      "delete": {
        "summary": "Delete a specific data source from a card‚Äôs tile",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "204": {
            "description": "The data source was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-card-tile-data-source",
        "x-stoplight": {
          "id": "rj8ijxg5ndtih"
        },
        "description": "Deletes a specific data source associated with a card tile using its unique ID. This operation is irreversible and removes the property from the system."
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/data-source": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        }
      ],
      "get": {
        "summary": "Retrieve a list of all available data sources for a card",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardMultipleDataSources"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-car-data-sources",
        "x-stoplight": {
          "id": "wb1vzk6dbty1u"
        },
        "description": "Fetches a list of data sources associated with a specific card. Data sources represent attributes or measurements related to the card, such as device state, weather location, or timezone."
      },
      "post": {
        "summary": "Create a new data source for a specific card",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/DashboardCreatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "create-dashboard-module-page-card-data-source",
        "x-stoplight": {
          "id": "zcqrvlk309wxk"
        },
        "description": "Creates a new data source for a specific card. The data source can include metadata such as associated device, timezone and weather location. The response contains the full representation of the created data source, including its unique identifier, associated tile, and metadata.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardCreatePageCardDataSource"
        }
      }
    },
    "/dashboard-module/pages/{pageId}/cards/{cardId}/data-source/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pageId"
        },
        {
          "$ref": "#/components/parameters/cardId"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "summary": "Retrieve details of a specific data source for a card",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardOneDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-dashboard-module-page-card-data-source",
        "x-stoplight": {
          "id": "eaqicv9lsrv1m"
        },
        "description": "Fetches detailed information about a specific data source associated with a card using its unique ID. The response includes metadata such as the data source‚Äôs associated device, channel, value, and associated tile."
      },
      "patch": {
        "summary": "Update and existing data source for a specific card",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DashboardUpdatedDataSource"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-dashboard-module-page-card-data-source",
        "x-stoplight": {
          "id": "42gpilzq6asn7"
        },
        "description": "Partially updates the details of a specific data source associated with a card. This operation allows modifications to attributes such as the data source‚Äôs associated device, channel, value, or metadata, while preserving its unique identifier and association with the tile.",
        "requestBody": {
          "$ref": "#/components/requestBodies/DashboardUpdatePageCardDataSource"
        }
      },
      "delete": {
        "summary": "Delete a specific data source from a card",
        "tags": [
          "Dashboard module",
          "Data source"
        ],
        "responses": {
          "204": {
            "description": "The data source was successfully deleted. No content is returned in the response body."
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "delete-dashboard-module-page-card-data-source",
        "x-stoplight": {
          "id": "j5z9vsx6lzui3"
        },
        "description": "Deletes a specific data source associated with a card using its unique ID. This operation is irreversible and removes the property from the system."
      }
    },
    "/config-module/config": {
      "get": {
        "summary": "Retrieve full configuration",
        "tags": [
          "Configuration module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigApp"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-config-module-config",
        "x-stoplight": {
          "id": "uhys4zvzf7dll"
        },
        "description": "Retrieves the complete smart panel configuration, including audio, display, language, and weather settings."
      }
    },
    "/config-module/config/{section}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "enum": [
              "audio",
              "display",
              "language",
              "weather"
            ],
            "example": "audio"
          },
          "name": "section",
          "in": "path",
          "required": true,
          "description": "The configuration section name."
        }
      ],
      "get": {
        "summary": "Retrieve specific configuration section",
        "tags": [
          "Configuration module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigSection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-config-module-config-section",
        "x-stoplight": {
          "id": "wdef6qpxzm4rf"
        },
        "description": "Retrieves a specific configuration section, such as audio, display, language, or weather."
      },
      "patch": {
        "summary": "Update specific configuration section",
        "tags": [
          "Configuration module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigSection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "update-config-module-config-section",
        "x-stoplight": {
          "id": "6k4pg04s6h8mk"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ConfigUpdate"
        },
        "description": "Updates a specific configuration section, such as audio, display, language, or weather. Only the provided fields will be modified."
      }
    },
    "/system-module/system/info": {
      "get": {
        "summary": "Retrieve system information",
        "description": "Fetches detailed system information, including CPU load, memory usage, storage details, temperature readings, OS version, network statistics, and display settings.",
        "tags": [
          "System module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SystemSystemInfo"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-system-module-system-info",
        "x-stoplight": {
          "id": "7qlp6zqq95vtu"
        }
      }
    },
    "/system-module/system/throttle": {
      "get": {
        "summary": "Retrieve system throttling status",
        "description": "Checks the system‚Äôs throttling status to determine if any CPU, power, or thermal restrictions have been applied.",
        "tags": [
          "System module"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SystemSystemThrottling"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-system-module-system-throttle",
        "x-stoplight": {
          "id": "ldqqd1hphqeit"
        }
      }
    },
    "/weather-module/weather": {
      "get": {
        "summary": "Retrieve current weather conditions",
        "tags": [
          "Weather module",
          "Weather"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/WeatherLocationWeather"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-weather-module-weather",
        "x-stoplight": {
          "id": "9ai79cit7enpd"
        },
        "description": "Fetches real-time weather data, including temperature, humidity, wind speed, and other meteorological details for a specified location."
      }
    },
    "/weather-module/geolocation/city-to-coordinates": {
      "get": {
        "summary": "Convert city name to geographical coordinates",
        "tags": [
          "Weather module",
          "Geolocation"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/WeatherGeolocation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-weather-module-geolocation",
        "x-stoplight": {
          "id": "rlwoo5pio9txr"
        },
        "description": "Retrieves latitude and longitude based on a given city name. Useful for mapping and location-based services.",
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the city for which geographical coordinates are requested."
          }
        ]
      },
      "parameters": []
    },
    "/weather-module/geolocation/coordinates-to-city": {
      "get": {
        "summary": "Convert coordinates to city name",
        "tags": [
          "Weather module",
          "Geolocation"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/WeatherGeolocation"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "operationId": "get-weather-module-geolocation-coordinates-to-city",
        "x-stoplight": {
          "id": "h82zr9vj0lrii"
        },
        "description": "Returns the city name based on provided latitude and longitude values. Useful for reverse geocoding applications.",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "description": "Latitude of the location for reverse geocoding."
          },
          {
            "name": "lon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            },
            "description": "Longitude of the location for reverse geocoding."
          }
        ]
      }
    },
    "/third-party/webhook": {
      "servers": [
        {
          "url": "http://third-party.device.local",
          "description": "Dummy local URL for third-party device webhook"
        }
      ],
      "put": {
        "summary": "Send command to third-party device",
        "description": "This endpoint is used to send property update commands to a third-party device. The backend calls this webhook with one or more property updates. The third-party device should process the updates and return a status response.\n\n**The actual webhook path must be defined on the third-party device level**, and the backend must be configured accordingly to call the correct endpoint.",
        "tags": [
          "Devices module"
        ],
        "responses": {
          "204": {
            "description": "No Content. Indicates that the request was successfully processed and no further response is required."
          },
          "207": {
            "description": "Multi-Status. Indicates that some or all property updates failed. The response body will include detailed status information for each property.",
            "$ref": "#/components/responses/DevicesThirdPartyDevicePropertyUpdateResult"
          },
          "400": {
            "description": "Bad Request. Indicates that the request was invalid, possibly due to missing or malformed data."
          },
          "500": {
            "description": "Internal Server Error. Indicates a server-side error while processing the request."
          }
        },
        "operationId": "put-third-party-webhook",
        "x-stoplight": {
          "id": "80k76m552aeyd"
        },
        "requestBody": {
          "description": "Payload containing a list of properties to be updated on the third-party device.",
          "$ref": "#/components/requestBodies/DevicesThirdPartyDevicePropertyUpdateRequest"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DevicesDeviceBase": {
        "title": "Device",
        "x-stoplight": {
          "id": "wfswnpctm20bu"
        },
        "type": "object",
        "description": "Represents the core attributes of a device, including its unique identifier, name, and category. This model forms the foundation for more detailed device representations, such as those including related entities (e.g., channels, properties, or controls).",
        "examples": [
          {
            "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "category": "generic",
            "name": "Thermostat",
            "description": "Living room thermostat",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z"
          }
        ],
        "required": [
          "id",
          "type",
          "category",
          "name",
          "description",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "1j3zimb47rck2"
            },
            "format": "uuid",
            "example": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "description": "System-generated unique identifier for the device.",
            "readOnly": true
          },
          "category": {
            "x-stoplight": {
              "id": "9or5d5zqi89rg"
            },
            "$ref": "#/components/schemas/DevicesDeviceCategory",
            "description": "Type of the device, defining its purpose or category (e.g., thermostat, lighting).",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "370yn2wjqmwah"
            },
            "example": "Thermostat",
            "description": "Human-readable name of the device."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "771x6xs25cs14"
            },
            "default": null,
            "example": "Living room thermostat",
            "description": "Optional detailed description of the device."
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "2az6dv46648bd"
            },
            "format": "date-time",
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp indicating when the device was created.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "7stmq9l886h5x"
            },
            "format": "date-time",
            "default": null,
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp indicating when the device was last updated, if applicable.",
            "readOnly": true
          }
        }
      },
      "DevicesThirdPartyDevice": {
        "title": "Third-Party Device",
        "x-stoplight": {
          "id": "a0uk0jygfs827"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DevicesDeviceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "wdb3q6spt1312"
            },
            "required": [
              "type",
              "service_address"
            ],
            "properties": {
              "type": {
                "const": "third-party",
                "type": "string",
                "x-stoplight": {
                  "id": "wm9vz6gkzu6ls"
                },
                "default": "third-party",
                "example": "third-party",
                "readOnly": true
              },
              "service_address": {
                "type": "string",
                "x-stoplight": {
                  "id": "k46e5ak984mjn"
                },
                "description": "The address of the third-party service used by the third-party device. It can be a URL or IP address with an optional port.",
                "example": "http://192.168.1.100/webhook",
                "pattern": "^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(:\\d+)?(\\/.*)?$"
              }
            }
          }
        ],
        "examples": [
          {
            "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "type": "third-party",
            "category": "generic",
            "name": "Thermostat",
            "description": "Living room thermostat",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z",
            "service_address": "http://192.168.1.100/webhook"
          }
        ],
        "description": "The ThirdPartyDevice model represents a software-based or non-physical device that is capable of being controlled or monitored. Unlike physical devices, a ThirdPartyDevice interacts with external systems through a service_address. This address allows for integration with third-party APIs or services, enabling remote control and monitoring capabilities."
      },
      "DevicesCreateDeviceBase": {
        "title": "Create Device",
        "description": "Schema for creating a new device. This includes essential attributes like type, category, and name, along with optional details such as a description.",
        "x-stoplight": {
          "id": "22d922217dbce"
        },
        "type": "object",
        "examples": [
          {
            "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "type": "third-party",
            "category": "generic",
            "name": "Thermostat",
            "description": "Living room thermostat"
          }
        ],
        "required": [
          "type",
          "category",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "f30dv2c3m8puq"
            },
            "format": "uuid",
            "example": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "description": "Unique identifier for the device. Optional during creation and system-generated if not provided."
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "gz72691deh0q9"
            },
            "example": "third-party",
            "description": "The type of the device. Indicates its nature, such as a third-party device or a specific module type."
          },
          "category": {
            "x-stoplight": {
              "id": "yznwdiklwkpo0"
            },
            "$ref": "#/components/schemas/DevicesDeviceCategory",
            "description": "Type of the device, defining its purpose or category (e.g., thermostat, lighting)."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "pbg0ay9exok1a"
            },
            "example": "Thermostat",
            "description": "Human-readable name of the device."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "dih42w3hjny4o"
            },
            "example": "Living room thermostat",
            "description": "Optional detailed description of the device."
          }
        }
      },
      "DevicesCreateThirdPartyDevice": {
        "title": "Create Third-Party Device",
        "description": "Schema for creating a third-party device, including its type, category, and a third-party service address.",
        "x-stoplight": {
          "id": "7c8fup61h2fxj"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DevicesCreateDeviceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "2sb54yp6v5uyo"
            },
            "required": [
              "type",
              "service_address"
            ],
            "properties": {
              "type": {
                "const": "third-party",
                "type": "string",
                "x-stoplight": {
                  "id": "dyxpjou1zjwco"
                },
                "default": "third-party",
                "example": "third-party"
              },
              "service_address": {
                "type": "string",
                "x-stoplight": {
                  "id": "qrmo9xub0vdia"
                },
                "description": "The address of the third-party service used by the third-party device. It can be a URL or IP address with an optional port.",
                "example": "http://192.168.1.100/webhook",
                "pattern": "^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(:\\d+)?(\\/.*)?$"
              }
            }
          }
        ],
        "examples": [
          {
            "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "type": "third-party",
            "category": "generic",
            "name": "Thermostat",
            "description": "Living room thermostat",
            "service_address": "http://192.168.1.100/webhook"
          }
        ]
      },
      "DevicesCreateDeviceControl": {
        "title": "Create Device Control",
        "description": "Schema for creating a new device control, which represents an action the device can perform.",
        "x-stoplight": {
          "id": "8xdfujh2fwv06"
        },
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "1ibr1esr6zlbo"
            },
            "format": "uuid",
            "example": "227349b1-a2a7-439a-b296-59f002faa8ce",
            "description": "Unique identifier for the control. Optional during creation and system-generated if not provided."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "cazw8fdnn5ow7"
            },
            "example": "reboot",
            "description": "The name of the control, representing the action it performs."
          }
        },
        "examples": [
          {
            "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
            "name": "reboot"
          }
        ]
      },
      "DevicesCreateChannel": {
        "title": "Create Channel",
        "description": "Schema for creating a new channel, representing a functional category of a device such as temperature, light, or motion.",
        "x-stoplight": {
          "id": "o0m7sgerj8406"
        },
        "type": "object",
        "required": [
          "category",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "mnpvwvu81n732"
            },
            "format": "uuid",
            "example": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "description": "Unique identifier for the channel. Optional during creation and system-generated if not provided."
          },
          "category": {
            "x-stoplight": {
              "id": "mti97xem11xc5"
            },
            "$ref": "#/components/schemas/DevicesChannelCategory",
            "description": "Type of the channel, indicating its functional category (e.g., temperature, light)."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "n9ttmo9kgh2cp"
            },
            "example": "Temperature Sensor",
            "description": "Human-readable name of the channel."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "3b0o9j84ouz07"
            },
            "example": "Living room temperature sensor",
            "description": "Optional description of the channel‚Äôs purpose or functionality."
          }
        },
        "examples": [
          {
            "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "category": "generic",
            "name": "Temperature Sensor",
            "description": "Living room temperature sensor"
          }
        ]
      },
      "DevicesCreateChannelControl": {
        "title": "Create Channel Control",
        "description": "Schema for creating a new control within a channel, representing a specific action or command that can be performed.",
        "x-stoplight": {
          "id": "zncjt0gpcrhzh"
        },
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "dtku653fnlol7"
            },
            "format": "uuid",
            "example": "9431cc2d-d447-44c1-b2d0-4398624e4921",
            "description": "Unique identifier for the control. Optional during creation and system-generated if not provided."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "b5s4bg4552amn"
            },
            "example": "reset",
            "description": "The name of the control, representing the action it performs."
          }
        },
        "examples": [
          {
            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
            "name": "reset"
          }
        ]
      },
      "DevicesCreateChannelProperty": {
        "title": "Create Channel Property",
        "description": "Schema for creating a new property within a channel, representing a specific characteristic or functional value.",
        "x-stoplight": {
          "id": "zekvtgq60jda0"
        },
        "type": "object",
        "examples": [
          {
            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
            "category": "generic",
            "name": "Thermostat mode",
            "permission": [
              "ro"
            ],
            "data_type": "char",
            "unit": "¬∞C",
            "format": [
              "heat",
              "auto"
            ],
            "invalid": -999,
            "step": 0.5,
            "value": 22.1
          }
        ],
        "required": [
          "category",
          "permission",
          "data_type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "8k8lyeuv9o3py"
            },
            "format": "uuid",
            "example": "9431cc2d-d447-44c1-b2d0-4398624e4921",
            "description": "Unique identifier for the property. Optional during creation and system-generated if not provided."
          },
          "category": {
            "x-stoplight": {
              "id": "1r0pj1cuo7v0e"
            },
            "$ref": "#/components/schemas/DevicesChannelPropertyCategory",
            "description": "Defines the category of the property, representing its functionality or characteristic."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "sn87ndox4bn3r"
            },
            "example": "Thermostat mode",
            "description": "Optional name of the property for easier identification."
          },
          "permission": {
            "x-stoplight": {
              "id": "cn78o54ibts6e"
            },
            "description": "Access level for the property: read-only (ro), read-write (rw), write-only (wo), or event-only (ev).",
            "type": "array",
            "items": {
              "x-stoplight": {
                "id": "vn0iosxbwhh27"
              },
              "enum": [
                "ro",
                "rw",
                "wo",
                "ev"
              ]
            }
          },
          "data_type": {
            "x-stoplight": {
              "id": "mp13ftetja0pb"
            },
            "enum": [
              "char",
              "uchar",
              "short",
              "ushort",
              "int",
              "uint",
              "float",
              "bool",
              "string",
              "enum",
              "unknown"
            ],
            "description": "Data type of the property‚Äôs value, e.g., string, integer, or boolean."
          },
          "unit": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "cxxqjog5m7rbw"
            },
            "example": "¬∞C",
            "description": "Measurement unit associated with the property‚Äôs value, if applicable."
          },
          "format": {
            "type": "array",
            "nullable": true,
            "x-stoplight": {
              "id": "mylj0d80chvrb"
            },
            "example": [
              "heat",
              "auto"
            ],
            "description": "List of valid values or states for the property, where applicable.",
            "items": {
              "x-stoplight": {
                "id": "lc54dbhfrx19k"
              },
              "type": [
                "string",
                "number"
              ]
            }
          },
          "invalid": {
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "x-stoplight": {
              "id": "ih67m06vog5jm"
            },
            "example": -999,
            "description": "Value to represent an invalid state for the property."
          },
          "step": {
            "type": "number",
            "nullable": true,
            "x-stoplight": {
              "id": "vwuksdn1m7c1c"
            },
            "example": 0.5,
            "description": "Step value indicating the smallest increment for the property."
          },
          "value": {
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "x-stoplight": {
              "id": "fv5ctfmnly21e"
            },
            "example": 22.1,
            "description": "Current value of the property."
          }
        }
      },
      "DevicesUpdateDeviceBase": {
        "title": "Update Device",
        "description": "Schema for updating basic details of a device, including its name and description.",
        "x-stoplight": {
          "id": "lxei1xmiz9wvj"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "oei7p1gyxmxry"
            },
            "example": "Thermostat",
            "description": "Human-readable name of the device."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "jw2wv36sfvtaw"
            },
            "example": "Living room thermostat",
            "description": "Optional detailed description of the device."
          }
        },
        "examples": [
          {
            "name": "Thermostat",
            "description": "Living room thermostat"
          }
        ]
      },
      "DevicesUpdateThirdPartyDevice": {
        "title": "Update Third-Party Device",
        "description": "Schema for updating a third-party device, including its basic details and the service address it connects to.",
        "x-stoplight": {
          "id": "35449ja7ywco7"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DevicesUpdateDeviceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "85v754te34xc6"
            },
            "properties": {
              "service_address": {
                "type": "string",
                "x-stoplight": {
                  "id": "92t08yqsgmk0b"
                },
                "description": "The address of the third-party service used by the third-party device. It can be a URL or IP address with an optional port.",
                "example": "http://192.168.1.100/webhook",
                "pattern": "^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(:\\d+)?(\\/.*)?$"
              }
            }
          }
        ],
        "examples": [
          {
            "name": "Thermostat",
            "description": "Living room thermostat",
            "service_address": "http://192.168.1.100/webhook"
          }
        ]
      },
      "DevicesUpdateChannel": {
        "title": "Update Channel",
        "description": "Schema for updating a channel, including optional updates to its name and description.",
        "x-stoplight": {
          "id": "6lbjaf5fagznf"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "t0jo1dvujx5pv"
            },
            "example": "Temperature Sensor",
            "description": "Human-readable name of the channel."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "f06brebq5mghq"
            },
            "example": "Living room temperature sensor",
            "description": "Optional description of the channel‚Äôs purpose or functionality."
          }
        },
        "examples": [
          {
            "name": "Temperature Sensor",
            "description": "Living room temperature sensor"
          }
        ]
      },
      "DevicesUpdateChannelProperty": {
        "title": "Update Channel Property",
        "description": "Schema for updating a channel property, allowing updates to its name, unit, format, invalid state, step, and value.",
        "x-stoplight": {
          "id": "6zsg1d3wbiobc"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "1xjd7v2g613jb"
            },
            "example": "Thermostat mode",
            "description": "Optional name of the property for easier identification."
          },
          "unit": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "s8bylacce82wh"
            },
            "example": "¬∞C",
            "description": "Measurement unit associated with the property‚Äôs value, if applicable."
          },
          "format": {
            "type": "array",
            "nullable": true,
            "x-stoplight": {
              "id": "ubrtntdb2gjr7"
            },
            "example": [
              "heat",
              "auto"
            ],
            "description": "List of valid values or states for the property, where applicable.",
            "items": {
              "x-stoplight": {
                "id": "lc54dbhfrx19k"
              },
              "type": [
                "string",
                "number"
              ]
            }
          },
          "invalid": {
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "x-stoplight": {
              "id": "b3ycebphzr1u8"
            },
            "example": -999,
            "description": "Value to represent an invalid state for the property."
          },
          "step": {
            "type": "number",
            "nullable": true,
            "x-stoplight": {
              "id": "ah6cg6a9pw1p0"
            },
            "example": 0.5,
            "description": "Step value indicating the smallest increment for the property."
          },
          "value": {
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "x-stoplight": {
              "id": "t2df10h8gb9ch"
            },
            "example": 22.1,
            "description": "Current value of the property."
          }
        },
        "examples": [
          {
            "name": "Thermostat mode",
            "unit": "¬∞C",
            "format": [
              "heat",
              "auto"
            ],
            "invalid": -999,
            "step": 0.5,
            "value": 22.1
          }
        ]
      },
      "DevicesDevice": {
        "title": "Device",
        "description": "Represents a physical or third-party device that can be controlled or monitored. Devices have associated channels and controls, defining their capabilities and properties.",
        "x-stoplight": {
          "id": "8ez1r263irnam"
        },
        "discriminator": {
          "propertyName": "type"
        },
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DevicesThirdPartyDevice"
              }
            ]
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "ivnhxgn8k0orf"
            },
            "required": [
              "type",
              "controls",
              "channels"
            ],
            "properties": {
              "type": {
                "const": "third-party",
                "type": "string",
                "x-stoplight": {
                  "id": "l7bp8i50x2ubc"
                },
                "default": "third-party",
                "example": "third-party",
                "description": "Type of the device, such as 'third-party', ‚Äôshelly', or 'matter'.",
                "readOnly": true
              },
              "controls": {
                "type": "array",
                "x-stoplight": {
                  "id": "5vjqgqr1awkn6"
                },
                "items": {
                  "$ref": "#/components/schemas/DevicesDeviceControl",
                  "x-stoplight": {
                    "id": "ub54dbhnndn50"
                  }
                }
              },
              "channels": {
                "type": "array",
                "x-stoplight": {
                  "id": "azxx42gdiwand"
                },
                "items": {
                  "$ref": "#/components/schemas/DevicesChannel",
                  "x-stoplight": {
                    "id": "yu2ubs4wil02e"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "category": "generic",
            "name": "Thermostat",
            "description": "Living room thermostat",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z",
            "controls": [
              {
                "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                "name": "reboot",
                "device": "8dca31e6-c85b-4a6b-bfb4-205d45d9b3bd",
                "created_at": "2024-12-11T12:00:00Z",
                "updated_at": "2024-12-11T12:00:00Z"
              }
            ],
            "channels": [
              {
                "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                "category": "generic",
                "name": "Temperature Sensor",
                "description": "Living room temperature sensor",
                "device": "8dca31e6-c85b-4a6b-bfb4-205d45d9b3bd",
                "created_at": "2024-12-11T12:00:00Z",
                "updated_at": "2024-12-11T12:00:00Z",
                "controls": [
                  {
                    "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                    "name": "reset",
                    "channel": "e03ac425-e659-44cf-b8d7-f4176416fcf2",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  }
                ],
                "properties": [
                  {
                    "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                    "category": "generic",
                    "name": "Thermostat mode",
                    "permission": [
                      "ro"
                    ],
                    "data_type": "char",
                    "unit": "¬∞C",
                    "format": [
                      "heat",
                      "auto"
                    ],
                    "invalid": -999,
                    "step": 0.5,
                    "value": 22.1,
                    "channel": "e03ac425-e659-44cf-b8d7-f4176416fcf2",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  }
                ]
              }
            ]
          }
        ]
      },
      "DevicesDeviceControl": {
        "title": "Device Control",
        "description": "A Device control is an action that can be executed at the device level. It provides operational commands like restarting a device or updating its firmware.",
        "x-stoplight": {
          "id": "ddif3q18prpft"
        },
        "type": "object",
        "examples": [
          {
            "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
            "name": "reboot",
            "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z"
          }
        ],
        "required": [
          "id",
          "name",
          "device",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "5e792vq2inv1x"
            },
            "format": "uuid",
            "example": "227349b1-a2a7-439a-b296-59f002faa8ce",
            "description": "System-generated unique identifier for the control.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "k32yq6xkyh3qi"
            },
            "example": "reboot",
            "description": "The name of the control, representing the action it performs."
          },
          "device": {
            "x-stoplight": {
              "id": "i23uyqr81zp0b"
            },
            "description": "The device to which this control belongs.",
            "type": "string",
            "format": "uuid",
            "example": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "k0qo94w66mu6p"
            },
            "format": "date-time",
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was created.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "w10t2zf4lm2fh"
            },
            "format": "date-time",
            "default": null,
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was last updated, if applicable.",
            "readOnly": true
          }
        }
      },
      "DevicesChannel": {
        "title": "Channel",
        "description": "Defines a functional unit of a device, such as a sensor, actuator, or informational component. Channels group related properties and controls for modular device functionality.",
        "x-stoplight": {
          "id": "grbbbzb0zkc3d"
        },
        "examples": [
          {
            "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "category": "generic",
            "name": "Temperature Sensor",
            "description": "Living room temperature sensor",
            "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z",
            "controls": [
              {
                "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                "name": "reset",
                "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                "created_at": "2024-12-11T12:00:00Z",
                "updated_at": "2024-12-11T12:00:00Z"
              }
            ],
            "properties": [
              {
                "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                "category": "generic",
                "name": "Thermostat mode",
                "permission": [
                  "ro"
                ],
                "data_type": "char",
                "unit": "¬∞C",
                "format": [
                  "heat",
                  "auto"
                ],
                "invalid": -999,
                "step": 0.5,
                "value": 22.1,
                "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                "created_at": "2024-12-11T12:00:00Z",
                "updated_at": "2024-12-11T12:00:00Z"
              }
            ]
          }
        ],
        "type": "object",
        "required": [
          "id",
          "category",
          "name",
          "description",
          "device",
          "created_at",
          "updated_at",
          "controls",
          "properties"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "q7ufo87qnequx"
            },
            "format": "uuid",
            "description": "System-generated unique identifier for the channel.",
            "example": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "readOnly": true
          },
          "category": {
            "$ref": "#/components/schemas/DevicesChannelCategory",
            "x-stoplight": {
              "id": "zxmbaxvgjyuse"
            },
            "description": "Type of the channel, indicating its functional category (e.g., temperature, light)."
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "xy5q3gfdw3aox"
            },
            "example": "Temperature Sensor",
            "description": "Human-readable name of the channel."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "2fnlb66nz2u6n"
            },
            "default": null,
            "example": "Living room temperature sensor",
            "description": "Optional description of the channel‚Äôs purpose or functionality."
          },
          "device": {
            "x-stoplight": {
              "id": "jam6yjus02jl8"
            },
            "description": "The parent device to which this channel belongs.",
            "type": "string",
            "format": "uuid",
            "example": "332dda32-b7de-4557-956a-b6ed6c6799a4",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "vaz9of5p8umdm"
            },
            "format": "date-time",
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the channel was created.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "e0n6lwp06abw8"
            },
            "format": "date-time",
            "default": null,
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the channel was last updated, if applicable.",
            "readOnly": true
          },
          "controls": {
            "type": "array",
            "x-stoplight": {
              "id": "cwslddgr2c0xa"
            },
            "items": {
              "$ref": "#/components/schemas/DevicesChannelControl",
              "x-stoplight": {
                "id": "nttmom8bc1c00"
              }
            }
          },
          "properties": {
            "type": "array",
            "x-stoplight": {
              "id": "wm69egkymvfyx"
            },
            "items": {
              "$ref": "#/components/schemas/DevicesChannelProperty",
              "x-stoplight": {
                "id": "h784t8he2x27n"
              }
            }
          }
        }
      },
      "DevicesChannelControl": {
        "title": "Channel Control",
        "description": "A Channel control defines a specific action or command that can be executed for a channel. Examples include resetting a sensor or changing its operational mode.",
        "x-stoplight": {
          "id": "x2kwt3diqqz3u"
        },
        "type": "object",
        "examples": [
          {
            "id": "4b76637f-a8a6-45ba-965b-4819f4b57df2",
            "name": "reset",
            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z"
          }
        ],
        "required": [
          "id",
          "name",
          "channel",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "4b76637f-a8a6-45ba-965b-4819f4b57df2",
            "description": "System-generated unique identifier for the channel control.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "example": "reset",
            "description": "The name of the control, representing the action it performs."
          },
          "channel": {
            "x-stoplight": {
              "id": "5got05ye6dm59"
            },
            "description": "The channel to which this control belongs.",
            "type": "string",
            "format": "uuid",
            "example": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was created.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "default": null,
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was last updated, if applicable.",
            "readOnly": true
          }
        }
      },
      "DevicesChannelProperty": {
        "title": "Channel Property",
        "description": "A Channel property describes an individual attribute or measurable value associated with a channel. This includes parameters like brightness, temperature, or energy consumption, reflecting the channel‚Äôs current state or configuration.",
        "x-stoplight": {
          "id": "3e0c398lguycf"
        },
        "type": "object",
        "required": [
          "id",
          "category",
          "name",
          "permission",
          "data_type",
          "unit",
          "format",
          "invalid",
          "step",
          "value",
          "channel",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "uqzbpmq2q109y"
            },
            "format": "uuid",
            "example": "208f4790-21b0-4927-8835-7302d883a141",
            "description": "System-generated unique identifier for the channel property.",
            "readOnly": true
          },
          "category": {
            "x-stoplight": {
              "id": "e5tnn4i9sjkz0"
            },
            "$ref": "#/components/schemas/DevicesChannelPropertyCategory",
            "description": "Defines the category of the property, representing its functionality or characteristic.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "f29dcc9vvixeo"
            },
            "default": null,
            "example": "Thermostat mode",
            "description": "Optional name of the property for easier identification."
          },
          "permission": {
            "x-stoplight": {
              "id": "93kfdg1l3mput"
            },
            "description": "Access level for the property: read-only (ro), read-write (rw), write-only (wo), or event-only (ev).",
            "type": "array",
            "items": {
              "x-stoplight": {
                "id": "8ene83n92r3k0"
              },
              "enum": [
                "ro",
                "rw",
                "wo",
                "ev"
              ],
              "default": "ro",
              "example": "ro"
            },
            "readOnly": true,
            "example": [
              "ro"
            ]
          },
          "data_type": {
            "x-stoplight": {
              "id": "k1669ypobb8qt"
            },
            "enum": [
              "char",
              "uchar",
              "short",
              "ushort",
              "int",
              "uint",
              "float",
              "bool",
              "string",
              "enum",
              "unknown"
            ],
            "description": "Data type of the property‚Äôs value, e.g., string, integer, or boolean."
          },
          "unit": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "x8n66vj7goad2"
            },
            "default": null,
            "example": "¬∞C",
            "description": "Measurement unit associated with the property‚Äôs value, if applicable."
          },
          "format": {
            "type": "array",
            "nullable": true,
            "x-stoplight": {
              "id": "wqkyw7zvehe5y"
            },
            "default": null,
            "example": [
              "heat",
              "auto"
            ],
            "description": "List of valid values or states for the property, where applicable.",
            "items": {
              "x-stoplight": {
                "id": "ixsxpfpyue4i3"
              },
              "type": [
                "string",
                "number"
              ]
            }
          },
          "invalid": {
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "x-stoplight": {
              "id": "txfxd59qz30m6"
            },
            "default": null,
            "example": -999,
            "description": "Value to represent an invalid state for the property."
          },
          "step": {
            "type": "number",
            "nullable": true,
            "x-stoplight": {
              "id": "p1c4p0bym0ncz"
            },
            "default": null,
            "example": 0.5,
            "description": "Step value indicating the smallest increment for the property."
          },
          "value": {
            "x-stoplight": {
              "id": "4mtke3fkomycu"
            },
            "type": [
              "number",
              "string",
              "boolean",
              "null"
            ],
            "nullable": true,
            "default": null,
            "example": 22.1,
            "description": "Current value of the property."
          },
          "channel": {
            "x-stoplight": {
              "id": "sieukczrun44c"
            },
            "description": "Reference to the channel that this property belongs to.",
            "type": "string",
            "format": "uuid",
            "example": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "8qs6yhx9tpxkn"
            },
            "format": "date-time",
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was created.",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "7xp9qhjpztvqs"
            },
            "format": "date-time",
            "default": null,
            "example": "2024-12-11T12:00:00Z",
            "description": "Timestamp when the control was last updated, if applicable.",
            "readOnly": true
          }
        },
        "examples": [
          {
            "id": "208f4790-21b0-4927-8835-7302d883a141",
            "category": "generic",
            "name": "Thermostat mode",
            "permission": [
              "ro"
            ],
            "data_type": "char",
            "unit": "¬∞C",
            "format": [
              "heat",
              "auto"
            ],
            "invalid": -999,
            "step": 0.5,
            "value": 22.1,
            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
            "created_at": "2024-12-11T12:00:00Z",
            "updated_at": "2024-12-11T12:00:00Z"
          }
        ]
      },
      "DevicesDeviceCategory": {
        "title": "Device Category",
        "x-stoplight": {
          "id": "y66wyg5q7p53f"
        },
        "enum": [
          "generic",
          "air_conditioner",
          "air_dehumidifier",
          "air_humidifier",
          "air_purifier",
          "alarm",
          "camera",
          "door",
          "doorbell",
          "fan",
          "heater",
          "lighting",
          "lock",
          "media",
          "outlet",
          "pump",
          "robot_vacuum",
          "sensor",
          "speaker",
          "sprinkler",
          "switcher",
          "television",
          "thermostat",
          "valve",
          "window_covering"
        ],
        "description": "Defines the type of device, categorizing it by its primary function."
      },
      "DevicesChannelCategory": {
        "title": "Channel Category",
        "x-stoplight": {
          "id": "oxsx3rpa0mdo8"
        },
        "enum": [
          "generic",
          "air_particulate",
          "alarm",
          "battery",
          "camera",
          "carbon_dioxide",
          "carbon_monoxide",
          "contact",
          "cooler",
          "device_information",
          "door",
          "doorbell",
          "electrical_energy",
          "electrical_power",
          "fan",
          "flow",
          "heater",
          "humidity",
          "illuminance",
          "leak",
          "light",
          "lock",
          "media_input",
          "media_playback",
          "microphone",
          "motion",
          "nitrogen_dioxide",
          "occupancy",
          "outlet",
          "ozone",
          "pressure",
          "robot_vacuum",
          "smoke",
          "speaker",
          "sulphur_dioxide",
          "switcher",
          "television",
          "temperature",
          "thermostat",
          "valve",
          "volatile_organic_compounds",
          "window_covering"
        ],
        "description": "Represents a functional channel inside a device, responsible for a specific type of data or control."
      },
      "DevicesChannelPropertyCategory": {
        "title": "Channel Property Category",
        "x-stoplight": {
          "id": "p02su811jiuh1"
        },
        "enum": [
          "generic",
          "active",
          "angle",
          "brightness",
          "color_blue",
          "color_green",
          "color_red",
          "color_temperature",
          "color_white",
          "connection_type",
          "consumption",
          "current",
          "density",
          "detected",
          "direction",
          "distance",
          "duration",
          "event",
          "fault",
          "firmware_revision",
          "frequency",
          "hardware_revision",
          "hue",
          "humidity",
          "in_use",
          "infrared",
          "input_source",
          "level",
          "link_quality",
          "locked",
          "manufacturer",
          "measured",
          "model",
          "mode",
          "obstruction",
          "on",
          "over_current",
          "over_voltage",
          "pan",
          "peak_level",
          "percentage",
          "position",
          "power",
          "rate",
          "remaining",
          "remote_key",
          "saturation",
          "serial_number",
          "source",
          "speed",
          "status",
          "swing",
          "tampered",
          "temperature",
          "tilt",
          "track",
          "type",
          "units",
          "voltage",
          "volume",
          "zoom"
        ],
        "description": "Defines specific properties of a device channel that can be measured, controlled, or reported."
      },
      "DevicesThirdPartyDevicePropertyUpdateRequest": {
        "title": "Third-Party Device Property Update Request",
        "x-stoplight": {
          "id": "n121v01nvwzpp"
        },
        "type": "object",
        "description": "Represents a request to update properties on a third-party device.",
        "required": [
          "properties"
        ],
        "properties": {
          "properties": {
            "type": "array",
            "x-stoplight": {
              "id": "54ffgw5qs92bf"
            },
            "description": "Represents a single property update operation for a third-party device.",
            "items": {
              "x-stoplight": {
                "id": "fez2ah7cfe245"
              },
              "type": "object",
              "required": [
                "device",
                "channel",
                "property",
                "value"
              ],
              "properties": {
                "device": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "t9dv8u7i4f2as"
                  },
                  "description": "Unique identifier of the target device.",
                  "format": "uuid",
                  "example": "234e5678-a89b-22d3-c456-426614174133"
                },
                "channel": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "m66gth6kuly92"
                  },
                  "description": "Unique identifier of the target device channel.",
                  "format": "uuid",
                  "example": "456e7890-c89d-42d5-e678-626816194355"
                },
                "property": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "5c2l5y9vy9r8p"
                  },
                  "description": "Unique identifier of the property being updated.",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "format": "uuid"
                },
                "value": {
                  "x-stoplight": {
                    "id": "xo717q2412dxe"
                  },
                  "oneOf": [
                    {
                      "type": "string",
                      "x-stoplight": {
                        "id": "g0b6re4i105qi"
                      },
                      "description": "String value for the property."
                    },
                    {
                      "type": "number",
                      "x-stoplight": {
                        "id": "bivqyptx546jq"
                      },
                      "description": "Numeric value for the property."
                    },
                    {
                      "type": "boolean",
                      "x-stoplight": {
                        "id": "q49ujvyv2whz7"
                      },
                      "description": "Boolean value for the property."
                    }
                  ],
                  "description": "New value to be applied to the property."
                }
              }
            }
          }
        },
        "examples": [
          {
            "properties": [
              {
                "device": "234e5678-a89b-22d3-c456-426614174133",
                "channel": "456e7890-c89d-42d5-e678-626816194355",
                "property": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                "value": true
              }
            ]
          }
        ]
      },
      "DevicesThirdPartyDevicePropertyUpdateResult": {
        "title": "Third-Party Device Property Update Result",
        "x-stoplight": {
          "id": "7gbfwfnqutklv"
        },
        "type": "object",
        "description": "Response from the third-party device after processing the update request.",
        "examples": [
          {
            "properties": [
              {
                "device": "234e5678-a89b-22d3-c456-426614174133",
                "channel": "456e7890-c89d-42d5-e678-626816194355",
                "property": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                "status": -80003
              }
            ]
          }
        ],
        "required": [
          "properties"
        ],
        "properties": {
          "properties": {
            "type": "array",
            "x-stoplight": {
              "id": "z3z50101xcq1c"
            },
            "description": "List of processed properties and their update results.",
            "items": {
              "x-stoplight": {
                "id": "vpye1cfll4g9b"
              },
              "type": "object",
              "required": [
                "device",
                "channel",
                "property",
                "status"
              ],
              "properties": {
                "device": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "acgd6lho1wbn6"
                  },
                  "format": "uuid",
                  "example": "234e5678-a89b-22d3-c456-426614174133",
                  "description": "Unique identifier of the device for which the update was requested.",
                  "readOnly": true
                },
                "channel": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "g4i5wefiyzm7e"
                  },
                  "format": "uuid",
                  "example": "456e7890-c89d-42d5-e678-626816194355",
                  "description": "Unique identifier of the channel that was updated.",
                  "readOnly": true
                },
                "property": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "iupnh6y4xcsk6"
                  },
                  "format": "uuid",
                  "description": "Unique identifier of the property that was updated.",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082"
                },
                "status": {
                  "$ref": "#/components/schemas/DevicesThirdPartyErrorCode",
                  "x-stoplight": {
                    "id": "otcutlkatl7il"
                  },
                  "description": "Status code indicating the outcome of the update request. A value of 0 indicates success, while negative values indicate errors."
                }
              }
            },
            "readOnly": true
          }
        }
      },
      "DevicesThirdPartyErrorCode": {
        "title": "Third-Party Error Code",
        "description": "Error codes returned by third-party devices when processing requests.",
        "x-stoplight": {
          "id": "8t5kpsbyvnq5j"
        },
        "enum": [
          0,
          -80001,
          -80002,
          -80003,
          -80004,
          -80005,
          -80006,
          -80007,
          -80008,
          -80009,
          -80010,
          -80011
        ],
        "x-enum-descriptions": {
          "0": "Success. The request was processed successfully.",
          "-80001": "Request denied due to insufficient privileges.",
          "-80002": "Operation not supported in the current state (e.g., device is offline or locked).",
          "-80003": "Resource is busy, try again later.",
          "-80004": "Cannot write to a read-only property.",
          "-80005": "Cannot read from a write-only property.",
          "-80006": "Notification is not supported for this property.",
          "-80007": "Insufficient system resources to process the request.",
          "-80008": "Operation timed out.",
          "-80009": "Requested resource (e.g., device, channel, property) does not exist.",
          "-80010": "Invalid value provided for a property update request.",
          "-80011": "Insufficient authorization for the requested operation."
        }
      },
      "DashboardPageBase": {
        "title": "Page Base",
        "x-stoplight": {
          "id": "opzagbkx9eg2o"
        },
        "type": "object",
        "description": "The base schema for all dashboard pages, including common properties such as id, type, title, and timestamps.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "cards",
            "title": "Cards Dashboard",
            "icon": "icon-name",
            "order": 1,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ],
        "x-internal": false,
        "required": [
          "id",
          "type",
          "title",
          "icon",
          "order",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "ovu4efwxm0y35"
            },
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "A unique identifier for the dashboard page.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "per8dafbk7ybl"
            },
            "example": "cards",
            "description": "The type of the dashboard page, which determines its behavior and specific properties."
          },
          "title": {
            "type": "string",
            "x-stoplight": {
              "id": "xlpynvh7xq060"
            },
            "description": "The title of the dashboard page, displayed in the UI.",
            "example": "Cards Dashboard"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "4io41e7id0kbs"
            },
            "description": "The icon representing the dashboard page.",
            "example": "icon-name"
          },
          "order": {
            "type": "integer",
            "x-stoplight": {
              "id": "0pma5qtd8z6f8"
            },
            "description": "The display order of the dashboard page in the navigation or list.",
            "example": 1,
            "format": "int32",
            "minimum": 0,
            "multipleOf": 1
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "ubw5r58lmpqi0"
            },
            "format": "date-time",
            "description": "The timestamp when the dashboard page was created.",
            "example": "2025-01-25T12:00:00Z",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "p2qyn325ng4ph"
            },
            "format": "date-time",
            "description": "The timestamp when the dashboard page was last updated.",
            "example": "2025-01-25T13:00:00Z",
            "readOnly": true
          }
        }
      },
      "DashboardCardsPage": {
        "title": "Cards Page",
        "x-stoplight": {
          "id": "mhjsuqhruc1ag"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardPageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "j5h1kgdp2btja"
            },
            "required": [
              "type",
              "cards",
              "data_source"
            ],
            "properties": {
              "type": {
                "type": "string",
                "x-stoplight": {
                  "id": "xw3cam4kg7rp1"
                },
                "description": "Indicates that this is a cards dashboard page.",
                "example": "cards",
                "default": "cards",
                "const": "cards"
              },
              "cards": {
                "type": "array",
                "x-stoplight": {
                  "id": "turltm435k5l9"
                },
                "description": "A list of card UUIDs associated with the cards page.",
                "items": {
                  "x-stoplight": {
                    "id": "3gqd77kq2yd51"
                  },
                  "type": "string",
                  "format": "uuid"
                }
              },
              "data_source": {
                "type": "array",
                "x-stoplight": {
                  "id": "f8err04t3144v"
                },
                "items": {
                  "x-stoplight": {
                    "id": "kq55pyvx5a7fr"
                  },
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ],
        "description": "A cards page dashboard type, displaying an overview with associated cards.",
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "cards",
            "title": "Cards Dashboard",
            "icon": "icon-name",
            "order": 1,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "cards": [
              "497f6eca-6276-4993-bfeb-53cbbbba6f08"
            ]
          }
        ]
      },
      "DashboardTilesPage": {
        "title": "Tiles Page",
        "x-stoplight": {
          "id": "oc8kwhlak2aaa"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardPageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "pnb1agyjih0od"
            },
            "required": [
              "type",
              "tiles",
              "data_source"
            ],
            "properties": {
              "type": {
                "type": "string",
                "x-stoplight": {
                  "id": "6dtneye203fo7"
                },
                "description": "Indicates that this is a tiles dashboard page.",
                "example": "tiles",
                "default": "tiles",
                "const": "tiles"
              },
              "tiles": {
                "type": "array",
                "x-stoplight": {
                  "id": "2s4bsqjwebapt"
                },
                "description": "A list of tile UUIDs associated with the tiles page.",
                "items": {
                  "x-stoplight": {
                    "id": "cfgritwtu1bye"
                  },
                  "type": "string",
                  "format": "uuid",
                  "description": "The unique identifier of a tile.",
                  "example": "456e7890-a89b-22d3-c456-426614174133"
                }
              },
              "data_source": {
                "type": "array",
                "x-stoplight": {
                  "id": "4xbglz7f67ele"
                },
                "items": {
                  "x-stoplight": {
                    "id": "md7ush4wf6puv"
                  },
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ],
        "description": "A tiles page dashboard type, displaying a grid of customizable tiles.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "tiles",
            "title": "Cards Dashboard",
            "icon": "icon-name",
            "order": 1,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "tiles": [
              "456e7890-a89b-22d3-c456-426614174133"
            ]
          }
        ],
        "x-internal": false
      },
      "DashboardDevicePage": {
        "title": "Device Page",
        "x-stoplight": {
          "id": "o3fyc0irwrv8c"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardPageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "alk794q3pfn2z"
            },
            "required": [
              "type",
              "device"
            ],
            "properties": {
              "type": {
                "type": "string",
                "x-stoplight": {
                  "id": "7sl4vn77fk86w"
                },
                "description": "Indicates that this is a device-specific dashboard page.",
                "example": "device",
                "default": "device",
                "const": "device"
              },
              "device": {
                "type": "string",
                "x-stoplight": {
                  "id": "34iu0lhxpf9s9"
                },
                "format": "uuid",
                "description": "The unique identifier of the associated device.",
                "example": "987e6543-a89b-22d3-c456-426614174111"
              }
            }
          }
        ],
        "description": "A dashboard page type associated with a specific device.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "title": "Cards Dashboard",
            "icon": "icon-name",
            "order": 1,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "device": "987e6543-a89b-22d3-c456-426614174111"
          }
        ],
        "x-internal": false
      },
      "DashboardTileBase": {
        "title": "Tile",
        "description": "The base schema for all dashboard tiles, containing common properties such as position, dimensions, and associated page and data sources.",
        "x-stoplight": {
          "id": "dib55bsq8kgrh"
        },
        "type": "object",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              "456e7890-a89b-22d3-c456-426614174122"
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ],
        "x-internal": false,
        "required": [
          "id",
          "type",
          "data_source",
          "row",
          "col",
          "row_span",
          "col_span",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "A unique identifier for the dashboard tile.",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-stoplight": {
              "id": "35m3e28zl51jg"
            },
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of the dashboard tile.",
            "example": "device",
            "x-stoplight": {
              "id": "xs5arpj9f3q56"
            }
          },
          "page": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the page to which this tile belongs.",
            "example": "987e6543-a89b-22d3-c456-426614174111",
            "x-stoplight": {
              "id": "uw2jldczkzrs0"
            }
          },
          "card": {
            "type": "string",
            "x-stoplight": {
              "id": "q30230818139t"
            },
            "format": "uuid",
            "description": "The unique identifier of the card to which this tile belongs."
          },
          "data_source": {
            "type": "array",
            "description": "A list of data sources associated with this tile.",
            "x-stoplight": {
              "id": "5g1zvgj3qi3j1"
            },
            "items": {
              "type": "string",
              "format": "uuid",
              "description": "The unique identifier of a data source.",
              "example": "456e7890-a89b-22d3-c456-426614174122",
              "x-stoplight": {
                "id": "qm9xn4qec872d"
              }
            }
          },
          "row": {
            "type": "integer",
            "description": "The row position of the tile in the grid.",
            "example": 1,
            "x-stoplight": {
              "id": "97epfi4jfl046"
            },
            "multipleOf": 1,
            "minimum": 1,
            "format": "int32"
          },
          "col": {
            "type": "integer",
            "description": "The column position of the tile in the grid.",
            "example": 1,
            "x-stoplight": {
              "id": "51opykxrgsgb8"
            },
            "multipleOf": 1,
            "format": "int32",
            "minimum": 1
          },
          "row_span": {
            "type": "integer",
            "description": "The number of rows the tile spans.",
            "example": 2,
            "minimum": 0,
            "x-stoplight": {
              "id": "q2hnt55oopknx"
            },
            "default": 0,
            "multipleOf": 1,
            "format": "int32"
          },
          "col_span": {
            "type": "integer",
            "description": "The number of columns the tile spans.",
            "example": 2,
            "minimum": 0,
            "x-stoplight": {
              "id": "1mjip1oa2777m"
            },
            "multipleOf": 1,
            "default": 0,
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the dashboard tile was created.",
            "example": "2025-01-25T12:00:00Z",
            "x-stoplight": {
              "id": "sjvjkr39i9sns"
            },
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "The timestamp when the dashboard tile was last updated.",
            "example": "2025-01-25T13:00:00Z",
            "x-stoplight": {
              "id": "glg5tjnyn3t09"
            },
            "readOnly": true
          }
        }
      },
      "DashboardDeviceTile": {
        "title": "Device Tile",
        "description": "A dashboard tile associated with a specific device.",
        "x-stoplight": {
          "id": "veyvhht68tqkh"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "248p9esa7oxzf"
            },
            "required": [
              "type",
              "device",
              "icon"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates that this is a device-specific tile.",
                "example": "device",
                "x-stoplight": {
                  "id": "uvy6360pb4l6f"
                },
                "const": "device"
              },
              "device": {
                "type": "string",
                "format": "uuid",
                "description": "The unique identifier of the associated device.",
                "example": "234e5678-a89b-22d3-c456-426614174133",
                "x-stoplight": {
                  "id": "ii46cphudgltl"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "x-stoplight": {
                  "id": "1lvar9wksem35"
                },
                "description": "The icon representing the device tile.",
                "example": "icon-name"
              }
            }
          }
        ],
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              "456e7890-a89b-22d3-c456-426614174122"
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "device": "234e5678-a89b-22d3-c456-426614174133"
          }
        ]
      },
      "DashboardTimeTile": {
        "title": "Time Tile",
        "description": "A dashboard tile displaying a clock.",
        "x-stoplight": {
          "id": "iaa9gr0xl2xl5"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "xzpscnkv9h9ok"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates that this is a clock tile.",
                "example": "clock",
                "x-stoplight": {
                  "id": "jt9jygix43xrk"
                },
                "const": "clock"
              }
            }
          }
        ],
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "clock",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              "456e7890-a89b-22d3-c456-426614174122"
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ]
      },
      "DashboardDayWeatherTile": {
        "title": "Day Weather Tile",
        "description": "A dashboard tile displaying the weather for a specific day.",
        "x-stoplight": {
          "id": "0k7j32d42j0fv"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "6g0kojrdzhhkp"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates that this is a day weather tile.",
                "example": "weather_day",
                "x-stoplight": {
                  "id": "tpd96sa6vojsq"
                },
                "const": "weather_day"
              }
            }
          }
        ],
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "weather_day",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              "456e7890-a89b-22d3-c456-426614174122"
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ]
      },
      "DashboardForecastWeatherTile": {
        "title": "Forecast Weather Tile",
        "description": "A dashboard tile displaying a weather forecast.",
        "x-stoplight": {
          "id": "8wn67wagmpo7o"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "gtonpzy2bryhc"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Indicates that this is a weather forecast tile.",
                "example": "weather_forecast",
                "x-stoplight": {
                  "id": "i5f8bitju0at5"
                },
                "const": "weather_forecast"
              }
            }
          }
        ],
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "weather_forecast",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              "456e7890-a89b-22d3-c456-426614174122"
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ]
      },
      "DashboardDataSourceBase": {
        "title": "Data Source",
        "description": "The base schema for all dashboard data sources, containing common attributes such as the associated tile and timestamps.",
        "x-stoplight": {
          "id": "wubl0ctr1damd"
        },
        "type": "object",
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device_channel",
            "tile": "456e7890-a89b-22d3-c456-426614174111",
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z"
          }
        ],
        "required": [
          "id",
          "type",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the data source.",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-stoplight": {
              "id": "2i652gfmel4je"
            },
            "readOnly": true
          },
          "type": {
            "enum": [
              "device_channel"
            ],
            "description": "The type of data source.",
            "x-stoplight": {
              "id": "n8yjzhz1gvvog"
            },
            "readOnly": true
          },
          "page": {
            "type": "string",
            "x-stoplight": {
              "id": "gsxc9y3ihwvrt"
            },
            "format": "uuid",
            "description": "The unique identifier of the associated page."
          },
          "card": {
            "type": "string",
            "x-stoplight": {
              "id": "kaml7jm0ejums"
            },
            "format": "uuid",
            "description": "The unique identifier of the associated card."
          },
          "tile": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the associated tile.",
            "example": "456e7890-a89b-22d3-c456-426614174111",
            "x-stoplight": {
              "id": "ffisgu4a71l5v"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the data source was created.",
            "example": "2025-01-25T12:00:00Z",
            "x-stoplight": {
              "id": "yqljz1pwcwuvu"
            },
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "The timestamp when the data source was last updated.",
            "example": "2025-01-25T13:00:00Z",
            "x-stoplight": {
              "id": "sgz08lc0y1ei7"
            },
            "readOnly": true
          }
        }
      },
      "DashboardDeviceChannelDataSource": {
        "title": "Device Channel Data Source",
        "description": "A data source linked to a specific device channel and property.",
        "x-stoplight": {
          "id": "bm4h89em1ty2c"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardDataSourceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "qq1xrh4tngs6d"
            },
            "required": [
              "type",
              "device",
              "channel",
              "property",
              "icon"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "device_channel",
                "description": "Indicates that this data source is linked to a device channel.",
                "x-stoplight": {
                  "id": "hjt5wekx1h44o"
                },
                "readOnly": true
              },
              "device": {
                "type": "string",
                "format": "uuid",
                "description": "The unique identifier of the associated device.",
                "example": "234e5678-a89b-22d3-c456-426614174133",
                "x-stoplight": {
                  "id": "pd74m02bko3hy"
                }
              },
              "channel": {
                "type": "string",
                "format": "uuid",
                "description": "The unique identifier of the associated channel.",
                "example": "345e6789-b89c-32d4-d567-526715184244",
                "x-stoplight": {
                  "id": "53x8j514jj39h"
                }
              },
              "property": {
                "type": "string",
                "format": "uuid",
                "description": "The unique identifier of the associated channel property.",
                "example": "456e7890-c89d-42d5-e678-626816194355",
                "x-stoplight": {
                  "id": "nz7qxzbsm36nn"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "default": null,
                "description": "The icon representing the data source.",
                "x-stoplight": {
                  "id": "nik0nc083pch8"
                },
                "example": "icon-name"
              }
            }
          }
        ],
        "x-internal": false,
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device_channel",
            "tile": "456e7890-a89b-22d3-c456-426614174111",
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "device": "234e5678-a89b-22d3-c456-426614174133",
            "channel": "345e6789-b89c-32d4-d567-526715184244",
            "property": "456e7890-c89d-42d5-e678-626816194355"
          }
        ]
      },
      "DashboardCreatePageBase": {
        "title": "Create Page",
        "description": "The base schema for creating a new dashboard page, containing shared attributes like title and order.",
        "x-stoplight": {
          "id": "mnidr5d6oty9k"
        },
        "type": "object",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "cards",
            "title": "My Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ],
        "required": [
          "type",
          "title",
          "order"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the dashboard page (optional during creation).",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-stoplight": {
              "id": "fscdp90yg0pis"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of dashboard page to be created.",
            "example": "cards",
            "x-stoplight": {
              "id": "isyw1d739amyy"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the dashboard page.",
            "example": "My Dashboard",
            "x-stoplight": {
              "id": "1t1dlb7zwoord"
            }
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "The icon associated with the dashboard page.",
            "example": "icon-name",
            "x-stoplight": {
              "id": "52mvj30pcuhn7"
            }
          },
          "order": {
            "type": "integer",
            "description": "The position of the page in the dashboard‚Äôs list.",
            "example": 1,
            "x-stoplight": {
              "id": "eay80zuk8gkzr"
            },
            "format": "int32",
            "minimum": 0,
            "multipleOf": 1
          }
        }
      },
      "DashboardCreateCardsPage": {
        "title": "Create Cards Page",
        "description": "The schema for creating a cards dashboard page.",
        "x-stoplight": {
          "id": "rjo4i71wibnnb"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreatePageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "wwixa2cad9asg"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "cards",
                "description": "Specifies the type of page as a cards page.",
                "default": "cards",
                "example": "cards",
                "x-stoplight": {
                  "id": "vtnng7d4paciw"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "cards",
            "title": "My Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ]
      },
      "DashboardCreateTilesPage": {
        "title": "Create Tiles Page",
        "description": "The schema for creating a tiles dashboard page.",
        "x-stoplight": {
          "id": "p8dxv6qiag1i1"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreatePageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "1k6ev56gtjan4"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "tiles",
                "description": "Specifies the type of page as a tiles page.",
                "default": "tiles",
                "example": "tiles",
                "x-stoplight": {
                  "id": "mvfjqhmqnqre0"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "tiles",
            "title": "My Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ]
      },
      "DashboardCreateDevicePage": {
        "title": "Create Device Page",
        "description": "The schema for creating a device dashboard page.",
        "x-stoplight": {
          "id": "wzihjx2iy95pp"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreatePageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "bbb3arwe629lw"
            },
            "required": [
              "type",
              "device"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "device",
                "description": "Specifies the type of page as a device page.",
                "default": "device",
                "example": "device",
                "x-stoplight": {
                  "id": "gfj49ma5iqecd"
                }
              },
              "device": {
                "type": "string",
                "format": "uuid",
                "description": "The unique identifier of the associated device.",
                "example": "234e5678-a89b-22d3-c456-426614174133",
                "x-stoplight": {
                  "id": "cgrr0x3zuw46o"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "title": "My Dashboard",
            "icon": "icon-name",
            "order": 1,
            "device": "234e5678-a89b-22d3-c456-426614174133"
          }
        ]
      },
      "DashboardCreateCard": {
        "title": "Create Card",
        "x-stoplight": {
          "id": "yjwew6e5qauhd"
        },
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "qub8e59zm3co7"
            },
            "format": "uuid",
            "example": "89a29104-184f-4b6f-9b37-5a70e24f8b44"
          },
          "title": {
            "type": "string",
            "x-stoplight": {
              "id": "cuowurxj4arpg"
            },
            "example": "Mood lights"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "The icon representing the dashboard card.",
            "x-stoplight": {
              "id": "ybs9o0njntood"
            },
            "example": "icon-name"
          },
          "order": {
            "type": "integer",
            "x-stoplight": {
              "id": "4vm2bqrjlho4d"
            },
            "format": "int32",
            "minimum": 0,
            "multipleOf": 1,
            "example": 0
          }
        },
        "examples": [
          {
            "id": "89a29104-184f-4b6f-9b37-5a70e24f8b44",
            "title": "Mood lights",
            "icon": "icon-name",
            "order": 0
          }
        ],
        "description": "Schema for creating a dashboard card, containing attributes such as title and icon."
      },
      "DashboardCreateTileBase": {
        "title": "Create Tile",
        "description": "Base schema for creating a dashboard tile, containing shared attributes such as position and size.",
        "x-stoplight": {
          "id": "9cs6e4jax1j08"
        },
        "type": "object",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "row": 1,
            "col": 2,
            "row_span": 1,
            "col_span": 2
          }
        ],
        "required": [
          "type",
          "row",
          "col"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the dashboard tile (optional during creation).",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-stoplight": {
              "id": "yq2fxc8z0ob6y"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of tile to be created.",
            "example": "device",
            "x-stoplight": {
              "id": "hylcj1l5zh7m2"
            }
          },
          "row": {
            "type": "integer",
            "description": "The row position of the tile in the grid.",
            "example": 1,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "co1o78r56ka2k"
            },
            "format": "int32",
            "minimum": 1
          },
          "col": {
            "type": "integer",
            "description": "The column position of the tile in the grid.",
            "example": 2,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "ei46gn7uf4psv"
            },
            "format": "int32",
            "minimum": 1
          },
          "row_span": {
            "type": "integer",
            "description": "The number of rows the tile spans in the grid.",
            "example": 1,
            "minimum": 0,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "9lhhb8jdmh695"
            },
            "format": "int32"
          },
          "col_span": {
            "type": "integer",
            "description": "The number of columns the tile spans in the grid.",
            "example": 2,
            "minimum": 0,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "20oqyge56h4i1"
            },
            "format": "int32"
          }
        }
      },
      "DashboardCreateDeviceTile": {
        "title": "Create Device Tile",
        "description": "Schema for creating a dashboard tile representing a device.",
        "x-stoplight": {
          "id": "7yjaum1rxrn4b"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreateTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "9p7y5c6h50qiu"
            },
            "required": [
              "type",
              "device"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "device",
                "description": "Specifies the type of tile as a device tile.",
                "default": "device",
                "example": "device",
                "x-stoplight": {
                  "id": "lsz2ggx78khbt"
                }
              },
              "device": {
                "type": "string",
                "description": "The unique identifier of the associated device.",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174001",
                "x-stoplight": {
                  "id": "8l1eywvexziwu"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "description": "The icon representing the data source.",
                "x-stoplight": {
                  "id": "llrzant79ffp3"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "row": 1,
            "col": 2,
            "row_span": 1,
            "col_span": 2,
            "device": "123e4567-e89b-12d3-a456-426614174001"
          }
        ]
      },
      "DashboardCreateTimeTile": {
        "title": "Create Time Tile",
        "description": "Schema for creating a dashboard tile representing a clock.",
        "x-stoplight": {
          "id": "n2vxc71pz0xh7"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreateTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "1lk6dnsspm5us"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "clock",
                "description": "Specifies the type of tile as a clock.",
                "default": "clock",
                "example": "clock",
                "x-stoplight": {
                  "id": "2l0shzhd3d067"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "clock",
            "row": 1,
            "col": 2,
            "row_span": 1,
            "col_span": 2
          }
        ]
      },
      "DashboardCreateDayWeatherTile": {
        "title": "Create Day Weather Tile",
        "description": "Schema for creating a dashboard tile representing day weather.",
        "x-stoplight": {
          "id": "c680fc7960u4m"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreateTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "s70416xhumjwc"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "weather_day",
                "description": "Specifies the type of tile as a day weather tile.",
                "default": "weather_day",
                "example": "weather_day",
                "x-stoplight": {
                  "id": "wc51o6yca0m88"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "weather_day",
            "row": 1,
            "col": 2,
            "row_span": 1,
            "col_span": 2
          }
        ]
      },
      "DashboardCreateForecastWeatherTile": {
        "title": "Create Forecast Weather Tile",
        "description": "Schema for creating a dashboard tile representing weather forecast.",
        "x-stoplight": {
          "id": "e06kauizk5stm"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreateTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "2u3az7z19uufp"
            },
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "weather_forecast",
                "description": "Specifies the type of tile as a weather forecast tile.",
                "default": "weather_forecast",
                "example": "weather_forecast",
                "x-stoplight": {
                  "id": "62hri1wdlwolp"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "weather_forecast",
            "row": 1,
            "col": 2,
            "row_span": 1,
            "col_span": 2
          }
        ]
      },
      "DashboardCreateDataSourceBase": {
        "title": "Create Data Source",
        "description": "Base schema for creating a data source used in a dashboard tile.",
        "x-stoplight": {
          "id": "zrkwqd2sv2gd0"
        },
        "type": "object",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device_channel"
          }
        ],
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the data source (optional during creation).",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-stoplight": {
              "id": "r910ls5i3bxkn"
            }
          },
          "type": {
            "type": "string",
            "description": "Specifies the type of data source.",
            "example": "device_channel",
            "x-stoplight": {
              "id": "bdr1oiufxoneo"
            }
          }
        }
      },
      "DashboardCreateDeviceChannelDataSource": {
        "title": "Create Device Channel Data Source",
        "description": "Schema for creating a data source linked to a device channel and property.",
        "x-stoplight": {
          "id": "5ugfl347od08j"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardCreateDataSourceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "a7di7aqzx0qsq"
            },
            "required": [
              "type",
              "device",
              "channel",
              "property"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "device_channel",
                "description": "Specifies the type of data source as linked to a device channel.",
                "default": "device_channel",
                "example": "device_channel",
                "x-stoplight": {
                  "id": "ej2xpc6k3gd42"
                }
              },
              "device": {
                "type": "string",
                "description": "The unique identifier of the associated device.",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174001",
                "x-stoplight": {
                  "id": "avvzsif0voelg"
                }
              },
              "channel": {
                "type": "string",
                "description": "The unique identifier of the associated channel within the device.",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174002",
                "x-stoplight": {
                  "id": "2jccv8x3dua6x"
                }
              },
              "property": {
                "type": "string",
                "description": "The unique identifier of the associated property within the channel.",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174003",
                "x-stoplight": {
                  "id": "3r37tw9fg3ph8"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "description": "The icon representing the data source.",
                "x-stoplight": {
                  "id": "lqynacrq81uep"
                },
                "example": "icon-name"
              }
            }
          }
        ],
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device_channel",
            "device": "123e4567-e89b-12d3-a456-426614174001",
            "channel": "123e4567-e89b-12d3-a456-426614174002",
            "property": "123e4567-e89b-12d3-a456-426614174003"
          }
        ]
      },
      "DashboardUpdatePageBase": {
        "title": "Update Page",
        "description": "Base schema for updating a dashboard page.",
        "x-stoplight": {
          "id": "s6yqvb9rjufoj"
        },
        "type": "object",
        "examples": [
          {
            "title": "My Updated Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the page.",
            "example": "My Updated Dashboard",
            "x-stoplight": {
              "id": "kcyliis84hc4q"
            }
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "The icon associated with the page.",
            "example": "icon-name",
            "x-stoplight": {
              "id": "pa1q45bbuhab7"
            }
          },
          "order": {
            "type": "integer",
            "description": "The display order of the page.",
            "example": 1,
            "minimum": 0,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "vp9dtvszfcnmo"
            },
            "format": "int32"
          }
        }
      },
      "DashboardUpdateCardsPage": {
        "title": "Update Cards Page",
        "description": "Schema for updating a cards page in the dashboard.",
        "x-stoplight": {
          "id": "rjb7bq9k29by4"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdatePageBase"
          }
        ],
        "examples": [
          {
            "title": "My Updated Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ]
      },
      "DashboardUpdateTilesPage": {
        "title": "Update Tiles Page",
        "description": "Schema for updating a tiles page in the dashboard.",
        "x-stoplight": {
          "id": "xg08dny4f6w8p"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdatePageBase"
          }
        ],
        "examples": [
          {
            "title": "My Updated Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ]
      },
      "DashboardUpdateDevicePage": {
        "title": "Update Device Page",
        "description": "Schema for updating a device page in the dashboard.",
        "x-stoplight": {
          "id": "o46f2v3y451re"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdatePageBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "e5k8m09ieube4"
            },
            "properties": {
              "device": {
                "type": "string",
                "x-stoplight": {
                  "id": "qjnp8n6c2bviq"
                },
                "format": "uuid",
                "example": "b12345c6-7890-4d12-345e-6f7890abcd12"
              }
            }
          }
        ],
        "examples": [
          {
            "title": "My Updated Dashboard",
            "icon": "icon-name",
            "order": 1
          }
        ]
      },
      "DashboardUpdateCard": {
        "title": "Update Card",
        "x-stoplight": {
          "id": "ctlo3rhkkgm3g"
        },
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "x-stoplight": {
              "id": "ppxfuyoe0hvkw"
            },
            "example": "Room lights"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "description": "The icon representing the dashboard card.",
            "x-stoplight": {
              "id": "txupktrlmgvdq"
            },
            "example": "icon-name"
          },
          "order": {
            "type": "integer",
            "x-stoplight": {
              "id": "m6m21m9h7ktge"
            },
            "format": "int32",
            "example": 1,
            "minimum": 0,
            "multipleOf": 1
          }
        },
        "examples": [
          {
            "title": "Room lights",
            "icon": "icon-name",
            "order": 1
          }
        ],
        "description": "Schema for updating a card in the dashboard."
      },
      "DashboardUpdateTileBase": {
        "title": "Update Tile",
        "description": "Base schema for updating a tile in the dashboard.",
        "x-stoplight": {
          "id": "50jx483agkr6f"
        },
        "type": "object",
        "examples": [
          {
            "row": 1,
            "col": 1,
            "row_span": 2,
            "col_span": 2
          }
        ],
        "properties": {
          "row": {
            "type": "integer",
            "description": "The row position of the tile on the dashboard grid.",
            "example": 1,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "gar4bpqgd8h3g"
            },
            "format": "int32",
            "minimum": 1
          },
          "col": {
            "type": "integer",
            "description": "The column position of the tile on the dashboard grid.",
            "example": 1,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "5bn0gv6dr6iph"
            },
            "format": "int32",
            "minimum": 1
          },
          "row_span": {
            "type": "integer",
            "description": "The number of rows the tile spans on the dashboard grid.",
            "example": 2,
            "minimum": 0,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "9t3pfjf4aoijm"
            },
            "format": "int32"
          },
          "col_span": {
            "type": "integer",
            "description": "The number of columns the tile spans on the dashboard grid.",
            "example": 2,
            "minimum": 0,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "c49oy7ubikcym"
            },
            "format": "int32"
          },
          "page": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the page to which this tile belongs.",
            "example": "987e6543-a89b-22d3-c456-426614174111",
            "x-stoplight": {
              "id": "yjaou4rfw48fq"
            }
          }
        }
      },
      "DashboardUpdateDeviceTile": {
        "title": "Update Device Tile",
        "description": "Schema for updating a device tile in the dashboard.",
        "x-stoplight": {
          "id": "s3gok4cz9j040"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdateTileBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "cr56pl4qshnn7"
            },
            "properties": {
              "device": {
                "type": "string",
                "description": "The unique identifier of the associated device.",
                "format": "uuid",
                "example": "b12345c6-7890-4d12-345e-6f7890abcd12",
                "x-stoplight": {
                  "id": "ud1a5y092vquo"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "description": "The icon representing the data source.",
                "x-stoplight": {
                  "id": "dhlq9fff5pggf"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "row": 1,
            "col": 1,
            "row_span": 2,
            "col_span": 2,
            "device": "b12345c6-7890-4d12-345e-6f7890abcd12"
          }
        ]
      },
      "DashboardUpdateTimeTile": {
        "title": "Update Time Tile",
        "description": "Schema for updating a time tile (clock) in the dashboard.",
        "x-stoplight": {
          "id": "cvhd0g5cjcm3b"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdateTileBase"
          }
        ],
        "examples": [
          {
            "row": 1,
            "col": 1,
            "row_span": 2,
            "col_span": 2
          }
        ]
      },
      "DashboardUpdateDayWeatherTile": {
        "title": "Update Day Weather Tile",
        "description": "Schema for updating a day weather tile in the dashboard.",
        "x-stoplight": {
          "id": "fruj95mtjbqyq"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdateTileBase"
          }
        ],
        "examples": [
          {
            "row": 1,
            "col": 1,
            "row_span": 2,
            "col_span": 2
          }
        ]
      },
      "DashboardUpdateForecastWeatherTile": {
        "title": "Update Forecast Weather Tile",
        "description": "Schema for updating a forecast weather tile in the dashboard.",
        "x-stoplight": {
          "id": "dropn8dy2ves9"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdateTileBase"
          }
        ],
        "examples": [
          {
            "row": 1,
            "col": 1,
            "row_span": 2,
            "col_span": 2
          }
        ]
      },
      "DashboardUpdateDataSourceBase": {
        "title": "Update Data Source Base",
        "description": "Base schema for updating a data source in the dashboard.",
        "x-stoplight": {
          "id": "ol5q5dxq9up03"
        },
        "type": "object",
        "properties": {
          "tile": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the associated tile.",
            "example": "456e7890-a89b-22d3-c456-426614174111",
            "x-stoplight": {
              "id": "ggbhfyazecm1p"
            }
          }
        }
      },
      "DashboardUpdateDeviceChannelDataSource": {
        "title": "Update Device Channel Data Source",
        "description": "Schema for updating a device channel data source in the dashboard.",
        "x-stoplight": {
          "id": "6j5l0m3dcwwd6"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DashboardUpdateDataSourceBase"
          },
          {
            "type": "object",
            "x-stoplight": {
              "id": "uiifro503d8n3"
            },
            "properties": {
              "device": {
                "type": "string",
                "description": "The unique identifier of the associated device.",
                "format": "uuid",
                "example": "b12345c6-7890-4d12-345e-6f7890abcd12",
                "x-stoplight": {
                  "id": "x72z6ai6jzwf6"
                }
              },
              "channel": {
                "type": "string",
                "description": "The unique identifier of the associated channel.",
                "format": "uuid",
                "example": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
                "x-stoplight": {
                  "id": "g7n9qhbo14gj1"
                }
              },
              "property": {
                "type": "string",
                "description": "The unique identifier of the associated channel property.",
                "format": "uuid",
                "example": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
                "x-stoplight": {
                  "id": "ol8f500cxnpfc"
                }
              },
              "icon": {
                "type": "string",
                "nullable": true,
                "description": "The icon representing the data source.",
                "x-stoplight": {
                  "id": "ql880wtfsxz1c"
                },
                "example": "icon-name"
              }
            }
          }
        ],
        "examples": [
          {
            "device": "b12345c6-7890-4d12-345e-6f7890abcd12",
            "channel": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
            "property": "cd09772a-6981-4dd7-be1c-f2edd6978ee1"
          }
        ]
      },
      "DashboardPage": {
        "title": "Page",
        "x-stoplight": {
          "id": "3ds9wkrbgsevi"
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "cards": "#/components/schemas/DashboardCardsPage",
            "tiles": "#/components/schemas/DashboardTilesPage",
            "device": "#/components/schemas/DashboardDevicePage"
          }
        },
        "oneOf": [
          {
            "x-stoplight": {
              "id": "r0ct35oxahcyo"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardCardsPage",
                "x-stoplight": {
                  "id": "su5wpur9a4ld1"
                }
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "s1vly3dqkabtj"
                },
                "properties": {
                  "cards": {
                    "x-stoplight": {
                      "id": "vnxzu28dz49m6"
                    },
                    "description": "A list of tiles displayed on the page.",
                    "type": "array",
                    "items": {
                      "x-stoplight": {
                        "id": "sugmqqn3h2n5j"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardCard",
                          "x-stoplight": {
                            "id": "zn8nnorjya7t0"
                          }
                        }
                      ]
                    }
                  },
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "fp3d8pjzenqgv"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "wn44hiulgjy2v"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "w22si5x8x7csn"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "x-stoplight": {
              "id": "805ga84e4fmwg"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardTilesPage",
                "x-stoplight": {
                  "id": "t1uw2x3zcyj2t"
                }
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "2pmwgodidk4u1"
                },
                "properties": {
                  "tiles": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "wo78y0fmvqwdn"
                    },
                    "description": "A list of tiles displayed on the page.",
                    "items": {
                      "x-stoplight": {
                        "id": "gdj1564zv540p"
                      },
                      "oneOf": [
                        {
                          "x-stoplight": {
                            "id": "4wckzqh370n60"
                          },
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DashboardDeviceTile"
                            },
                            {
                              "type": "object",
                              "x-stoplight": {
                                "id": "dep7ikhbtxfma"
                              },
                              "properties": {
                                "data_source": {
                                  "type": "array",
                                  "x-stoplight": {
                                    "id": "tuxfw8hlgqm7x"
                                  },
                                  "description": "The data sources associated with this tile.",
                                  "items": {
                                    "x-stoplight": {
                                      "id": "ma8q4j9pdr9ja"
                                    },
                                    "oneOf": [
                                      {
                                        "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                                        "x-stoplight": {
                                          "id": "bomr9eetwrpwl"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "x-stoplight": {
                            "id": "hfcbjqgvud9a7"
                          },
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DashboardTimeTile"
                            },
                            {
                              "type": "object",
                              "x-stoplight": {
                                "id": "4pu35p44aa8z7"
                              },
                              "properties": {
                                "data_source": {
                                  "type": "array",
                                  "x-stoplight": {
                                    "id": "ghmw5lwmovgkf"
                                  },
                                  "description": "The data sources associated with this tile.",
                                  "items": {
                                    "x-stoplight": {
                                      "id": "ma2lklza1iiap"
                                    },
                                    "oneOf": [
                                      {
                                        "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                                        "x-stoplight": {
                                          "id": "gr8wc93syract"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "x-stoplight": {
                            "id": "2ab4ngqoqswm2"
                          },
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DashboardDayWeatherTile"
                            },
                            {
                              "type": "object",
                              "x-stoplight": {
                                "id": "p08lkhef0qq4r"
                              },
                              "properties": {
                                "data_source": {
                                  "type": "array",
                                  "x-stoplight": {
                                    "id": "x98kmslhb8uxn"
                                  },
                                  "description": "The data sources associated with this tile.",
                                  "items": {
                                    "x-stoplight": {
                                      "id": "hfuux5xy370pf"
                                    },
                                    "oneOf": [
                                      {
                                        "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                                        "x-stoplight": {
                                          "id": "6w3hcqc75kei8"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "x-stoplight": {
                            "id": "i7euj33qyw5bx"
                          },
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DashboardForecastWeatherTile"
                            },
                            {
                              "type": "object",
                              "x-stoplight": {
                                "id": "485qyvp1h5n32"
                              },
                              "properties": {
                                "data_source": {
                                  "type": "array",
                                  "x-stoplight": {
                                    "id": "0rescro14wwnw"
                                  },
                                  "description": "The data sources associated with this tile.",
                                  "items": {
                                    "x-stoplight": {
                                      "id": "pgvb4kx4qv8zc"
                                    },
                                    "oneOf": [
                                      {
                                        "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                                        "x-stoplight": {
                                          "id": "84dbvwlymg11v"
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "sfwbh3qg1jiqi"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "p4a086ezumdbv"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "1sedisf1ywvlr"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "$ref": "#/components/schemas/DashboardDevicePage",
            "x-stoplight": {
              "id": "getmcymnmevw4"
            }
          }
        ],
        "description": "Represents a page in the dashboard, such as Cards, Tiles, or Device pages, with its associated tiles and data sources.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "cards",
            "title": "Cards Dashboard",
            "icon": "icon-name",
            "order": 1,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "tiles": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "type": "device",
                "page": "987e6543-a89b-22d3-c456-426614174111",
                "data_source": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "device_channel",
                    "tile": "456e7890-a89b-22d3-c456-426614174111",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T13:00:00Z",
                    "device": "234e5678-a89b-22d3-c456-426614174133",
                    "channel": "345e6789-b89c-32d4-d567-526715184244",
                    "property": "456e7890-c89d-42d5-e678-626816194355"
                  }
                ],
                "row": 1,
                "col": 0,
                "row_span": 2,
                "col_span": 2,
                "created_at": "2025-01-25T12:00:00Z",
                "updated_at": "2025-01-25T13:00:00Z",
                "device": "234e5678-a89b-22d3-c456-426614174133"
              }
            ]
          }
        ],
        "type": "object"
      },
      "DashboardCard": {
        "title": "Card",
        "x-stoplight": {
          "id": "z1bufry7x2hb5"
        },
        "type": "object",
        "examples": [
          {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "title": "Action cards",
            "icon": "icon-name",
            "order": 1,
            "page": {
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "type": "cards",
              "title": "Cards Dashboard",
              "icon": "icon-name",
              "order": 1,
              "created_at": "2025-01-25T12:00:00Z",
              "updated_at": "2025-01-25T13:00:00Z",
              "cards": [
                "497f6eca-6276-4993-bfeb-53cbbbba6f08"
              ]
            },
            "tiles": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "type": "device",
                "page": "987e6543-a89b-22d3-c456-426614174111",
                "data_source": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "device_channel",
                    "tile": "456e7890-a89b-22d3-c456-426614174111",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T13:00:00Z",
                    "device": "234e5678-a89b-22d3-c456-426614174133",
                    "channel": "345e6789-b89c-32d4-d567-526715184244",
                    "property": "456e7890-c89d-42d5-e678-626816194355",
                    "icon": "icon-name"
                  }
                ],
                "row": 1,
                "col": 0,
                "row_span": 2,
                "col_span": 2,
                "created_at": "2025-01-25T12:00:00Z",
                "updated_at": "2025-01-25T13:00:00Z",
                "device": "234e5678-a89b-22d3-c456-426614174133"
              }
            ],
            "data_source": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "type": "device_channel",
                "tile": "456e7890-a89b-22d3-c456-426614174111",
                "created_at": "2025-01-25T12:00:00Z",
                "updated_at": "2025-01-25T13:00:00Z",
                "device": "234e5678-a89b-22d3-c456-426614174133",
                "channel": "345e6789-b89c-32d4-d567-526715184244",
                "property": "456e7890-c89d-42d5-e678-626816194355",
                "icon": "icon-name"
              }
            ],
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        ],
        "description": "Represents a card in the dashboard page, with its associated tiles and data sources.",
        "required": [
          "id",
          "title",
          "icon",
          "order",
          "page",
          "tiles",
          "data_source",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "p80kix4lxg182"
            },
            "format": "uuid",
            "example": "89a29104-184f-4b6f-9b37-5a70e24f8b44"
          },
          "title": {
            "type": "string",
            "x-stoplight": {
              "id": "flwp9fwvo77c2"
            },
            "example": "Mood lights"
          },
          "icon": {
            "type": "string",
            "nullable": true,
            "default": null,
            "description": "The icon representing the dashboard card.",
            "x-stoplight": {
              "id": "r9isz7is5ugsm"
            },
            "example": "icon-name"
          },
          "order": {
            "type": "integer",
            "x-stoplight": {
              "id": "azed23z5emy37"
            },
            "format": "int32",
            "multipleOf": 1,
            "example": 1,
            "minimum": 0
          },
          "page": {
            "$ref": "#/components/schemas/DashboardCardsPage",
            "x-stoplight": {
              "id": "pcivew4bzjyj7"
            }
          },
          "tiles": {
            "type": "array",
            "x-stoplight": {
              "id": "obr2ptlro0bkk"
            },
            "items": {
              "$ref": "#/components/schemas/DashboardTile",
              "x-stoplight": {
                "id": "vprbybeulksln"
              }
            }
          },
          "data_source": {
            "type": "array",
            "x-stoplight": {
              "id": "zyblzfmx9su36"
            },
            "items": {
              "$ref": "#/components/schemas/DashboardDataSource",
              "x-stoplight": {
                "id": "5y8aacv1vaum0"
              }
            }
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "tguog6xzsd8z5"
            },
            "format": "date-time",
            "example": "2025-01-25T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "thvhwg73kep0b"
            },
            "format": "date-time",
            "example": "2025-01-25T12:00:00Z"
          }
        }
      },
      "DashboardTile": {
        "title": "Tile",
        "x-stoplight": {
          "id": "n5cqbqclho5ho"
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "device": "#/components/schemas/DashboardDeviceTile",
            "clock": "#/components/schemas/DashboardTimeTile",
            "weather_day": "#/components/schemas/DashboardDayWeatherTile",
            "weather_forecast": "#/components/schemas/DashboardForecastWeatherTile"
          }
        },
        "oneOf": [
          {
            "x-stoplight": {
              "id": "e6i7x4xkcp5na"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardDeviceTile"
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "id119pxd2iskd"
                },
                "required": [
                  "data_source"
                ],
                "properties": {
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "0rvs63r7cowi3"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "dbh7e028cye50"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "hhwign5q0jm9k"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "x-stoplight": {
              "id": "3uriz3exhrifk"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardTimeTile"
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "xt2jzox11bgoc"
                },
                "required": [
                  "data_source"
                ],
                "properties": {
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "ptwiao6b56i89"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "0ji2mwat6l1tq"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "0djz18f98xn68"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "x-stoplight": {
              "id": "4eo5n2tlnzb3k"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardDayWeatherTile"
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "jyct8agrt7np4"
                },
                "required": [
                  "data_source"
                ],
                "properties": {
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "sfmpwwzzwdj9t"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "9ysd74s7go2ui"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "cub9n63zksdu8"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          },
          {
            "x-stoplight": {
              "id": "n0x1vqhmzubb7"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardForecastWeatherTile"
              },
              {
                "type": "object",
                "x-stoplight": {
                  "id": "905y7vqds3tyg"
                },
                "required": [
                  "data_source"
                ],
                "properties": {
                  "data_source": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "b5krahm9x5m87"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "fqqifj1lsz9po"
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DashboardDeviceChannelDataSource",
                          "x-stoplight": {
                            "id": "o836c805neomy"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        ],
        "description": "Represents a tile in a dashboard, such as a device tile, time tile, weather tile, or forecast tile.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device",
            "page": "987e6543-a89b-22d3-c456-426614174111",
            "data_source": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "type": "device_channel",
                "tile": "456e7890-a89b-22d3-c456-426614174111",
                "created_at": "2025-01-25T12:00:00Z",
                "updated_at": "2025-01-25T13:00:00Z",
                "device": "234e5678-a89b-22d3-c456-426614174133",
                "channel": "345e6789-b89c-32d4-d567-526715184244",
                "property": "456e7890-c89d-42d5-e678-626816194355"
              }
            ],
            "row": 1,
            "col": 0,
            "row_span": 2,
            "col_span": 2,
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "device": "234e5678-a89b-22d3-c456-426614174133"
          }
        ]
      },
      "DashboardDataSource": {
        "title": "Data Source",
        "x-stoplight": {
          "id": "64ybfkmqpdk78"
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "device_channel": "#/components/schemas/DashboardDeviceChannelDataSource"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/DashboardDeviceChannelDataSource"
          }
        ],
        "description": "Represents a data source that feeds data to a dashboard tile.",
        "examples": [
          {
            "id": "123e4567-e89b-12d3-a456-426614174000",
            "type": "device_channel",
            "tile": "456e7890-a89b-22d3-c456-426614174111",
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T13:00:00Z",
            "device": "234e5678-a89b-22d3-c456-426614174133",
            "channel": "345e6789-b89c-32d4-d567-526715184244",
            "property": "456e7890-c89d-42d5-e678-626816194355",
            "icon": "icon-name"
          }
        ]
      },
      "ConfigAudio": {
        "title": "Audio",
        "x-stoplight": {
          "id": "m3f6h76oct1t2"
        },
        "type": "object",
        "description": "Configuration settings for audio, including speaker and microphone controls.",
        "required": [
          "speaker",
          "speaker_volume",
          "microphone",
          "microphone_volume"
        ],
        "properties": {
          "speaker": {
            "type": "boolean",
            "x-stoplight": {
              "id": "x2b1cx0l704pp"
            },
            "default": false,
            "description": "Indicates whether the speaker is enabled."
          },
          "speaker_volume": {
            "type": "integer",
            "x-stoplight": {
              "id": "pey5fh65gph6d"
            },
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "format": "int32",
            "example": 50,
            "default": 0,
            "description": "The volume level of the speaker, ranging from 0 to 100."
          },
          "microphone": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ywk7yc0b6az7w"
            },
            "default": false,
            "description": "Indicates whether the microphone is enabled."
          },
          "microphone_volume": {
            "type": "integer",
            "x-stoplight": {
              "id": "gwx60vxgusl58"
            },
            "format": "int32",
            "default": 0,
            "example": 50,
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "description": "The volume level of the microphone, ranging from 0 to 100."
          }
        },
        "examples": [
          {
            "speaker": false,
            "speaker_volume": 50,
            "microphone": false,
            "microphone_volume": 50
          }
        ]
      },
      "ConfigDisplay": {
        "title": "Display",
        "x-stoplight": {
          "id": "ko0fq4s79fln9"
        },
        "type": "object",
        "description": "Configuration settings for the display, including brightness, dark mode, and screen lock behavior.",
        "required": [
          "dark_mode",
          "brightness",
          "screen_lock_duration",
          "screen_saver"
        ],
        "properties": {
          "dark_mode": {
            "type": "boolean",
            "x-stoplight": {
              "id": "i988v9y24wyo1"
            },
            "default": false,
            "description": "Enables dark mode for the display."
          },
          "brightness": {
            "type": "integer",
            "x-stoplight": {
              "id": "bbo54kyzf21xr"
            },
            "format": "int32",
            "default": 0,
            "example": 50,
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "description": "Sets the brightness level of the display (0-100)."
          },
          "screen_lock_duration": {
            "type": "integer",
            "x-stoplight": {
              "id": "qql4jp11kmauk"
            },
            "format": "int32",
            "default": 30,
            "example": 30,
            "minimum": 0,
            "multipleOf": 1,
            "description": "Time in seconds before the screen automatically locks.",
            "maximum": 3600
          },
          "screen_saver": {
            "type": "boolean",
            "x-stoplight": {
              "id": "lyjs455hzb0q3"
            },
            "default": true,
            "description": "Enables the screen saver when the device is idle. Value is in seconds."
          }
        },
        "examples": [
          {
            "dark_mode": false,
            "brightness": 50,
            "screen_lock_duration": 30,
            "screen_saver": true
          }
        ]
      },
      "ConfigLanguage": {
        "title": "Language",
        "x-stoplight": {
          "id": "rjafvmkhwiazp"
        },
        "type": "object",
        "required": [
          "language",
          "timezone",
          "time_format"
        ],
        "properties": {
          "language": {
            "x-stoplight": {
              "id": "0ucizn5b16tfr"
            },
            "enum": [
              "en_US",
              "cs_CZ"
            ],
            "default": "en_US",
            "description": "Defines the language and region format. Uses standard locale codes (ISO 639-1)."
          },
          "timezone": {
            "type": "string",
            "x-stoplight": {
              "id": "h1ugc320005vx"
            },
            "example": "Europe/Prague",
            "default": "Europe/Prague",
            "description": "Sets the time format for displaying time on the panel."
          },
          "time_format": {
            "x-stoplight": {
              "id": "kp8rbo4mpcs0g"
            },
            "enum": [
              "12h",
              "24h"
            ],
            "default": "24h",
            "description": "Defines the time zone of the smart panel. Uses the IANA time zone format."
          }
        },
        "description": "Configuration settings for language, time zone, and time format on the smart panel.",
        "examples": [
          {
            "language": "en_US",
            "timezone": "Europe/Prague",
            "time_format": "24h"
          }
        ]
      },
      "ConfigWeather": {
        "title": "Weather",
        "x-stoplight": {
          "id": "0bejo47lq5mzk"
        },
        "type": "object",
        "description": "Configuration settings for weather data, including location, temperature unit, and API integration.",
        "examples": [
          {
            "location": "string",
            "unit": "celsius",
            "open_weather_api_key": "string"
          }
        ],
        "required": [
          "location",
          "location_type",
          "unit",
          "open_weather_api_key"
        ],
        "properties": {
          "location": {
            "type": "string",
            "x-stoplight": {
              "id": "pbl99bstieqo7"
            },
            "nullable": true,
            "description": "The location for weather updates, specified as a city name or coordinates (latitude, longitude)."
          },
          "location_type": {
            "x-stoplight": {
              "id": "b2z48ep03sjbo"
            },
            "enum": [
              "lat_lon",
              "city_name",
              "city_id",
              "zip_code"
            ],
            "default": "city_name",
            "example": "city_name"
          },
          "unit": {
            "x-stoplight": {
              "id": "we1ysbw8cgg4f"
            },
            "enum": [
              "celsius",
              "fahrenheit"
            ],
            "default": "celsius",
            "description": "Defines the temperature unit for weather data."
          },
          "open_weather_api_key": {
            "type": "string",
            "x-stoplight": {
              "id": "aa2vcq13rejx9"
            },
            "nullable": true,
            "description": "API key for OpenWeatherMap. Required only if using OpenWeatherMap as a data source."
          }
        }
      },
      "ConfigApp": {
        "title": "App",
        "x-stoplight": {
          "id": "504wf1jcz9q7p"
        },
        "type": "object",
        "description": "Configuration settings for the smart panel, including audio, display, language, and weather settings.",
        "required": [
          "audio",
          "display",
          "language",
          "weather"
        ],
        "properties": {
          "audio": {
            "$ref": "#/components/schemas/ConfigAudio",
            "x-stoplight": {
              "id": "gjv3fagewf8ap"
            },
            "description": "Audio configuration settings, including speaker and microphone options."
          },
          "display": {
            "$ref": "#/components/schemas/ConfigDisplay",
            "x-stoplight": {
              "id": "a5f5gfsf5y3hh"
            },
            "description": "Display settings, including brightness, dark mode, and screen lock duration."
          },
          "language": {
            "$ref": "#/components/schemas/ConfigLanguage",
            "x-stoplight": {
              "id": "ptvck9drcr0kv"
            },
            "description": "Language and localization settings, including time zone and time format."
          },
          "weather": {
            "$ref": "#/components/schemas/ConfigWeather",
            "x-stoplight": {
              "id": "v4prmk56onam0"
            },
            "description": "Weather settings, including location, unit preferences, and API integration."
          }
        },
        "examples": [
          {
            "audio": {
              "speaker": false,
              "speaker_volume": 50,
              "microphone": false,
              "microphone_volume": 50
            },
            "display": {
              "dark_mode": false,
              "brightness": 50,
              "screen_lock_duration": 30,
              "screen_saver": true
            },
            "language": {
              "language": "en_US",
              "timezone": "Europe/Prague",
              "time_format": "24h"
            },
            "weather": {
              "location": "string",
              "unit": "celsius",
              "open_weather_api_key": "string"
            }
          }
        ]
      },
      "ConfigUpdateAudio": {
        "title": "Update Audio",
        "description": "Partial update settings for audio configuration, allowing changes to speaker and microphone settings.",
        "x-stoplight": {
          "id": "zrqm3dhil6fsf"
        },
        "type": "object",
        "properties": {
          "speaker": {
            "type": "boolean",
            "description": "Enables or disables the speaker.",
            "x-stoplight": {
              "id": "tkhqm0vb25jt2"
            }
          },
          "speaker_volume": {
            "type": "integer",
            "description": "Sets the speaker volume (0-100).",
            "format": "int32",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "hojaisbc5tpsa"
            }
          },
          "microphone": {
            "type": "boolean",
            "description": "Enables or disables the microphone.",
            "x-stoplight": {
              "id": "ihm4l3trsbskh"
            }
          },
          "microphone_volume": {
            "type": "integer",
            "description": "Sets the microphone volume (0-100).",
            "format": "int32",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "aldonhfz8uhb8"
            }
          }
        },
        "examples": [
          {
            "speaker": true,
            "speaker_volume": 55,
            "microphone": true,
            "microphone_volume": 30
          }
        ]
      },
      "ConfigUpdateDisplay": {
        "title": "Update Display",
        "description": "Partial update settings for display configuration, allowing changes to brightness, dark mode, and screen lock duration.",
        "x-stoplight": {
          "id": "swrht5qx0vya1"
        },
        "type": "object",
        "properties": {
          "dark_mode": {
            "type": "boolean",
            "description": "Enables or disables dark mode.",
            "x-stoplight": {
              "id": "6yhhg187ohxz5"
            }
          },
          "brightness": {
            "type": "integer",
            "description": "Sets the brightness level (0-100).",
            "format": "int32",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "rym52txe9aaw5"
            }
          },
          "screen_lock_duration": {
            "type": "integer",
            "description": "Time in seconds before the screen automatically locks.",
            "format": "int32",
            "minimum": 0,
            "maximum": 3600,
            "multipleOf": 1,
            "x-stoplight": {
              "id": "mbhpkxu1mq808"
            }
          },
          "screen_saver": {
            "type": "boolean",
            "description": "Enables or disables the screen saver.",
            "x-stoplight": {
              "id": "uq7iml8bduc1l"
            }
          }
        },
        "examples": [
          {
            "dark_mode": true,
            "brightness": 55,
            "screen_lock_duration": 20,
            "screen_saver": true
          }
        ]
      },
      "ConfigUpdateLanguage": {
        "title": "Update Language",
        "description": "Partial update settings for language and localization configuration.",
        "x-stoplight": {
          "id": "mlm6si3jccojn"
        },
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Defines the language and region format.",
            "enum": [
              "en_US",
              "cs_CZ"
            ],
            "x-stoplight": {
              "id": "oqc7vjpvrs1gt"
            }
          },
          "timezone": {
            "type": "string",
            "description": "Defines the time zone using the IANA time zone format.",
            "example": "Europe/Prague",
            "x-stoplight": {
              "id": "sgj2fv068pzjp"
            }
          },
          "time_format": {
            "type": "string",
            "description": "Sets the time format (12-hour or 24-hour).",
            "enum": [
              "12h",
              "24h"
            ],
            "x-stoplight": {
              "id": "qldp55r77m8om"
            }
          }
        },
        "examples": [
          {
            "language": "en_US",
            "timezone": "Europe/Prague",
            "time_format": "24h"
          }
        ]
      },
      "ConfigUpdateWeather": {
        "title": "Update Weather",
        "description": "Partial update settings for weather configuration, allowing changes to location, temperature unit, and API key.",
        "x-stoplight": {
          "id": "kwfhboxcvfj3d"
        },
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "The location for weather updates, specified as a city name or coordinates (latitude, longitude).",
            "nullable": true,
            "x-stoplight": {
              "id": "1gwca961ub499"
            }
          },
          "unit": {
            "type": "string",
            "description": "Defines the temperature unit for weather data.",
            "enum": [
              "celsius",
              "fahrenheit"
            ],
            "x-stoplight": {
              "id": "p6d517qmcgw2k"
            }
          },
          "open_weather_api_key": {
            "type": "string",
            "description": "API key for OpenWeatherMap. Required only if using OpenWeatherMap as a data source.",
            "nullable": true,
            "x-stoplight": {
              "id": "d5xpruvh51o7l"
            }
          }
        },
        "examples": [
          {
            "location": "Prague",
            "unit": "celsius",
            "open_weather_api_key": null
          }
        ]
      },
      "SystemMemoryInfo": {
        "title": "Memory Info",
        "x-stoplight": {
          "id": "nck9gz8r3gb67"
        },
        "type": "object",
        "description": "Provides details about total, used, and free memory on the system.",
        "examples": [
          {
            "total": 8388608000,
            "used": 4200000000,
            "free": 4188608000
          }
        ],
        "required": [
          "total",
          "used",
          "free"
        ],
        "properties": {
          "total": {
            "type": "integer",
            "x-stoplight": {
              "id": "ffxxe1tfrcs6k"
            },
            "example": 8388608000,
            "description": "Total available system memory in bytes.",
            "readOnly": true
          },
          "used": {
            "type": "integer",
            "x-stoplight": {
              "id": "tfppnzofhn9qs"
            },
            "description": "Used memory in bytes.",
            "example": 4200000000,
            "readOnly": true
          },
          "free": {
            "type": "integer",
            "x-stoplight": {
              "id": "r7fe2pf6d8pn2"
            },
            "description": "Free memory in bytes.",
            "example": 4188608000,
            "readOnly": true
          }
        }
      },
      "SystemStorageInfo": {
        "title": "Storage Info",
        "x-stoplight": {
          "id": "cx3ajmxt3nr3c"
        },
        "type": "object",
        "description": "Provides details about system storage, including file system, usage, and available space.",
        "examples": [
          {
            "fs": "/dev/mmcblk0p1",
            "used": 15000000000,
            "size": 32000000000,
            "available": 17000000000
          }
        ],
        "required": [
          "fs",
          "used",
          "size",
          "available"
        ],
        "properties": {
          "fs": {
            "type": "string",
            "x-stoplight": {
              "id": "g7v4027p9q8x3"
            },
            "description": "Filesystem type or mount point.",
            "example": "/dev/mmcblk0p1",
            "readOnly": true
          },
          "used": {
            "type": "integer",
            "x-stoplight": {
              "id": "6kur17bipuu4y"
            },
            "description": "Used storage space in bytes.",
            "example": 15000000000,
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "x-stoplight": {
              "id": "hod20ari4gid8"
            },
            "description": "Total storage capacity in bytes.",
            "example": 32000000000,
            "readOnly": true
          },
          "available": {
            "type": "integer",
            "x-stoplight": {
              "id": "e0ig6627r79zf"
            },
            "description": "Available free storage space in bytes.",
            "example": 17000000000,
            "readOnly": true
          }
        }
      },
      "SystemTemperatureInfo": {
        "title": "Temperature Info",
        "x-stoplight": {
          "id": "pmeg89jiaii0r"
        },
        "type": "object",
        "description": "Provides the current temperature of system components like CPU and GPU.",
        "examples": [
          {
            "cpu": 55,
            "gpu": 60
          }
        ],
        "properties": {
          "cpu": {
            "type": "integer",
            "x-stoplight": {
              "id": "nxeb9mfydx5hn"
            },
            "description": "CPU temperature in Celsius.",
            "example": 55,
            "readOnly": true
          },
          "gpu": {
            "type": "integer",
            "x-stoplight": {
              "id": "ztmaoifapv2r1"
            },
            "description": "GPU temperature in Celsius.",
            "example": 60,
            "readOnly": true
          }
        }
      },
      "SystemOperatingSystemInfo": {
        "title": "Operating System Info",
        "x-stoplight": {
          "id": "i3bmi6gx1evjs"
        },
        "type": "object",
        "description": "Provides information about the operating system, including distribution, version, and uptime.",
        "examples": [
          {
            "platform": "linux",
            "distro": "Debian",
            "release": "11 (bullseye)",
            "uptime": 36000
          }
        ],
        "required": [
          "platform",
          "distro",
          "release",
          "uptime"
        ],
        "properties": {
          "platform": {
            "type": "string",
            "x-stoplight": {
              "id": "gi8czfhmrsz57"
            },
            "description": "Operating system platform.",
            "example": "linux",
            "readOnly": true
          },
          "distro": {
            "type": "string",
            "x-stoplight": {
              "id": "oyastczdr72l4"
            },
            "description": "Operating system distribution.",
            "example": "Debian",
            "readOnly": true
          },
          "release": {
            "type": "string",
            "x-stoplight": {
              "id": "fyrh4amg3pnjg"
            },
            "description": "Operating system release version.",
            "example": "11 (bullseye)",
            "readOnly": true
          },
          "uptime": {
            "type": "integer",
            "x-stoplight": {
              "id": "48y8ssrgm4r37"
            },
            "description": "System uptime in seconds.",
            "example": 36000,
            "readOnly": true
          }
        }
      },
      "SystemDisplayInfo": {
        "title": "Display Info",
        "x-stoplight": {
          "id": "yohgkt80zd6mo"
        },
        "type": "object",
        "description": "Provides information about the display resolution and current screen resolution.",
        "examples": [
          {
            "resolution_x": 1920,
            "resolution_y": 1080,
            "current_res_x": 1280,
            "current_res_y": 720
          }
        ],
        "required": [
          "resolution_x",
          "resolution_y",
          "current_res_x",
          "current_res_y"
        ],
        "properties": {
          "resolution_x": {
            "type": "integer",
            "x-stoplight": {
              "id": "yphz414r7ts5t"
            },
            "description": "Native horizontal screen resolution.",
            "example": 1920,
            "readOnly": true
          },
          "resolution_y": {
            "type": "integer",
            "x-stoplight": {
              "id": "ie414pgsgth9x"
            },
            "description": "Native vertical screen resolution.",
            "example": 1080,
            "readOnly": true
          },
          "current_res_x": {
            "type": "integer",
            "x-stoplight": {
              "id": "1fxaos49nlm6h"
            },
            "description": "Current horizontal screen resolution.",
            "example": 1280,
            "readOnly": true
          },
          "current_res_y": {
            "type": "integer",
            "x-stoplight": {
              "id": "rjrqd5pgnvr0u"
            },
            "description": "Current vertical screen resolution.",
            "example": 720,
            "readOnly": true
          }
        }
      },
      "SystemNetworkStats": {
        "title": "Network Stats",
        "x-stoplight": {
          "id": "26283xm5gwunq"
        },
        "type": "object",
        "description": "Provides network statistics, including interface, received/transmitted bytes, and speed.",
        "examples": [
          {
            "interface": "eth0",
            "rx_bytes": 123456789,
            "tx_bytes": 98765432,
            "speed": 1000
          }
        ],
        "required": [
          "interface",
          "rx_bytes",
          "tx_bytes"
        ],
        "properties": {
          "interface": {
            "type": "string",
            "x-stoplight": {
              "id": "cag359yweit7g"
            },
            "description": "Network interface name.",
            "example": "eth0",
            "readOnly": true
          },
          "rx_bytes": {
            "type": "integer",
            "x-stoplight": {
              "id": "yy3jtbqwyo0ut"
            },
            "description": "Total received bytes.",
            "example": 123456789,
            "readOnly": true
          },
          "tx_bytes": {
            "type": "integer",
            "x-stoplight": {
              "id": "n0ak0qzwyxwg9"
            },
            "description": "Total transmitted bytes.",
            "example": 98765432,
            "readOnly": true
          }
        }
      },
      "SystemSystemInfo": {
        "title": "System Info",
        "x-stoplight": {
          "id": "wbo6qkfn7lyht"
        },
        "type": "object",
        "description": "Provides detailed information about the system, including CPU load, memory, storage, temperature, operating system, network, and display.",
        "required": [
          "cpu_load",
          "memory",
          "storage",
          "temperature",
          "os",
          "network",
          "display"
        ],
        "properties": {
          "cpu_load": {
            "type": "number",
            "x-stoplight": {
              "id": "sem3yqw8724n4"
            },
            "format": "float",
            "description": "Current CPU load percentage (0-100%).",
            "example": 15.3,
            "readOnly": true
          },
          "memory": {
            "$ref": "#/components/schemas/SystemMemoryInfo",
            "x-stoplight": {
              "id": "enhx59hck6jju"
            }
          },
          "storage": {
            "type": "array",
            "x-stoplight": {
              "id": "j6lj2egfbt8j2"
            },
            "description": "List of available storage devices and their usage details.",
            "items": {
              "$ref": "#/components/schemas/SystemStorageInfo",
              "x-stoplight": {
                "id": "7uvmkmq68yjs6"
              }
            },
            "readOnly": true
          },
          "temperature": {
            "$ref": "#/components/schemas/SystemTemperatureInfo",
            "x-stoplight": {
              "id": "z01gqe7hkikqa"
            }
          },
          "os": {
            "$ref": "#/components/schemas/SystemOperatingSystemInfo",
            "x-stoplight": {
              "id": "rfaqug7frjuai"
            },
            "description": "Operating system name and version."
          },
          "network": {
            "type": "array",
            "x-stoplight": {
              "id": "fs71xi3ht22cj"
            },
            "description": "List of network interfaces with statistics.",
            "items": {
              "$ref": "#/components/schemas/SystemNetworkStats",
              "x-stoplight": {
                "id": "eqyvv18bnntme"
              }
            },
            "readOnly": true
          },
          "display": {
            "$ref": "#/components/schemas/SystemDisplayInfo",
            "x-stoplight": {
              "id": "ivu0otn4sdyvp"
            }
          }
        },
        "examples": [
          {
            "cpu_load": 15.3,
            "memory": {
              "total": 8388608000,
              "used": 4200000000,
              "free": 4188608000
            },
            "storage": [
              {
                "fs": "/dev/mmcblk0p1",
                "used": 15000000000,
                "size": 32000000000,
                "available": 17000000000
              }
            ],
            "temperature": {
              "cpu": 55,
              "gpu": 60
            },
            "os": {
              "platform": "linux",
              "distro": "Debian",
              "release": "11 (bullseye)",
              "uptime": 36000
            },
            "network": [
              {
                "interface": "eth0",
                "rx_bytes": 123456789,
                "tx_bytes": 98765432,
                "speed": 1000
              }
            ],
            "display": {
              "resolution_x": 1920,
              "resolution_y": 1080,
              "current_res_x": 1280,
              "current_res_y": 720
            }
          }
        ]
      },
      "SystemThrottleStatus": {
        "title": "Throttle Status",
        "x-stoplight": {
          "id": "x0qahgn8sd7do"
        },
        "type": "object",
        "description": "Indicates whether the system has experienced any throttling, frequency capping, or undervoltage conditions.",
        "required": [
          "undervoltage",
          "frequency_capping",
          "throttling",
          "soft_temp_limit"
        ],
        "properties": {
          "undervoltage": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ru4kqmmmzej44"
            },
            "default": false,
            "description": "Indicates if the system has detected undervoltage conditions.",
            "readOnly": true
          },
          "frequency_capping": {
            "type": "boolean",
            "x-stoplight": {
              "id": "y641quncarvpz"
            },
            "default": false,
            "description": "Indicates if the system is reducing CPU frequency due to power constraints.",
            "readOnly": true
          },
          "throttling": {
            "type": "boolean",
            "x-stoplight": {
              "id": "qv7slmeul1gka"
            },
            "description": "Indicates if the system has experienced CPU throttling due to high temperatures.",
            "readOnly": true
          },
          "soft_temp_limit": {
            "type": "boolean",
            "x-stoplight": {
              "id": "ua0molsdre54d"
            },
            "default": false,
            "description": "Indicates if the system has reached the soft temperature limit and is reducing performance.",
            "readOnly": true
          }
        },
        "examples": [
          {
            "undervoltage": false,
            "frequency_capping": false,
            "throttling": true,
            "soft_temp_limit": false
          }
        ]
      },
      "UsersUser": {
        "title": "User",
        "x-stoplight": {
          "id": "6h2xvt79rvu2g"
        },
        "type": "object",
        "examples": [
          {
            "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
            "username": "johndoe",
            "first_name": "John",
            "last_name": "Doe",
            "email": "john@doe.com",
            "is_hidden": false,
            "role": "user",
            "created_at": "2025-01-25T12:00:00Z",
            "updated_at": "2025-01-25T12:00:00Z"
          }
        ],
        "description": "Represents a user in the system.",
        "required": [
          "id",
          "username",
          "first_name",
          "last_name",
          "email",
          "is_hidden",
          "role",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "o48lpkay583fl"
            },
            "format": "uuid",
            "example": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
            "description": "Unique identifier for the user."
          },
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "gjqaa2r93dnb6"
            },
            "example": "johndoe",
            "description": "Unique username of the user."
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "mvhx80if2i8jl"
            },
            "example": "John",
            "description": "First name of the user."
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "3tfalmvdncps0"
            },
            "example": "Doe",
            "description": "Last name of the user."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "h9dt8a1j3qcm8"
            },
            "format": "email",
            "example": "john@doe.com",
            "description": "Email address of the user."
          },
          "is_hidden": {
            "type": "boolean",
            "x-stoplight": {
              "id": "vrtq5rulx9bli"
            },
            "default": false,
            "description": "Indicates whether the user is hidden from general visibility."
          },
          "role": {
            "x-stoplight": {
              "id": "lv9s7zcbrjo60"
            },
            "enum": [
              "owner",
              "admin",
              "user",
              "display"
            ],
            "default": "user",
            "description": "User role: 'owner' has full access, 'admin' can manage users, 'user' has limited access, 'display' is read-only."
          },
          "created_at": {
            "type": "string",
            "x-stoplight": {
              "id": "7z4pvii5ne3o6"
            },
            "format": "date-time",
            "example": "2025-01-25T12:00:00Z",
            "description": "The timestamp when the user was created."
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "up18qwu5cejyh"
            },
            "format": "date-time",
            "example": "2025-01-25T12:00:00Z",
            "description": "The timestamp when the user was updated."
          }
        }
      },
      "UsersCreateUser": {
        "title": "Create User",
        "x-stoplight": {
          "id": "or42bpja2kkp1"
        },
        "type": "object",
        "examples": [
          {
            "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
            "username": "johndoe",
            "password": "superstrongpassword",
            "email": "john@doe.com",
            "first_name": "John",
            "last_name": "Doe",
            "role": "owner"
          }
        ],
        "description": "Schema for creating a new user.",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-stoplight": {
              "id": "wqplxyobz7e3h"
            },
            "format": "uuid",
            "example": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
            "description": "Unique identifier for the user."
          },
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "a7ebksnutq3q0"
            },
            "example": "johndoe",
            "description": "Unique username for the new user."
          },
          "password": {
            "type": "string",
            "x-stoplight": {
              "id": "fjxdrpd6v0mxm"
            },
            "example": "superstrongpassword",
            "format": "password",
            "minLength": 6,
            "description": "Password for the new user. Must be at least 6 characters long.",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "h9887qru697ly"
            },
            "format": "email",
            "example": "john@doe.com",
            "description": "Optional email address for the user."
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "35ud4clqv5krj"
            },
            "example": "John",
            "description": "Optional first name of the user."
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "i3qxyp583alrm"
            },
            "example": "Doe",
            "description": "Optional last name of the user."
          },
          "role": {
            "x-stoplight": {
              "id": "u07v66yxteyuc"
            },
            "enum": [
              "owner",
              "admin",
              "user",
              "display"
            ],
            "description": "Role of the user. Defaults to 'user' if not provided."
          }
        }
      },
      "UsersUpdateUser": {
        "title": "Update User",
        "x-stoplight": {
          "id": "y6lat93mbdiba"
        },
        "type": "object",
        "examples": [
          {
            "password": "superstrongpassword",
            "email": "john@doe.com",
            "first_name": "John",
            "last_name": "Doe",
            "role": "owner"
          }
        ],
        "description": "Schema for updating an existing user.",
        "properties": {
          "password": {
            "type": "string",
            "x-stoplight": {
              "id": "m0gf6h30u735j"
            },
            "format": "password",
            "example": "superstrongpassword",
            "description": "New password for the user.",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "8999uywgc0y2y"
            },
            "format": "email",
            "example": "john@doe.com",
            "description": "Updated email address of the user."
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "cyj2d5os0dvgu"
            },
            "example": "John",
            "description": "Updated first name of the user."
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "x-stoplight": {
              "id": "o2uztpkkfye7w"
            },
            "example": "Doe",
            "description": "Updated last name of the user."
          },
          "role": {
            "x-stoplight": {
              "id": "8ixqyoh6ebgv4"
            },
            "enum": [
              "owner",
              "admin",
              "user",
              "display"
            ],
            "description": "Updated role of the user."
          }
        }
      },
      "AuthRegister": {
        "title": "Register",
        "x-stoplight": {
          "id": "enapb5ztz1oho"
        },
        "type": "object",
        "examples": [
          {
            "username": "johndoe",
            "password": "superstrongpassword",
            "email": "john@doe.com",
            "first_name": "John",
            "last_name": "Doe"
          }
        ],
        "description": "Schema for user registration.",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "fy51w9jekslxb"
            },
            "example": "johndoe",
            "description": "Unique identifier for the user."
          },
          "password": {
            "type": "string",
            "x-stoplight": {
              "id": "pfxa7nqcgedxa"
            },
            "format": "password",
            "example": "superstrongpassword",
            "description": "User's password. Must be at least 6 characters long."
          },
          "email": {
            "type": "string",
            "x-stoplight": {
              "id": "mxzu3f1i3ymks"
            },
            "format": "email",
            "example": "john@doe.com",
            "description": "Optional user's email address."
          },
          "first_name": {
            "type": "string",
            "x-stoplight": {
              "id": "llgov4p6hv255"
            },
            "example": "John",
            "description": "Optional user's first name."
          },
          "last_name": {
            "type": "string",
            "x-stoplight": {
              "id": "chqyibia768bu"
            },
            "example": "Doe",
            "description": "Optional user's last name."
          }
        }
      },
      "AuthLogin": {
        "title": "Login",
        "x-stoplight": {
          "id": "9iza6rkq5m8tr"
        },
        "type": "object",
        "description": "Schema for user authentication.",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "l6nbsbr7h4owq"
            },
            "example": "johndoe",
            "description": "The username of the user."
          },
          "password": {
            "type": "string",
            "x-stoplight": {
              "id": "5xvx2wwe59gxm"
            },
            "format": "password",
            "example": "superstrongpassword",
            "description": "The user's password."
          }
        },
        "examples": [
          {
            "username": "johndoe",
            "password": "superstrongpassword"
          }
        ]
      },
      "AuthCheckEmail": {
        "title": "Check Email",
        "x-stoplight": {
          "id": "u5obsiq48fnlk"
        },
        "type": "object",
        "description": "Checks whether an email address is already in use.",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "x-stoplight": {
              "id": "iw8g236e5d1bp"
            },
            "format": "email",
            "example": "john@doe.com",
            "description": "The email address to check for availability."
          }
        },
        "examples": [
          {
            "email": "john@doe.com"
          }
        ]
      },
      "AuthCheckUsername": {
        "title": "Check Username",
        "x-stoplight": {
          "id": "71mcqqa9grx85"
        },
        "type": "object",
        "description": "Checks whether a username is already in use.",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "3pn0v76eqvvnm"
            },
            "example": "johndoe",
            "description": "The username to check for availability."
          }
        },
        "examples": [
          {
            "username": "johndoe"
          }
        ]
      },
      "WeatherLocationWeather": {
        "title": "Location Weather",
        "description": "Provides current weather conditions and forecast details for a specific location.",
        "type": "object",
        "examples": [
          {
            "weather": {
              "temperature": 22.5,
              "temperature_min": 18.2,
              "temperature_max": 25.8,
              "feels_like": 21.9,
              "pressure": 1013,
              "humidity": 55,
              "weather": {
                "code": 800,
                "main": "Clear",
                "description": "clear sky",
                "icon": "01d"
              },
              "sunrise": "2025-02-06T06:45:00Z",
              "sunset": "2025-02-06T17:30:00Z",
              "location": {
                "name": "Prague",
                "country": "CZ"
              },
              "wind": {
                "speed": 3.5,
                "deg": 180,
                "gust": 5.8
              },
              "clouds": 10,
              "rain": 0,
              "snow": null,
              "created_at": "2025-02-06T12:00:00Z"
            },
            "forecast": {
              "location": {
                "name": "Prague",
                "country": "CZ"
              },
              "sunrise": "2025-02-07T06:47:00Z",
              "sunset": "2025-02-07T17:32:00Z",
              "forecast": [
                {
                  "temperature": 20.5,
                  "temperature_min": 16,
                  "temperature_max": 24,
                  "feels_like": 19.8,
                  "pressure": 1015,
                  "humidity": 60,
                  "clouds": 30,
                  "rain": 0.5,
                  "snow": null,
                  "created_at": "2025-02-06T18:00:00Z"
                }
              ]
            }
          }
        ],
        "required": [
          "weather",
          "forecast"
        ],
        "properties": {
          "weather": {
            "type": "object",
            "description": "Current weather conditions at the specified location.",
            "required": [
              "temperature",
              "temperature_min",
              "temperature_max",
              "feels_like",
              "pressure",
              "humidity",
              "weather",
              "sunrise",
              "sunset",
              "location",
              "wind",
              "clouds",
              "rain",
              "snow",
              "created_at"
            ],
            "properties": {
              "temperature": {
                "type": "number",
                "description": "Current temperature in degrees Celsius.",
                "example": 22.5
              },
              "temperature_min": {
                "type": "number",
                "description": "Minimum recorded temperature for the day in degrees Celsius.",
                "example": 18.2
              },
              "temperature_max": {
                "type": "number",
                "description": "Maximum recorded temperature for the day in degrees Celsius.",
                "example": 25.8
              },
              "feels_like": {
                "type": "number",
                "description": "Perceived temperature based on wind and humidity.",
                "example": 21.9
              },
              "pressure": {
                "type": "number",
                "description": "Atmospheric pressure in hPa.",
                "example": 1013
              },
              "humidity": {
                "type": "number",
                "description": "Humidity level as a percentage.",
                "example": 55
              },
              "weather": {
                "type": "object",
                "description": "Detailed weather status.",
                "required": [
                  "code",
                  "main",
                  "description",
                  "icon"
                ],
                "properties": {
                  "code": {
                    "type": "number",
                    "description": "Weather condition code.",
                    "example": 800
                  },
                  "main": {
                    "type": "string",
                    "description": "Weather condition (e.g., Rain, Snow, Clear).",
                    "example": "Clear"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the weather condition.",
                    "example": "clear sky"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Icon code representing the current weather condition.",
                    "example": "01d"
                  }
                }
              },
              "sunrise": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp for sunrise in ISO 8601 format.",
                "example": "2025-02-06T06:45:00Z"
              },
              "sunset": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp for sunset in ISO 8601 format.",
                "example": "2025-02-06T17:30:00Z"
              },
              "location": {
                "type": "object",
                "description": "Details of the location where the weather data is recorded.",
                "required": [
                  "name",
                  "country"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the city or region.",
                    "example": "Prague"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country code (ISO 3166-1 alpha-2) or full country name.",
                    "example": "CZ"
                  }
                }
              },
              "wind": {
                "type": "object",
                "description": "Wind conditions at the location.",
                "required": [
                  "speed",
                  "deg",
                  "gust"
                ],
                "properties": {
                  "speed": {
                    "type": "number",
                    "description": "Wind speed in meters per second.",
                    "example": 3.5
                  },
                  "deg": {
                    "type": "number",
                    "description": "Wind direction in degrees (0¬∞ - 360¬∞).",
                    "example": 180
                  },
                  "gust": {
                    "type": "number",
                    "nullable": true,
                    "description": "Wind gust speed in meters per second.",
                    "example": 5.8
                  }
                }
              },
              "clouds": {
                "type": "number",
                "description": "Cloudiness percentage.",
                "example": 10
              },
              "rain": {
                "type": "number",
                "nullable": true,
                "description": "Rain volume in the last hour (mm).",
                "example": 0
              },
              "snow": {
                "type": "number",
                "nullable": true,
                "description": "Snow volume in the last hour (mm).",
                "example": null
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the weather data was last updated.",
                "example": "2025-02-06T12:00:00Z"
              }
            }
          },
          "forecast": {
            "type": "object",
            "description": "Weather forecast for upcoming days at the specified location.",
            "required": [
              "location",
              "sunrise",
              "sunset",
              "forecast"
            ],
            "properties": {
              "location": {
                "type": "object",
                "description": "Location details for the forecast.",
                "required": [
                  "name",
                  "country"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the city or region.",
                    "example": "Prague"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country code (ISO 3166-1 alpha-2) or full country name.",
                    "example": "CZ"
                  }
                }
              },
              "sunrise": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp for sunrise in ISO 8601 format.",
                "example": "2025-02-07T06:47:00Z"
              },
              "sunset": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp for sunset in ISO 8601 format.",
                "example": "2025-02-07T17:32:00Z"
              },
              "forecast": {
                "type": "array",
                "description": "List of daily weather forecasts.",
                "items": {
                  "type": "object",
                  "required": [
                    "temperature",
                    "temperature_min",
                    "temperature_max",
                    "feels_like",
                    "pressure",
                    "humidity",
                    "clouds",
                    "rain",
                    "snow",
                    "created_at"
                  ],
                  "properties": {
                    "temperature": {
                      "type": "number",
                      "description": "Predicted temperature in degrees Celsius.",
                      "example": 20.5
                    },
                    "temperature_min": {
                      "type": "number",
                      "description": "Predicted minimum temperature in degrees Celsius.",
                      "example": 16
                    },
                    "temperature_max": {
                      "type": "number",
                      "description": "Predicted maximum temperature in degrees Celsius.",
                      "example": 24
                    },
                    "feels_like": {
                      "type": "number",
                      "description": "Predicted perceived temperature based on wind and humidity.",
                      "example": 19.8
                    },
                    "pressure": {
                      "type": "number",
                      "description": "Predicted atmospheric pressure in hPa.",
                      "example": 1015
                    },
                    "humidity": {
                      "type": "number",
                      "description": "Predicted humidity level as a percentage.",
                      "example": 60
                    },
                    "clouds": {
                      "type": "number",
                      "description": "Predicted cloudiness percentage.",
                      "example": 30
                    },
                    "rain": {
                      "type": "number",
                      "nullable": true,
                      "description": "Predicted rain volume in the last 3 hours (mm).",
                      "example": 0.5
                    },
                    "snow": {
                      "type": "number",
                      "nullable": true,
                      "description": "Predicted snow volume in the last 3 hours (mm).",
                      "example": null
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the forecast data was last updated.",
                      "example": "2025-02-06T18:00:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WeatherGeolocation": {
        "title": "Geolocation",
        "description": "Represents geographical location details, including city name, coordinates, and country information.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the city or location.",
            "example": "Prague"
          },
          "local_names": {
            "type": "object",
            "description": "Alternative names for the location in different languages.",
            "additionalProperties": {
              "type": "string",
              "description": "Localized name of the location in a specific language, where the key is the language code (ISO 639-1).",
              "example": "Prague"
            }
          },
          "lat": {
            "type": "string",
            "description": "Latitude coordinate of the location.",
            "example": "50.0755"
          },
          "lon": {
            "type": "string",
            "description": "Longitude coordinate of the location.",
            "example": "14.4378"
          },
          "country": {
            "type": "string",
            "description": "Country code (ISO 3166-1 alpha-2) or full country name.",
            "example": "CZ"
          },
          "state": {
            "type": "string",
            "description": "State or province where the location is situated, if applicable.",
            "example": "Prague Region"
          }
        },
        "examples": [
          {
            "name": "Prague",
            "local_names": {
              "property1": "Prague",
              "property2": "Prague"
            },
            "lat": "50.0755",
            "lon": "14.4378",
            "country": "CZ",
            "state": "Prague Region"
          }
        ]
      }
    },
    "securitySchemes": {
      "authentication": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {
      "DevicesCreateDevice": {
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "x-stoplight": {
                    "id": "581tlmgp6fis7"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DevicesCreateThirdPartyDevice"
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "controls": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "dvakiha4fg210"
                      },
                      "items": {
                        "$ref": "#/components/schemas/DevicesCreateDeviceControl",
                        "x-stoplight": {
                          "id": "583gjs6v29vd2"
                        }
                      }
                    },
                    "channels": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "3swd8sili9ici"
                      },
                      "items": {
                        "x-stoplight": {
                          "id": "5dhs4eiicofro"
                        },
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/DevicesCreateChannel",
                            "x-stoplight": {
                              "id": "y0dgcdo1pb0m0"
                            }
                          },
                          {
                            "type": "object",
                            "x-stoplight": {
                              "id": "pjmtkpzl3o1af"
                            },
                            "properties": {
                              "controls": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "z5epd5i022pkc"
                                },
                                "items": {
                                  "$ref": "#/components/schemas/DevicesCreateChannelControl",
                                  "x-stoplight": {
                                    "id": "h21xyazhahfoy"
                                  }
                                }
                              },
                              "properties": {
                                "type": "array",
                                "x-stoplight": {
                                  "id": "o0mpz1lv5d564"
                                },
                                "items": {
                                  "$ref": "#/components/schemas/DevicesCreateChannelProperty",
                                  "x-stoplight": {
                                    "id": "wu0igzolexj7o"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "type": "third-party",
                  "category": "generic",
                  "name": "Thermostat",
                  "description": "Living room thermostat",
                  "service_address": "http://192.168.1.100/webhook",
                  "controls": [
                    {
                      "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                      "name": "reboot"
                    }
                  ],
                  "channels": [
                    {
                      "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                      "category": "generic",
                      "name": "Temperature Sensor",
                      "description": "Living room temperature sensor",
                      "controls": [
                        {
                          "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                          "name": "reset"
                        }
                      ],
                      "properties": [
                        {
                          "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                          "category": "generic",
                          "name": "Thermostat mode",
                          "permission": [
                            "ro"
                          ],
                          "data_type": "char",
                          "unit": "¬∞C",
                          "format": [
                            "heat",
                            "auto"
                          ],
                          "invalid": -999,
                          "step": 0.5,
                          "value": 22.1
                        }
                      ]
                    }
                  ]
                }
              },
              "Example 2": {
                "value": {
                  "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "type": "third-party",
                  "category": "generic",
                  "name": "Thermostat",
                  "description": "Living room thermostat",
                  "service_address": "http://192.168.1.100/webhook",
                  "controls": [
                    {
                      "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                      "name": "reboot"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The data required to create a new device"
      },
      "DevicesCreateDeviceControl": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesCreateDeviceControl"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                  "name": "reboot"
                }
              }
            }
          }
        },
        "description": "The data required to create a new device control"
      },
      "DevicesCreateChannel": {
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DevicesCreateChannel"
                },
                {
                  "type": "object",
                  "x-stoplight": {
                    "id": "7pi0vfc3f1sqa"
                  },
                  "required": [
                    "device"
                  ],
                  "properties": {
                    "device": {
                      "x-stoplight": {
                        "id": "8kgj4br0smahp"
                      },
                      "description": "The parent device to which this channel belongs.",
                      "type": "string",
                      "format": "uuid",
                      "example": "332dda32-b7de-4557-956a-b6ed6c6799a4"
                    },
                    "controls": {
                      "$ref": "#/components/schemas/DevicesCreateChannelControl",
                      "x-stoplight": {
                        "id": "i3qg89uy5lnaj"
                      }
                    },
                    "properties": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "cr87rxqszumqg"
                      },
                      "items": {
                        "$ref": "#/components/schemas/DevicesCreateChannelProperty",
                        "x-stoplight": {
                          "id": "um7m55pv0y1wk"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "category": "generic",
                  "name": "Temperature Sensor",
                  "description": "Living room temperature sensor",
                  "device": "332dda32-b7de-4557-956a-b6ed6c6799a4"
                }
              },
              "Example 2": {
                "value": {
                  "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "category": "generic",
                  "name": "Temperature Sensor",
                  "description": "Living room temperature sensor",
                  "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "controls": {
                    "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                    "name": "reset"
                  },
                  "properties": [
                    {
                      "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                      "category": "generic",
                      "name": "Thermostat mode",
                      "permission": [
                        "ro"
                      ],
                      "data_type": "char",
                      "unit": "¬∞C",
                      "format": [
                        "heat",
                        "auto"
                      ],
                      "invalid": -999,
                      "step": 0.5,
                      "value": 22.1
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The data required to create a new channel"
      },
      "DevicesCreateChannelControl": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesCreateChannelControl"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                  "name": "reset"
                }
              }
            }
          }
        },
        "description": "The data required to create a new channel control"
      },
      "DevicesCreateChannelProperty": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesCreateChannelProperty"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                  "category": "generic",
                  "name": "Thermostat mode",
                  "permission": [
                    "ro"
                  ],
                  "data_type": "char",
                  "unit": "¬∞C",
                  "format": [
                    "heat",
                    "auto"
                  ],
                  "invalid": -999,
                  "step": 0.5,
                  "value": 22.1
                }
              }
            }
          }
        },
        "description": "The data required to create a new channel property"
      },
      "DevicesUpdateDevice": {
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DevicesUpdateThirdPartyDevice"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "name": "Thermostat",
                  "description": "Living room thermostat",
                  "service_address": "http://192.168.1.100/webhook"
                }
              }
            }
          }
        },
        "description": "The data required to update a existing device"
      },
      "DevicesUpdateChannel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesUpdateChannel"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "name": "Temperature Sensor",
                  "description": "Living room temperature sensor"
                }
              }
            }
          }
        },
        "description": "The data required to update a existing channel"
      },
      "DevicesUpdateChannelProperty": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesUpdateChannelProperty"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "name": "Thermostat mode",
                  "unit": "¬∞C",
                  "format": [
                    "heat",
                    "auto"
                  ],
                  "invalid": -999,
                  "step": 0.5,
                  "value": 22.1
                }
              }
            }
          }
        },
        "description": "The data required to update a existing channel property"
      },
      "DevicesCreateDeviceChannel": {
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DevicesCreateChannel"
                },
                {
                  "type": "object",
                  "x-stoplight": {
                    "id": "ynjbduj6pg58t"
                  },
                  "properties": {
                    "controls": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "rmvqctrbd1hfe"
                      },
                      "items": {
                        "$ref": "#/components/schemas/DevicesCreateChannelControl",
                        "x-stoplight": {
                          "id": "qkrj8ilq80kwb"
                        }
                      }
                    },
                    "properties": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "s4hl00tygc86v"
                      },
                      "items": {
                        "$ref": "#/components/schemas/DevicesCreateChannelProperty",
                        "x-stoplight": {
                          "id": "iai8z7jyzeiyf"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "category": "generic",
                  "name": "Temperature Sensor",
                  "description": "Living room temperature sensor"
                }
              },
              "Example 2": {
                "value": {
                  "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "category": "generic",
                  "name": "Temperature Sensor",
                  "description": "Living room temperature sensor",
                  "controls": [
                    {
                      "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                      "name": "reset"
                    }
                  ],
                  "properties": [
                    {
                      "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                      "category": "generic",
                      "name": "Thermostat mode",
                      "permission": [
                        "ro"
                      ],
                      "data_type": "char",
                      "unit": "¬∞C",
                      "format": [
                        "heat",
                        "auto"
                      ],
                      "invalid": -999,
                      "step": 0.5,
                      "value": 22.1
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The data required to create a new device channel"
      },
      "DashboardCreatePage": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateCardsPage",
                      "x-stoplight": {
                        "id": "4sjuedxl8l1xk"
                      }
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "pfgpmp2l3gig7"
                      },
                      "properties": {
                        "cards": {
                          "x-stoplight": {
                            "id": "6k4mrv9oboyi4"
                          },
                          "type": "array",
                          "description": "A list of tiles to include on the cards page.",
                          "items": {
                            "x-stoplight": {
                              "id": "wfhdgm2ra6k1g"
                            },
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateCard",
                                "x-stoplight": {
                                  "id": "vec4y0oqcn41g"
                                }
                              },
                              {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "615kfzq0vckez"
                                },
                                "properties": {
                                  "tiles": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "icb8pbt8fcymf"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "rhizc2y60jkif"
                                      },
                                      "oneOf": [
                                        {
                                          "x-stoplight": {
                                            "id": "omxdv6cphgjec"
                                          },
                                          "allOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDeviceTile"
                                            },
                                            {
                                              "type": "object",
                                              "x-stoplight": {
                                                "id": "wyw7j70thim1b"
                                              },
                                              "properties": {
                                                "data_source": {
                                                  "type": "array",
                                                  "x-stoplight": {
                                                    "id": "gr56vuddsk0ea"
                                                  },
                                                  "items": {
                                                    "x-stoplight": {
                                                      "id": "ge20czj9rlfpd"
                                                    },
                                                    "oneOf": [
                                                      {
                                                        "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                                        "x-stoplight": {
                                                          "id": "d4s1pbg9x7p7f"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "x-stoplight": {
                                            "id": "7wnecg1wr4wny"
                                          },
                                          "allOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateTimeTile"
                                            },
                                            {
                                              "type": "object",
                                              "x-stoplight": {
                                                "id": "0ffiziuk7z5gj"
                                              },
                                              "properties": {
                                                "data_source": {
                                                  "type": "array",
                                                  "x-stoplight": {
                                                    "id": "1qqu1fy0dnrn4"
                                                  },
                                                  "items": {
                                                    "x-stoplight": {
                                                      "id": "uv8acw6fr6ugu"
                                                    },
                                                    "oneOf": [
                                                      {
                                                        "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                                        "x-stoplight": {
                                                          "id": "6j9wkowzwryg8"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "x-stoplight": {
                                            "id": "leoxyssax2qoe"
                                          },
                                          "allOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDayWeatherTile"
                                            },
                                            {
                                              "type": "object",
                                              "x-stoplight": {
                                                "id": "b6lynx5qei76v"
                                              },
                                              "properties": {
                                                "data_source": {
                                                  "type": "array",
                                                  "x-stoplight": {
                                                    "id": "v05vm2h2zgxd7"
                                                  },
                                                  "items": {
                                                    "x-stoplight": {
                                                      "id": "tie0lhh3v8fq7"
                                                    },
                                                    "oneOf": [
                                                      {
                                                        "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                                        "x-stoplight": {
                                                          "id": "9ye7r1irq64bg"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "x-stoplight": {
                                            "id": "ji0aqkijjtstb"
                                          },
                                          "allOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateForecastWeatherTile"
                                            },
                                            {
                                              "type": "object",
                                              "x-stoplight": {
                                                "id": "v785istci70gv"
                                              },
                                              "properties": {
                                                "data_source": {
                                                  "type": "array",
                                                  "x-stoplight": {
                                                    "id": "umzm5zkxmy43x"
                                                  },
                                                  "items": {
                                                    "x-stoplight": {
                                                      "id": "bht4v7obk2hqx"
                                                    },
                                                    "oneOf": [
                                                      {
                                                        "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                                        "x-stoplight": {
                                                          "id": "q7p2749fbjumt"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "data_source": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "dj5dmapvan7hu"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "qyxxssudybdi1"
                                      },
                                      "oneOf": [
                                        {
                                          "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                          "x-stoplight": {
                                            "id": "a36joah74ypa7"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "becl5pjii1il8"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "ddtcpu79dggbv"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "e03ffhndkfwi3"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "l8hknexcfudlg"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateTilesPage"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "felzq95w4r397"
                      },
                      "properties": {
                        "tiles": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "hj5w6dvrzmar9"
                          },
                          "description": "A list of tiles to include on the cards page.",
                          "items": {
                            "x-stoplight": {
                              "id": "hx70ssfwop73d"
                            },
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/DashboardCreateDeviceTile",
                                    "x-stoplight": {
                                      "id": "b94gudfiutjjn"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "374qxo2wiw7qf"
                                    },
                                    "properties": {
                                      "data_source": {
                                        "type": "array",
                                        "x-stoplight": {
                                          "id": "pxv5k7zx6ah0m"
                                        },
                                        "description": "A list of data sources associated with the device tile.",
                                        "items": {
                                          "x-stoplight": {
                                            "id": "ydrfppzf1ac1u"
                                          },
                                          "oneOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                              "x-stoplight": {
                                                "id": "s5e5tl0a85ohl"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "x-stoplight": {
                                  "id": "ndofl8efafxha"
                                },
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/DashboardCreateTimeTile",
                                    "x-stoplight": {
                                      "id": "091c09p8t5z9l"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "63gsva6kw34mw"
                                    },
                                    "properties": {
                                      "data_source": {
                                        "type": "array",
                                        "x-stoplight": {
                                          "id": "fc5vysckoj5jp"
                                        },
                                        "description": "A list of data sources associated with the device tile.",
                                        "items": {
                                          "x-stoplight": {
                                            "id": "tpqk303hqud7d"
                                          },
                                          "oneOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                              "x-stoplight": {
                                                "id": "tj03d4k4yqyux"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "x-stoplight": {
                                  "id": "gdgng6rvldrte"
                                },
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/DashboardCreateDayWeatherTile",
                                    "x-stoplight": {
                                      "id": "o17emei8g5szl"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "q0ctb06z0qx1d"
                                    },
                                    "properties": {
                                      "data_source": {
                                        "type": "array",
                                        "x-stoplight": {
                                          "id": "eudwpbbijxgkl"
                                        },
                                        "description": "A list of data sources associated with the device tile.",
                                        "items": {
                                          "x-stoplight": {
                                            "id": "0g8w5qw3fgi7x"
                                          },
                                          "oneOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                              "x-stoplight": {
                                                "id": "bo9i0cso202eg"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "x-stoplight": {
                                  "id": "n119ljjtl1e5i"
                                },
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/DashboardCreateForecastWeatherTile",
                                    "x-stoplight": {
                                      "id": "r7d5qqshn9307"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "u9edreitoljv6"
                                    },
                                    "properties": {
                                      "data_source": {
                                        "type": "array",
                                        "x-stoplight": {
                                          "id": "gxcdxp6zg3sxm"
                                        },
                                        "description": "A list of data sources associated with the device tile.",
                                        "items": {
                                          "x-stoplight": {
                                            "id": "o9jhrz12rfu4q"
                                          },
                                          "oneOf": [
                                            {
                                              "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                              "x-stoplight": {
                                                "id": "0414xd16mfc5e"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "lemn2kgktuj25"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "aog7mhxn6v8np"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "ixm3ux7gyvlki"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "$ref": "#/components/schemas/DashboardCreateDevicePage",
                  "x-stoplight": {
                    "id": "9hyz4i0yrmr6o"
                  }
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "cards",
                  "title": "My Dashboard",
                  "icon": "icon-name",
                  "order": 1,
                  "cards": [
                    {
                      "id": "89a29104-184f-4b6f-9b37-5a70e24f8b44",
                      "title": "Mood lights",
                      "icon": "icon-name",
                      "order": 0,
                      "tiles": [
                        {
                          "id": "123e4567-e89b-12d3-a456-426614174000",
                          "type": "device",
                          "row": 1,
                          "col": 2,
                          "row_span": 1,
                          "col_span": 2,
                          "device": "123e4567-e89b-12d3-a456-426614174001",
                          "data_source": [
                            {
                              "id": "123e4567-e89b-12d3-a456-426614174000",
                              "type": "device_channel",
                              "device": "123e4567-e89b-12d3-a456-426614174001",
                              "channel": "123e4567-e89b-12d3-a456-426614174002",
                              "property": "123e4567-e89b-12d3-a456-426614174003",
                              "icon": "icon-name"
                            }
                          ]
                        }
                      ],
                      "data_source": [
                        {
                          "id": "123e4567-e89b-12d3-a456-426614174000",
                          "type": "device_channel",
                          "device": "123e4567-e89b-12d3-a456-426614174001",
                          "channel": "123e4567-e89b-12d3-a456-426614174002",
                          "property": "123e4567-e89b-12d3-a456-426614174003",
                          "icon": "icon-name"
                        }
                      ]
                    }
                  ],
                  "data_source": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device_channel",
                      "device": "123e4567-e89b-12d3-a456-426614174001",
                      "channel": "123e4567-e89b-12d3-a456-426614174002",
                      "property": "123e4567-e89b-12d3-a456-426614174003",
                      "icon": "icon-name"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new dashboard page."
      },
      "DashboardCreatePageTile": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateDeviceTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "xzdwz6olii67e"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "eo5tt80atdf9k"
                          },
                          "description": "A list of data sources associated with the device tile.",
                          "items": {
                            "x-stoplight": {
                              "id": "u5hl3l2roneqn"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "stp002hytx35q"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "cm9umz04l95kc"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateTimeTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "9zuya5pudn22t"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "2zjeckgq3gmfs"
                          },
                          "description": "A list of data sources associated with the device tile.",
                          "items": {
                            "x-stoplight": {
                              "id": "if8pd4at0m42d"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "lrpxr9y6ivhvh"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "5ddxnvyxp2bwx"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateDayWeatherTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "hr5y7qssf7h4n"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "ycxlefz7g7bb5"
                          },
                          "description": "A list of data sources associated with the device tile.",
                          "items": {
                            "x-stoplight": {
                              "id": "4uy9evwofp2e6"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "0ke4loe02mi91"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "oasntr5xywi16"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateForecastWeatherTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "2oa26yvoi34i0"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "wytvaysaqtpmf"
                          },
                          "description": "A list of data sources associated with the device tile.",
                          "items": {
                            "x-stoplight": {
                              "id": "39vwzpth0jy7x"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "8f2jtfaiqwg4h"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device",
                  "row": 1,
                  "col": 2,
                  "row_span": 1,
                  "col_span": 2,
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "data_source": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device_channel",
                      "device": "123e4567-e89b-12d3-a456-426614174001",
                      "channel": "123e4567-e89b-12d3-a456-426614174002",
                      "property": "123e4567-e89b-12d3-a456-426614174003"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new page tile."
      },
      "DashboardCreatePageTileDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device_channel",
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "channel": "123e4567-e89b-12d3-a456-426614174002",
                  "property": "123e4567-e89b-12d3-a456-426614174003"
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new tile data source."
      },
      "DashboardUpdatePage": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateCardsPage"
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateTilesPage",
                  "x-stoplight": {
                    "id": "0vaxmr6p8vsbc"
                  }
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateDevicePage",
                  "x-stoplight": {
                    "id": "pw9163j4hz7t0"
                  }
                }
              ]
            }
          }
        },
        "description": "The payload schema used for updatin a existing dashboard page."
      },
      "DashboardUpdatePageTile": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceTile"
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateTimeTile",
                  "x-stoplight": {
                    "id": "czg93o33kk5iz"
                  }
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateDayWeatherTile",
                  "x-stoplight": {
                    "id": "f51y2buuvp93n"
                  }
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateForecastWeatherTile",
                  "x-stoplight": {
                    "id": "xxlhdaumioxs1"
                  }
                }
              ]
            },
            "examples": {}
          }
        },
        "description": "The payload schema used for updating a existing page tile."
      },
      "DashboardUpdatePageTileDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "device": "b12345c6-7890-4d12-345e-6f7890abcd12",
                  "channel": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
                  "property": "cd09772a-6981-4dd7-be1c-f2edd6978ee1"
                }
              }
            }
          }
        },
        "description": "The payload schema used for updating a existing tile data source."
      },
      "ConfigUpdate": {
        "description": "Request body for updating audio configuration, allowing modifications to speaker and microphone settings.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConfigUpdateAudio",
                  "x-stoplight": {
                    "id": "1rx9mcxxr5udx"
                  }
                },
                {
                  "$ref": "#/components/schemas/ConfigUpdateDisplay",
                  "x-stoplight": {
                    "id": "rmeawzv5towxy"
                  }
                },
                {
                  "$ref": "#/components/schemas/ConfigUpdateLanguage",
                  "x-stoplight": {
                    "id": "08qowe3sg9sll"
                  }
                },
                {
                  "$ref": "#/components/schemas/ConfigUpdateWeather",
                  "x-stoplight": {
                    "id": "l72u9d3r0hlb4"
                  }
                }
              ]
            },
            "examples": {}
          }
        }
      },
      "DevicesThirdPartyDevicePropertyUpdateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesThirdPartyDevicePropertyUpdateRequest"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "properties": [
                    {
                      "device": "234e5678-a89b-22d3-c456-426614174133",
                      "channel": "456e7890-c89d-42d5-e678-626816194355",
                      "property": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                      "value": true
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Represents property update operation for a third-party device."
      },
      "DashboardCreatePageCard": {
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DashboardCreateCard"
                },
                {
                  "type": "object",
                  "x-stoplight": {
                    "id": "77lpt4k3u662s"
                  },
                  "properties": {
                    "tiles": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "aa39rrsfsw7ug"
                      },
                      "items": {
                        "x-stoplight": {
                          "id": "1zgzy3pfqeyu3"
                        },
                        "oneOf": [
                          {
                            "x-stoplight": {
                              "id": "9ccomn5sutm24"
                            },
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceTile"
                              },
                              {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "dxpbiej3nl9bm"
                                },
                                "properties": {
                                  "data_source": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "8j109f3q446xy"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "y4rtahbpf6hce"
                                      },
                                      "oneOf": [
                                        {
                                          "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                          "x-stoplight": {
                                            "id": "q12gw08o7fkkj"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "x-stoplight": {
                              "id": "mv5k07taf0z41"
                            },
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateTimeTile"
                              },
                              {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "7x0x0ylkn05ie"
                                },
                                "properties": {
                                  "data_source": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "ufg0w7rjqtuah"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "wum4smu3wdja1"
                                      },
                                      "oneOf": [
                                        {
                                          "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                          "x-stoplight": {
                                            "id": "nk14sjdsjl9h6"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "x-stoplight": {
                              "id": "5q6stpc0b1bn1"
                            },
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDayWeatherTile"
                              },
                              {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "8qt77aftqlann"
                                },
                                "properties": {
                                  "data_source": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "f2o8nvy1h8yk5"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "3q78ga2m0wcjn"
                                      },
                                      "oneOf": [
                                        {
                                          "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                          "x-stoplight": {
                                            "id": "2rmv5czcfa38t"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "x-stoplight": {
                              "id": "4542m74qow3i5"
                            },
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateForecastWeatherTile"
                              },
                              {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "xbivt7kmgsvly"
                                },
                                "properties": {
                                  "data_source": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "wm38kdw2drnlg"
                                    },
                                    "items": {
                                      "x-stoplight": {
                                        "id": "kuuyhd0bufslg"
                                      },
                                      "oneOf": [
                                        {
                                          "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                          "x-stoplight": {
                                            "id": "gvprpszyhnafp"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "data_source": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "tthl2irz8aorm"
                      },
                      "items": {
                        "x-stoplight": {
                          "id": "5v5m9k9blsxsx"
                        },
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                            "x-stoplight": {
                              "id": "hvu51n8p842ja"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "89a29104-184f-4b6f-9b37-5a70e24f8b44",
                  "title": "Mood lights",
                  "icon": "icon-name",
                  "order": 0,
                  "tiles": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device",
                      "row": 1,
                      "col": 2,
                      "row_span": 1,
                      "col_span": 2,
                      "device": "123e4567-e89b-12d3-a456-426614174001",
                      "data_source": [
                        {
                          "id": "123e4567-e89b-12d3-a456-426614174000",
                          "type": "device_channel",
                          "device": "123e4567-e89b-12d3-a456-426614174001",
                          "channel": "123e4567-e89b-12d3-a456-426614174002",
                          "property": "123e4567-e89b-12d3-a456-426614174003",
                          "icon": "icon-name"
                        }
                      ]
                    }
                  ],
                  "data_source": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device_channel",
                      "device": "123e4567-e89b-12d3-a456-426614174001",
                      "channel": "123e4567-e89b-12d3-a456-426614174002",
                      "property": "123e4567-e89b-12d3-a456-426614174003",
                      "icon": "icon-name"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new page card."
      },
      "DashboardCreatePageDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device_channel",
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "channel": "123e4567-e89b-12d3-a456-426614174002",
                  "property": "123e4567-e89b-12d3-a456-426614174003",
                  "icon": "icon-name"
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new page data source."
      },
      "DashboardCreatePageCardDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device_channel",
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "channel": "123e4567-e89b-12d3-a456-426614174002",
                  "property": "123e4567-e89b-12d3-a456-426614174003",
                  "icon": "icon-name"
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new card data source."
      },
      "DashboardCreatePageCardTile": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateDeviceTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "npm9ggwqtvif0"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "jbwzw8vfq7o6l"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "kl3zv3w9v8cjb"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "1uh7savam55gr"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "jnqaein9t3c4e"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateTimeTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "t3dgg1nbb8cii"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "yp5mqrhbxwtze"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "f8zziqu827c7a"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "oj73l594aqhla"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "6j2mkkvy267qx"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateDayWeatherTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "vtyvnqenv688r"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "zxacn5c7td269"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "3ed4accmfa7zc"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "3g71rgekv9ws5"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "x-stoplight": {
                    "id": "y4azdh8dh0tq0"
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DashboardCreateForecastWeatherTile"
                    },
                    {
                      "type": "object",
                      "x-stoplight": {
                        "id": "deovh3ps94s2k"
                      },
                      "properties": {
                        "data_source": {
                          "type": "array",
                          "x-stoplight": {
                            "id": "0jk4tcupsohsq"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "hr2ezwe2x3akz"
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource",
                                "x-stoplight": {
                                  "id": "rutev3bu89rhx"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device",
                  "row": 1,
                  "col": 2,
                  "row_span": 1,
                  "col_span": 2,
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "data_source": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device_channel",
                      "device": "123e4567-e89b-12d3-a456-426614174001",
                      "channel": "123e4567-e89b-12d3-a456-426614174002",
                      "property": "123e4567-e89b-12d3-a456-426614174003",
                      "icon": "icon-name"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new card tile."
      },
      "DashboardUpdatePageCard": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DashboardUpdateCard"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "title": "Room lights",
                  "icon": "icon-name",
                  "order": 1
                }
              }
            }
          }
        },
        "description": "The payload schema used for updatin a existing page card."
      },
      "DashboardUpdatePageCardDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "device": "b12345c6-7890-4d12-345e-6f7890abcd12",
                  "channel": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
                  "property": "cd09772a-6981-4dd7-be1c-f2edd6978ee1"
                }
              }
            }
          }
        },
        "description": "The payload schema used for updatin a existing card data source."
      },
      "DashboardUpdatePageCardTile": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceTile"
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateTimeTile",
                  "x-stoplight": {
                    "id": "b70no3yqchoty"
                  }
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateDayWeatherTile",
                  "x-stoplight": {
                    "id": "cxqmaml2mdeg9"
                  }
                },
                {
                  "$ref": "#/components/schemas/DashboardUpdateForecastWeatherTile",
                  "x-stoplight": {
                    "id": "qt8nxdtrxdqr1"
                  }
                }
              ]
            }
          }
        },
        "description": "The payload schema used for updatin a existing card tile."
      },
      "DashboardUpdatePageCardTileDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "device": "b12345c6-7890-4d12-345e-6f7890abcd12",
                  "channel": "cd09772a-6981-4dd7-be1c-f2edd6978ee1",
                  "property": "cd09772a-6981-4dd7-be1c-f2edd6978ee1"
                }
              }
            }
          }
        },
        "description": "The payload schema used for updatin a existing tile data source."
      },
      "DashboardCreatePageCardTileDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCreateDeviceChannelDataSource"
                }
              ]
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "123e4567-e89b-12d3-a456-426614174000",
                  "type": "device_channel",
                  "device": "123e4567-e89b-12d3-a456-426614174001",
                  "channel": "123e4567-e89b-12d3-a456-426614174002",
                  "property": "123e4567-e89b-12d3-a456-426614174003",
                  "icon": "icon-name"
                }
              }
            }
          }
        },
        "description": "The payload schema used for creating a new tile data source."
      },
      "DashboardUpdatePageDataSource": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardUpdateDeviceChannelDataSource"
                }
              ]
            }
          }
        },
        "description": "The payload schema used for updatin a existing page data source."
      },
      "UsersCreateUser": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UsersCreateUser"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                  "username": "johndoe",
                  "password": "superstrongpassword",
                  "email": "john@doe.com",
                  "first_name": "John",
                  "last_name": "Doe",
                  "role": "owner"
                }
              }
            }
          }
        },
        "description": "Schema for creating a new user."
      },
      "UsersUpdateUser": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UsersUpdateUser"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "password": "superstrongpassword",
                  "email": "john@doe.com",
                  "first_name": "John",
                  "last_name": "Doe",
                  "role": "owner"
                }
              }
            }
          }
        },
        "description": "Schema for updating an existing user. Supports partial updates."
      },
      "AuthRegister": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthRegister"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "username": "johndoe",
                  "password": "superstrongpassword",
                  "email": "john@doe.com",
                  "first_name": "John",
                  "last_name": "Doe"
                }
              }
            }
          }
        },
        "description": "Schema for user registration."
      },
      "AuthLogin": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthLogin"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "username": "johndoe",
                  "password": "superstrongpassword"
                }
              }
            }
          }
        },
        "description": "Schema for user authentication."
      },
      "AuthCheckEmail": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthCheckEmail"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "email": "john@doe.com"
                }
              }
            }
          }
        },
        "description": "Checks whether an email address is already in use."
      },
      "AuthCheckUsername": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthCheckUsername"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "username": "johndoe"
                }
              }
            }
          }
        },
        "description": "Checks whether a username is already in use."
      },
      "AuthRefresh": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "token"
              ],
              "properties": {
                "token": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "vahbmcggw9ne8"
                  },
                  "description": "JWT refresh access token"
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "token": "string"
                }
              }
            }
          }
        },
        "description": "Schema for user access token refresh."
      }
    },
    "responses": {
      "InternalServerError": {
        "description": "An unexpected server error occurred.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "error",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "3xtp1hsf5xsrd"
                  },
                  "example": "error",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "nrapgs6yp3ac6"
                  },
                  "format": "date-time",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "example": "2025-01-18T12:00:00Z",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "5rbykiosg2689"
                  },
                  "format": "uuid",
                  "description": "Unique identifier for this specific API request.",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "nxf7wa52uzv9y"
                  },
                  "description": "The requested API endpoint.",
                  "example": "/api/v1/devices-module",
                  "readOnly": true
                },
                "method": {
                  "x-stoplight": {
                    "id": "lz1iarf6fhd1r"
                  },
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "error": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "0cz08552eteak"
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "sy2z7sge63syj"
                      },
                      "description": "Short error code indicating the type of error.",
                      "example": "InternalServerError",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "rtobjj2ctjjzh"
                      },
                      "description": "Detailed error message for debugging or client display.",
                      "example": "An unexpected error occurred.",
                      "readOnly": true
                    },
                    "details": {
                      "x-stoplight": {
                        "id": "znd5s5mo9ernu"
                      },
                      "oneOf": [
                        {
                          "type": "object",
                          "x-stoplight": {
                            "id": "dgizvusgmhz2k"
                          },
                          "properties": {
                            "field": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "ed2ekhzoznfo5"
                              },
                              "example": "name",
                              "readOnly": true
                            },
                            "reason": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "voit7qri2rmln"
                              },
                              "example": "Name cannot contain special characters.",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "type": "array",
                          "x-stoplight": {
                            "id": "23hdh59cmo4dc"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "1dd00h38oasqt"
                            },
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "s4qswaaj3o7pk"
                                },
                                "example": "name",
                                "readOnly": true
                              },
                              "reason": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "8k0tauzin0ff6"
                                },
                                "example": "Name cannot contain special characters.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      ],
                      "description": "Additional information about the error, if available."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "7byr2a4vc3kbq"
                  },
                  "required": [
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "server_time": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "fvicebj0rr5os"
                      },
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "e4udwl0wa83jj"
                      },
                      "format": "float",
                      "example": 30.73,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "error",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module",
                  "method": "GET",
                  "error": {
                    "code": "InternalServerError",
                    "message": "An unexpected error occurred.",
                    "details": {
                      "field": "name",
                      "reason": "Name cannot contain special characters."
                    }
                  },
                  "metadata": {
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 30.73
                  }
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "error",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "9cv5obo21unan"
                  },
                  "default": "error",
                  "example": "error",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "t4wlydis9gaxt"
                  },
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "no8v6es8v0ctr"
                  },
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "yd2cm9weorpg9"
                  },
                  "example": "/api/v1/devices-module",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "x-stoplight": {
                    "id": "vmwamsvg1akt8"
                  },
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "error": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "hsbd8jq1ul59z"
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "s38kng2pbktfy"
                      },
                      "description": "Short error code indicating the type of error.",
                      "example": "NotFoundError",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "mpplavd8acdft"
                      },
                      "description": "Detailed error message for debugging or client display.",
                      "example": "The specified resource was not found.",
                      "readOnly": true
                    },
                    "details": {
                      "x-stoplight": {
                        "id": "ruco9g88efsw7"
                      },
                      "oneOf": [
                        {
                          "type": "object",
                          "x-stoplight": {
                            "id": "chy740xyu73t3"
                          },
                          "properties": {
                            "field": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "2i1s5frhnx5gd"
                              },
                              "example": "id",
                              "readOnly": true
                            },
                            "reason": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "tbmxjb43fu7cm"
                              },
                              "example": "resource not found",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "type": "array",
                          "x-stoplight": {
                            "id": "3ks8fn7ubk4r3"
                          },
                          "items": {
                            "x-stoplight": {
                              "id": "pfqt8r5y7zlg6"
                            },
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "1rdunxnpq38fb"
                                },
                                "readOnly": true
                              },
                              "reason": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "nvhu1elyoj2ng"
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      ],
                      "description": "Additional information about the error, if available."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "cxtcdgqdfzfka"
                  },
                  "required": [
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "server_time": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "4nb2dped52da8"
                      },
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "4sgm8fnnhyp1r"
                      },
                      "format": "float",
                      "example": 30.73,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "error",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module",
                  "method": "GET",
                  "error": {
                    "code": "NotFoundError",
                    "message": "The specified resource was not found.",
                    "details": {
                      "field": "id",
                      "reason": "resource not found"
                    }
                  },
                  "metadata": {
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 30.73
                  }
                }
              }
            }
          }
        }
      },
      "BadRequestError": {
        "description": "The request parameters were invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "error",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "0j7mnb6zcwvp8"
                  },
                  "example": "error",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "stxy7bk2zjshq"
                  },
                  "format": "date-time",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "example": "2025-01-18T12:00:00Z",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "4d7x38yidyv8q"
                  },
                  "format": "uuid",
                  "description": "Unique identifier for this specific API request.",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "dyyvafiju06fk"
                  },
                  "example": "/api/v1/devices-module",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "x-stoplight": {
                    "id": "00jwjjetss9i2"
                  },
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "error": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "4azgc4drwcvbu"
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "0q3bd9ct3pqbh"
                      },
                      "description": "Short error code indicating the type of error.",
                      "example": "BadRequestError",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "79mjb1kv2b0pj"
                      },
                      "description": "Detailed error message for debugging or client display.",
                      "example": "The 'name' parameter is invalid.",
                      "readOnly": true
                    },
                    "details": {
                      "x-stoplight": {
                        "id": "oicaj68h1p1uj"
                      },
                      "oneOf": [
                        {
                          "x-stoplight": {
                            "id": "o5t4z98jd08dn"
                          },
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "c7t24yozlzmvw"
                              },
                              "example": "name",
                              "readOnly": true
                            },
                            "reason": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "da5oafiivqoaj"
                              },
                              "example": "Name cannot contain special characters.",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "x-stoplight": {
                            "id": "kw5seiphvdm96"
                          },
                          "type": "array",
                          "items": {
                            "x-stoplight": {
                              "id": "14u9gel2uy6zi"
                            },
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "b7nezzh7nz6tc"
                                },
                                "example": "name",
                                "readOnly": true
                              },
                              "reason": {
                                "type": "string",
                                "x-stoplight": {
                                  "id": "c44vhiiro1tk5"
                                },
                                "example": "Name cannot contain special characters.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      ],
                      "description": "Additional information about the error, if available."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "e8nqi1vv65mgv"
                  },
                  "required": [
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "server_time": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "01q8b34ys3532"
                      },
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "3zv0cmgswapdq"
                      },
                      "example": 30.73,
                      "format": "float",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "error",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module",
                  "method": "GET",
                  "error": {
                    "code": "BadRequestError",
                    "message": "The 'name' parameter is invalid.",
                    "details": {
                      "field": "name",
                      "reason": "Name cannot contain special characters."
                    }
                  },
                  "metadata": {
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 30.73
                  }
                }
              }
            }
          }
        }
      },
      "DevicesOneDevice": {
        "description": "The device was successfully retrieved. The response contains detailed information about the device, including its metadata, channels, controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "pvx7vp96d710n"
                  },
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "881jptrtgs4n4"
                  },
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "ypmllwvc7ux4y"
                  },
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "61cgwb50rj6rr"
                  },
                  "example": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "x-stoplight": {
                    "id": "2abnemaewjq39"
                  },
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesDevice",
                  "x-stoplight": {
                    "id": "5hfqq2wg707cj"
                  }
                },
                "metadata": {
                  "type": "object",
                  "x-stoplight": {
                    "id": "ie9bfio2p6dh2"
                  },
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "yi5zqpsak4y71"
                      },
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "hwilovyzna8ar"
                      },
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "x-stoplight": {
                        "id": "u5xjb1r2b5iun"
                      },
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "method": "GET",
                  "data": {
                    "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "category": "generic",
                    "name": "Thermostat",
                    "description": "Living room thermostat",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                        "name": "reboot",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "channels": [
                      {
                        "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "category": "generic",
                        "name": "Temperature Sensor",
                        "description": "Living room temperature sensor",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z",
                        "controls": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "name": "reset",
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ],
                        "properties": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "category": "generic",
                            "name": "Thermostat mode",
                            "permission": [
                              "ro"
                            ],
                            "data_type": "char",
                            "unit": "¬∞C",
                            "format": [
                              "heat",
                              "auto"
                            ],
                            "invalid": -999,
                            "step": 0.5,
                            "value": 22.1,
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ]
                      }
                    ],
                    "type": "third-party",
                    "service_address": "http://192.168.1.100/webhook"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesMultipleDevices": {
        "description": "A list of devices successfully retrieved. Each device includes its metadata (ID, name, category), associated channels, controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "default": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DevicesDevice"
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices",
                  "method": "GET",
                  "data": [
                    {
                      "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                      "category": "generic",
                      "name": "Thermostat",
                      "description": "Living room thermostat",
                      "created_at": "2024-12-11T12:00:00Z",
                      "updated_at": "2024-12-11T12:00:00Z",
                      "controls": [
                        {
                          "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                          "name": "reboot",
                          "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                          "created_at": "2024-12-11T12:00:00Z",
                          "updated_at": "2024-12-11T12:00:00Z"
                        }
                      ],
                      "channels": [
                        {
                          "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                          "category": "generic",
                          "name": "Temperature Sensor",
                          "description": "Living room temperature sensor",
                          "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                          "created_at": "2024-12-11T12:00:00Z",
                          "updated_at": "2024-12-11T12:00:00Z",
                          "controls": [
                            {
                              "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                              "name": "reset",
                              "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                              "created_at": "2024-12-11T12:00:00Z",
                              "updated_at": "2024-12-11T12:00:00Z"
                            }
                          ],
                          "properties": [
                            {
                              "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                              "category": "generic",
                              "name": "Thermostat mode",
                              "permission": [
                                "ro"
                              ],
                              "data_type": "char",
                              "unit": "¬∞C",
                              "format": [
                                "heat",
                                "auto"
                              ],
                              "invalid": -999,
                              "step": 0.5,
                              "value": 22.1,
                              "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                              "created_at": "2024-12-11T12:00:00Z",
                              "updated_at": "2024-12-11T12:00:00Z"
                            }
                          ]
                        }
                      ],
                      "type": "third-party",
                      "service_address": "http://192.168.1.100/webhook"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesOneDeviceControl": {
        "description": "The details of the control were successfully retrieved. The response contains information such as the control‚Äôs name, ID, associated device, and timestamps.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls/227349b1-a2a7-439a-b296-59f002faa8ce",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesDeviceControl"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls/227349b1-a2a7-439a-b296-59f002faa8ce",
                  "method": "GET",
                  "data": {
                    "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                    "name": "reboot",
                    "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesMultipleDeviceControls": {
        "description": "The list of controls was successfully retrieved. Each control includes metadata such as its ID, name, and timestamps.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DevicesDeviceControl"
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls",
                  "method": "GET",
                  "data": [
                    {
                      "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                      "name": "reboot",
                      "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                      "created_at": "2024-12-11T12:00:00Z",
                      "updated_at": "2024-12-11T12:00:00Z"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesOneChannel": {
        "description": "The channel details were successfully retrieved. The response contains detailed information about the channel, including its metadata, associated device, controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannel"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls",
                  "method": "GET",
                  "data": {
                    "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "category": "generic",
                    "name": "Temperature Sensor",
                    "description": "Living room temperature sensor",
                    "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "name": "reset",
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "properties": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "category": "generic",
                        "name": "Thermostat mode",
                        "permission": [
                          "ro"
                        ],
                        "data_type": "char",
                        "unit": "¬∞C",
                        "format": [
                          "heat",
                          "auto"
                        ],
                        "invalid": -999,
                        "step": 0.5,
                        "value": 22.1,
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ]
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesMultipleChannels": {
        "description": "The list of channels was successfully retrieved. The response includes metadata for each channel, including its ID, name, category, associated device, controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "default": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DevicesChannel"
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels",
                  "method": "GET",
                  "data": [
                    {
                      "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                      "category": "generic",
                      "name": "Temperature Sensor",
                      "description": "Living room temperature sensor",
                      "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                      "created_at": "2024-12-11T12:00:00Z",
                      "updated_at": "2024-12-11T12:00:00Z",
                      "controls": [
                        {
                          "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                          "name": "reset",
                          "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                          "created_at": "2024-12-11T12:00:00Z",
                          "updated_at": "2024-12-11T12:00:00Z"
                        }
                      ],
                      "properties": [
                        {
                          "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                          "category": "generic",
                          "name": "Thermostat mode",
                          "permission": [
                            "ro"
                          ],
                          "data_type": "char",
                          "unit": "¬∞C",
                          "format": [
                            "heat",
                            "auto"
                          ],
                          "invalid": -999,
                          "step": 0.5,
                          "value": 22.1,
                          "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                          "created_at": "2024-12-11T12:00:00Z",
                          "updated_at": "2024-12-11T12:00:00Z"
                        }
                      ]
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesOneChannelControl": {
        "description": "The request was successful. The response contains the details of the requested control, including its ID, name, associated channel, and metadata.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls/4b76637f-a8a6-45ba-965b-4819f4b57df2",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannelControl"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls/4b76637f-a8a6-45ba-965b-4819f4b57df2",
                  "method": "GET",
                  "data": {
                    "id": "4b76637f-a8a6-45ba-965b-4819f4b57df2",
                    "name": "reset",
                    "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesMultipleChannelControls": {
        "description": "The request was successful. The response contains an array of controls, each including details such as the control‚Äôs ID, name, associated channel, and metadata.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "default": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DevicesChannelControl"
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls",
                  "method": "GET",
                  "data": [
                    {
                      "id": "4b76637f-a8a6-45ba-965b-4819f4b57df2",
                      "name": "reset",
                      "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                      "created_at": "2024-12-11T12:00:00Z",
                      "updated_at": "2024-12-11T12:00:00Z"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesOneChannelProperty": {
        "description": "The request was successful. The response contains the full representation of the requested property, including its unique identifier, metadata, current value, and the associated channel.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannelProperty"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "id": "208f4790-21b0-4927-8835-7302d883a141",
                    "category": "generic",
                    "name": "Thermostat mode",
                    "permission": [
                      "ro"
                    ],
                    "data_type": "char",
                    "unit": "¬∞C",
                    "format": [
                      "heat",
                      "auto"
                    ],
                    "invalid": -999,
                    "step": 0.5,
                    "value": 22.1,
                    "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesMultipleChannelProperties": {
        "description": "The request was successful. The response contains an array of properties associated with the specified channel. Each property includes detailed metadata such as its unique identifier, category, permissions, data type, unit, and current value, along with timestamps for creation and updates.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "default": "success"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format."
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request."
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties",
                  "description": "The requested API endpoint."
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DevicesChannelProperty"
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z"
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties",
                  "method": "GET",
                  "data": [
                    {
                      "id": "208f4790-21b0-4927-8835-7302d883a141",
                      "category": "generic",
                      "name": "Thermostat mode",
                      "permission": [
                        "ro"
                      ],
                      "data_type": "char",
                      "unit": "¬∞C",
                      "format": [
                        "heat",
                        "auto"
                      ],
                      "invalid": -999,
                      "step": 0.5,
                      "value": 22.1,
                      "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                      "created_at": "2024-12-11T12:00:00Z",
                      "updated_at": "2024-12-11T12:00:00Z"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesCreatedDevice": {
        "description": "The device was successfully created. The response body contains the complete representation of the device, including its unique ID, category, name, channels, controls, and properties. A Location header is also returned, containing the URI of the created device resource for future operations.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesDevice"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "method": "GET",
                  "data": {
                    "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "category": "generic",
                    "name": "Thermostat",
                    "description": "Living room thermostat",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                        "name": "reboot",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "channels": [
                      {
                        "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "category": "generic",
                        "name": "Temperature Sensor",
                        "description": "Living room temperature sensor",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z",
                        "controls": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "name": "reset",
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ],
                        "properties": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "category": "generic",
                            "name": "Thermostat mode",
                            "permission": [
                              "ro"
                            ],
                            "data_type": "char",
                            "unit": "¬∞C",
                            "format": [
                              "heat",
                              "auto"
                            ],
                            "invalid": -999,
                            "step": 0.5,
                            "value": 22.1,
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ]
                      }
                    ],
                    "type": "third-party",
                    "service_address": "http://192.168.1.100/webhook"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created device resource, which can be used to retrieve, update, or delete the device."
          }
        }
      },
      "DevicesUpdateDevice": {
        "description": "The device was successfully updated. The response contains the updated device object, including its metadata, associated channels, controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesDevice"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4",
                  "method": "PATCH",
                  "data": {
                    "id": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "category": "generic",
                    "name": "Thermostat",
                    "description": "Living room thermostat",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                        "name": "reboot",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "channels": [
                      {
                        "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "category": "generic",
                        "name": "Temperature Sensor",
                        "description": "Living room temperature sensor",
                        "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z",
                        "controls": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "name": "reset",
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ],
                        "properties": [
                          {
                            "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                            "category": "generic",
                            "name": "Thermostat mode",
                            "permission": [
                              "ro"
                            ],
                            "data_type": "char",
                            "unit": "¬∞C",
                            "format": [
                              "heat",
                              "auto"
                            ],
                            "invalid": -999,
                            "step": 0.5,
                            "value": 22.1,
                            "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                            "created_at": "2024-12-11T12:00:00Z",
                            "updated_at": "2024-12-11T12:00:00Z"
                          }
                        ]
                      }
                    ],
                    "type": "third-party",
                    "service_address": "http://192.168.1.100/webhook"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesCreatedDeviceControl": {
        "description": "The control was successfully created. The response contains the details of the newly created control.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesDeviceControl"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/devices/332dda32-b7de-4557-956a-b6ed6c6799a4/controls/227349b1-a2a7-439a-b296-59f002faa8ce",
                  "method": "POST",
                  "data": {
                    "id": "227349b1-a2a7-439a-b296-59f002faa8ce",
                    "name": "reboot",
                    "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created device control resource, which can be used to retrieve, update, or delete the control."
          }
        }
      },
      "DevicesCreatedChannel": {
        "description": "The channel was successfully created. The response contains the details of the newly created channel, including its metadata, associated controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannel"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "method": "POST",
                  "data": {
                    "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "category": "generic",
                    "name": "Temperature Sensor",
                    "description": "Living room temperature sensor",
                    "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "name": "reset",
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "properties": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "category": "generic",
                        "name": "Thermostat mode",
                        "permission": [
                          "ro"
                        ],
                        "data_type": "char",
                        "unit": "¬∞C",
                        "format": [
                          "heat",
                          "auto"
                        ],
                        "invalid": -999,
                        "step": 0.5,
                        "value": 22.1,
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ]
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created channel resource, which can be used to retrieve, update, or delete the channel."
          }
        }
      },
      "DevicesUpdatedChannel": {
        "description": "The channel was successfully updated. The response contains the updated channel object, including its metadata, associated controls, and properties.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannel"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                  "method": "PATCH",
                  "data": {
                    "id": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "category": "generic",
                    "name": "Temperature Sensor",
                    "description": "Living room temperature sensor",
                    "device": "332dda32-b7de-4557-956a-b6ed6c6799a4",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z",
                    "controls": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "name": "reset",
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ],
                    "properties": [
                      {
                        "id": "9431cc2d-d447-44c1-b2d0-4398624e4921",
                        "category": "generic",
                        "name": "Thermostat mode",
                        "permission": [
                          "ro"
                        ],
                        "data_type": "char",
                        "unit": "¬∞C",
                        "format": [
                          "heat",
                          "auto"
                        ],
                        "invalid": -999,
                        "step": 0.5,
                        "value": 22.1,
                        "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                        "created_at": "2024-12-11T12:00:00Z",
                        "updated_at": "2024-12-11T12:00:00Z"
                      }
                    ]
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesCreatedChannelControl": {
        "description": "The control was successfully created. The response includes the complete details of the newly created control, such as its unique identifier, name, associated channel, and timestamps.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannelControl"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/controls/4b76637f-a8a6-45ba-965b-4819f4b57df2",
                  "method": "GET",
                  "data": {
                    "id": "4b76637f-a8a6-45ba-965b-4819f4b57df2",
                    "name": "reset",
                    "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created channel control resource, which can be used to retrieve, update, or delete the control."
          }
        }
      },
      "DevicesCreatedChannelProperty": {
        "description": "The property was successfully created. The response body contains the complete representation of the created property, including its unique ID, associated channel, category, and metadata. The Location header provides the URI of the newly created property resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannelProperty"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "POST",
                  "data": {
                    "id": "208f4790-21b0-4927-8835-7302d883a141",
                    "category": "generic",
                    "name": "Thermostat mode",
                    "permission": [
                      "ro"
                    ],
                    "data_type": "char",
                    "unit": "¬∞C",
                    "format": [
                      "heat",
                      "auto"
                    ],
                    "invalid": -999,
                    "step": 0.5,
                    "value": 22.1,
                    "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created channel property resource, which can be used to retrieve, update, or delete the property."
          }
        }
      },
      "DevicesUpdatedChannelProperty": {
        "description": "The property was successfully updated. The response contains the updated representation of the property, including its unique identifier, metadata, and current value.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DevicesChannelProperty"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "PATCH",
                  "data": {
                    "id": "208f4790-21b0-4927-8835-7302d883a141",
                    "category": "generic",
                    "name": "Thermostat mode",
                    "permission": [
                      "ro"
                    ],
                    "data_type": "char",
                    "unit": "¬∞C",
                    "format": [
                      "heat",
                      "auto"
                    ],
                    "invalid": -999,
                    "step": 0.5,
                    "value": 22.1,
                    "channel": "568e43e9-c9da-4a4e-ac7c-9904b42730c6",
                    "created_at": "2024-12-11T12:00:00Z",
                    "updated_at": "2024-12-11T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DashboardOnePage": {
        "description": "The page was successfully retrieved. The response contains detailed information about the page, including its metadata, tiles and data sources.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardPage"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DashboardMultiplePages": {
        "description": "A list of pages successfully retrieved. Each page includes its metadata (ID and title), associated tiles and data sources.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardPage",
                    "x-stoplight": {
                      "id": "l477m2mjjih2h"
                    }
                  },
                  "readOnly": true
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DashboardOneTile": {
        "description": "The details of the tile were successfully retrieved. The response contains information such as the tile‚Äôs position, size, associated page, and timestamps.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardTile"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "DashboardMultipleTiles": {
        "description": "The list of tiles was successfully retrieved. Each tile includes metadata such as its ID, size, and position.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardTile",
                    "x-stoplight": {
                      "id": "8rkcesru3ycpi"
                    }
                  },
                  "readOnly": true
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "DashboardOneDataSource": {
        "description": "The details of the data soure were successfully retrieved. The response contains information such as the data source‚Äôs associated device, channel, value, and associated tile.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source/123e4567-e89b-12d3-a456-426614174000",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardDataSource"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source/123e4567-e89b-12d3-a456-426614174000",
                  "method": "GET",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "device_channel",
                    "tile": "456e7890-a89b-22d3-c456-426614174111",
                    "icon": "icon-name",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T13:00:00Z",
                    "device": "234e5678-a89b-22d3-c456-426614174133",
                    "channel": "345e6789-b89c-32d4-d567-526715184244",
                    "property": "456e7890-c89d-42d5-e678-626816194355"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DashboardMultipleDataSources": {
        "description": "The list of data sources associated with the tile was successfully retrieved. Each data source includes details such as its ID, associated device, value, and metadata.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardDataSource",
                    "x-stoplight": {
                      "id": "31bfs2o6zxcjt"
                    }
                  },
                  "readOnly": true
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "type": "device_channel",
                      "tile": "456e7890-a89b-22d3-c456-426614174111",
                      "icon": "icon-name",
                      "created_at": "2025-01-25T12:00:00Z",
                      "updated_at": "2025-01-25T13:00:00Z",
                      "device": "234e5678-a89b-22d3-c456-426614174133",
                      "channel": "345e6789-b89c-32d4-d567-526715184244",
                      "property": "456e7890-c89d-42d5-e678-626816194355"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DashboardCreatedPage": {
        "description": "The page was successfully created. The response body contains the complete representation of the page, including its unique ID, title, tiles and data sources. A Location header is also returned, containing the URI of the created page resource for future operations.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardPage"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created page resource, which can be used to retrieve, update, or delete the page."
          }
        }
      },
      "DashboardCreatedTile": {
        "description": "The tile was successfully created. The response contains the details of the newly created tile.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardTile"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created page tile resource, which can be used to retrieve, update, or delete the tile."
          }
        }
      },
      "DashboardCreatedDataSource": {
        "description": "The data source was successfully created. The response body contains the complete representation of the data source, including its unique identifier, associated device, associated channel, timezone and metadata.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardDataSource"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "device_channel",
                    "tile": "456e7890-a89b-22d3-c456-426614174111",
                    "icon": "icon-name",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T13:00:00Z",
                    "device": "234e5678-a89b-22d3-c456-426614174133",
                    "channel": "345e6789-b89c-32d4-d567-526715184244",
                    "property": "456e7890-c89d-42d5-e678-626816194355"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URI of the newly created tile data source resource, which can be used to retrieve, update, or delete the data source."
          }
        }
      },
      "DashboardUpdatedPage": {
        "description": "The page was successfully updated. The response contains the updated page object, including its metadata, associated tiles and data sources.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardPage"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "DashboardUpdatedTile": {
        "description": "Partially updates the attributes of a specific tile associated with a page using its unique ID. The update can modify metadata, such as the tile‚Äôs position or size, without requiring the full object.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardTile"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "DashboardUpdatedDataSource": {
        "description": "The data source was successfully updated. The response contains the updated data source details, including its unique identifier, associated device, channel, value, and metadata.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source/123e4567-e89b-12d3-a456-426614174000",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardDataSource"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source/123e4567-e89b-12d3-a456-426614174000",
                  "method": "GET",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "device_channel",
                    "tile": "456e7890-a89b-22d3-c456-426614174111",
                    "icon": "icon-name",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T13:00:00Z",
                    "device": "234e5678-a89b-22d3-c456-426614174133",
                    "channel": "345e6789-b89c-32d4-d567-526715184244",
                    "property": "456e7890-c89d-42d5-e678-626816194355"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "ConfigApp": {
        "description": "Response containing the full smart panel configuration, including audio, display, language, and weather settings.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/ConfigApp"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "audio": {
                      "speaker": false,
                      "speaker_volume": 50,
                      "microphone": false,
                      "microphone_volume": 33
                    },
                    "display": {
                      "dark_mode": false,
                      "brightness": 55,
                      "screen_lock_duration": 30,
                      "screen_saver": true
                    },
                    "language": {
                      "language": "en_US",
                      "timezone": "Europe/Prague",
                      "time_format": "24h"
                    },
                    "weather": {
                      "location": "Prague",
                      "location_type": "city_name",
                      "unit": "celsius",
                      "open_weather_api_key": null
                    }
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "ConfigSection": {
        "description": "Response containing the current audio configuration, including speaker and microphone settings.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ConfigAudio",
                      "x-stoplight": {
                        "id": "onkpum4zkdhb7"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ConfigDisplay",
                      "x-stoplight": {
                        "id": "s2hwydkvryzeb"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ConfigLanguage",
                      "x-stoplight": {
                        "id": "8kqs49c186xb9"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ConfigWeather",
                      "x-stoplight": {
                        "id": "717lzbv6tlffl"
                      }
                    }
                  ]
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "speaker": false,
                    "speaker_volume": 50,
                    "microphone": false,
                    "microphone_volume": 33
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "SystemSystemInfo": {
        "description": "Provides a detailed overview of the system‚Äôs current status, including CPU load, memory usage, storage details, temperature readings, operating system information, network statistics, and display settings.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/SystemSystemInfo"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "cpu_load": 15.3,
                    "memory": {
                      "total": 8388608000,
                      "used": 4200000000,
                      "free": 4188608000
                    },
                    "storage": [
                      {
                        "fs": "/dev/mmcblk0p1",
                        "used": 15000000000,
                        "size": 32000000000,
                        "available": 17000000000
                      }
                    ],
                    "temperature": {
                      "cpu": 55,
                      "gpu": 60
                    },
                    "os": {
                      "platform": "linux",
                      "distro": "Debian",
                      "release": "11 (bullseye)",
                      "uptime": 36000
                    },
                    "network": [
                      {
                        "interface": "eth0",
                        "rx_bytes": 123456789,
                        "tx_bytes": 98765432,
                        "speed": 1000
                      }
                    ],
                    "display": {
                      "resolution_x": 1920,
                      "resolution_y": 1080,
                      "current_res_x": 1280,
                      "current_res_y": 720
                    }
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "SystemSystemThrottling": {
        "description": "Provides the system‚Äôs throttling status, indicating whether any CPU or power-related limitations have been triggered.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/SystemThrottleStatus"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "undervoltage": false,
                    "frequency_capping": false,
                    "throttling": true,
                    "soft_temp_limit": false
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "DevicesThirdPartyDevicePropertyUpdateResult": {
        "description": "Represents the result of an individual property update request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DevicesThirdPartyDevicePropertyUpdateResult"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "properties": [
                    {
                      "device": "234e5678-a89b-22d3-c456-426614174133",
                      "channel": "456e7890-c89d-42d5-e678-626816194355",
                      "property": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                      "status": -80002
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "DashboardCreatedCard": {
        "description": "The card was successfully created. The response contains the details of the newly created card.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardCard"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created card resource, which can be used to retrieve, update, or delete the card."
          }
        }
      },
      "DashboardUpdatedCard": {
        "description": "Partially updates the attributes of a specific card associated with a page using its unique ID. The update can modify metadata, such as the card‚Äôs title or icon, without requiring the full object.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardCard"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "DashboardMultipleCards": {
        "description": "The list of cards was successfully retrieved. Each card includes metadata such as its ID, title, and icon.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardCard",
                    "x-stoplight": {
                      "id": "31bfs2o6zxcjt"
                    }
                  },
                  "readOnly": true
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DashboardOneCard": {
        "description": "The details of the card were successfully retrieved. The response contains information such as the card‚Äôs associated tiles, data sources and card details.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source/123e4567-e89b-12d3-a456-426614174000",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/DashboardCard"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {}
          }
        }
      },
      "UsersCreatedUser": {
        "description": "Response returned after successfully creating a user.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/UsersUser"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                    "username": "johndoe",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john@doe.com",
                    "is_hidden": false,
                    "role": "user",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Location": {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "The URI of the newly created user resource, which can be used to retrieve, update, or delete the user."
          }
        }
      },
      "UsersUpdatedUser": {
        "description": "Response returned after successfully updating a user.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/UsersUser"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                    "username": "johndoe",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john@doe.com",
                    "is_hidden": false,
                    "role": "user",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "UsersMultipleUsers": {
        "description": "A list of users successfully retrieved. Each user includes its metadata (ID, username, role).",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsersUser",
                    "x-stoplight": {
                      "id": "4e695aqmf7s3t"
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": [
                    {
                      "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                      "username": "johndoe",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john@doe.com",
                      "is_hidden": false,
                      "role": "user",
                      "created_at": "2025-01-25T12:00:00Z",
                      "updated_at": "2025-01-25T12:00:00Z"
                    }
                  ],
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "UsersOneUser": {
        "description": "The user details were successfully retrieved. The response contains detailed information about the user.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/UsersUser"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                    "username": "johndoe",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john@doe.com",
                    "is_hidden": false,
                    "role": "user",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "AuthLoggedIn": {
        "description": "Response returned after successful user login.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "object",
                  "required": [
                    "access_token",
                    "refresh_token",
                    "type",
                    "expiration"
                  ],
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "eq78ijvce6w1c"
                      },
                      "description": "The JWT access token for authenticated sessions."
                    },
                    "refresh_token": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "5z3h3vnp1cn48"
                      },
                      "description": "The JWT refresh token for authenticated sessions."
                    },
                    "type": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "7una0xto2kg9o"
                      },
                      "description": "Token type"
                    },
                    "expiration": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "zrp6dmog68u0p"
                      },
                      "format": "date-time",
                      "description": "The JWT access token expiration date."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "access_token": "string",
                    "refresh_token": "string",
                    "type": "string",
                    "expiration": "2019-08-24T14:15:22Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "AuthCheck": {
        "description": "Response returned when checking the validity of a user's authentication token.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "required": [
                    "valid"
                  ],
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "x-stoplight": {
                        "id": "lpgetweb3i6ow"
                      },
                      "description": "Indicates whether the provided validation field is valid."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "valid": true
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "AuthRegisteredDisplay": {
        "description": "Response returned after successfully registering a display-only user.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "required": [
                    "secret"
                  ],
                  "type": "object",
                  "properties": {
                    "secret": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "6f0q3i6fmy79c"
                      },
                      "description": "A unique secret key assigned to the display-only user."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "secret": "string"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "AuthProfile": {
        "description": "Response containing the authenticated user's profile details.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/UsersUser",
                  "description": "User profile data for the authenticated user."
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "id": "f1e09ba1-429f-4c6a-a2fd-aca6a7c4a8c6",
                    "username": "johndoe",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john@doe.com",
                    "is_hidden": false,
                    "role": "user",
                    "created_at": "2025-01-25T12:00:00Z",
                    "updated_at": "2025-01-25T12:00:00Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "WeatherLocationWeather": {
        "description": "Response containing current weather conditions and forecast details for a specified location.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/WeatherLocationWeather"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "weather": {
                      "temperature": 22.5,
                      "temperature_min": 18.2,
                      "temperature_max": 25.8,
                      "feels_like": 21.9,
                      "pressure": 1013,
                      "humidity": 55,
                      "weather": {
                        "code": 800,
                        "main": "Clear",
                        "description": "clear sky",
                        "icon": "01d"
                      },
                      "sunrise": "2025-02-06T06:45:00Z",
                      "sunset": "2025-02-06T17:30:00Z",
                      "location": {
                        "name": "Prague",
                        "country": "CZ"
                      },
                      "wind": {
                        "speed": 3.5,
                        "deg": 180,
                        "gust": 5.8
                      },
                      "clouds": 10,
                      "rain": 0,
                      "snow": null,
                      "created_at": "2025-02-06T12:00:00Z"
                    },
                    "forecast": {
                      "location": {
                        "name": "Prague",
                        "country": "CZ"
                      },
                      "sunrise": "2025-02-07T06:47:00Z",
                      "sunset": "2025-02-07T17:32:00Z",
                      "forecast": [
                        {
                          "temperature": 20.5,
                          "temperature_min": 16,
                          "temperature_max": 24,
                          "feels_like": 19.8,
                          "pressure": 1015,
                          "humidity": 60,
                          "clouds": 30,
                          "rain": 0.5,
                          "snow": null,
                          "created_at": "2025-02-06T18:00:00Z"
                        }
                      ]
                    }
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "WeatherGeolocation": {
        "description": "Response containing geographical information related to a specified location.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "$ref": "#/components/schemas/WeatherGeolocation"
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/devices-module/channels/568e43e9-c9da-4a4e-ac7c-9904b42730c6/properties/208f4790-21b0-4927-8835-7302d883a141",
                  "method": "GET",
                  "data": {
                    "name": "Prague",
                    "local_names": {
                      "cs": "Prague",
                      "en": "Prague"
                    },
                    "lat": "50.0755",
                    "lon": "14.4378",
                    "country": "CZ",
                    "state": "Prague Region"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      },
      "AuthRefresh": {
        "description": "Response returned after successful user access token refresh.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "timestamp",
                "request_id",
                "path",
                "method",
                "data",
                "metadata"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-01-18T12:00:00Z",
                  "description": "Timestamp when the error occurred in ISO 8601 format.",
                  "readOnly": true
                },
                "request_id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "description": "Unique identifier for this specific API request.",
                  "readOnly": true
                },
                "path": {
                  "type": "string",
                  "example": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "description": "The requested API endpoint.",
                  "readOnly": true
                },
                "method": {
                  "enum": [
                    "GET",
                    "POST",
                    "PATCH",
                    "DELETE"
                  ],
                  "readOnly": true
                },
                "data": {
                  "type": "object",
                  "required": [
                    "access_token",
                    "refresh_token",
                    "type",
                    "expiration"
                  ],
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "The JWT access token for authenticated sessions."
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "The JWT refresh token for authenticated sessions."
                    },
                    "type": {
                      "type": "string",
                      "description": "Token type"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The JWT access token expiration date."
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "required": [
                    "request_duration_ms",
                    "server_time",
                    "cpu_usage"
                  ],
                  "properties": {
                    "request_duration_ms": {
                      "type": "number",
                      "format": "float",
                      "example": 57,
                      "readOnly": true
                    },
                    "server_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-18T12:00:00Z",
                      "readOnly": true
                    },
                    "cpu_usage": {
                      "type": "number",
                      "format": "float",
                      "example": 25.28,
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": {
                  "status": "success",
                  "timestamp": "2025-01-18T12:00:00Z",
                  "request_id": "b27b7c58-76f6-407a-bc78-4068e4cfd082",
                  "path": "/api/v1/dashboard-module/pages/123e4567-e89b-12d3-a456-426614174000/tiles/456e7890-a89b-22d3-c456-426614174111/data-source",
                  "method": "GET",
                  "data": {
                    "access_token": "string",
                    "refresh_token": "string",
                    "type": "string",
                    "expiration": "2019-08-24T14:15:22Z"
                  },
                  "metadata": {
                    "request_duration_ms": 57,
                    "server_time": "2025-01-18T12:00:00Z",
                    "cpu_usage": 25.28
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "The ID of the resource to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
        },
        "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
      },
      "deviceId": {
        "name": "deviceId",
        "in": "path",
        "required": true,
        "description": "The ID of the device to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
        },
        "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
      },
      "channelId": {
        "name": "channelId",
        "in": "path",
        "required": true,
        "description": "The ID of the channel to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
        },
        "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
      },
      "pageId": {
        "name": "pageId",
        "in": "path",
        "required": true,
        "description": "The ID of the page to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
        },
        "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
      },
      "cardId": {
        "name": "cardId",
        "in": "path",
        "required": true,
        "description": "The ID of the card to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "89a29104-184f-4b6f-9b37-5a70e24f8b44"
        },
        "example": "89a29104-184f-4b6f-9b37-5a70e24f8b44"
      },
      "tileId": {
        "name": "tileId",
        "in": "path",
        "required": true,
        "description": "The ID of the tile to retrieve.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
        },
        "example": "9431cc2d-d447-44c1-b2d0-4398624e4921"
      }
    }
  },
  "tags": [
    {
      "name": "Auth module",
      "description": "Endpoints related to user authentication, including registration, login, token validation, and session management."
    },
    {
      "name": "Cards",
      "description": "Endpoints for managing cards, which group tiles together for organizing dashboard layouts."
    },
    {
      "name": "Configuration module",
      "description": "Endpoints related to configuring system settings, global parameters, and module-specific configurations."
    },
    {
      "name": "Controls",
      "description": "Endpoints for managing controls associated with devices and channels, such as creating, updating, or triggering actions."
    },
    {
      "name": "Dashboard module",
      "description": "A collection of endpoints that provide dashboard-related functionalities, acting as a central module for handling tile interactions."
    },
    {
      "name": "Data source",
      "description": "Endpoints for managing data sources of page tiles, such as retrieving values, defining thresholds, or configuring attributes."
    },
    {
      "name": "Devices",
      "description": "Endpoints for managing devices, including retrieving, creating, updating, and deleting physical or third-party devices in the system."
    },
    {
      "name": "Devices module",
      "description": "A collection of endpoints that provide device-related functionalities, acting as a central module for handling device interactions."
    },
    {
      "name": "Geolocation",
      "description": "Endpoints for retrieving and managing geolocation data, such as user location and region-based settings."
    },
    {
      "name": "Channels",
      "description": "Endpoints for managing device channels, which define specific functionalities or attributes within a device."
    },
    {
      "name": "Pages",
      "description": "Endpoints for managing pages, including retrieving, creating, updating, and deleting dashboard pages."
    },
    {
      "name": "Properties",
      "description": "Endpoints for managing properties of device channels, such as reading values, defining thresholds, or configuring attributes."
    },
    {
      "name": "System module",
      "description": "Provides endpoints to retrieve system-related information, including CPU load, memory usage, and system health status."
    },
    {
      "name": "Tiles",
      "description": "Endpoints for managing page tiles, which define specific functionalities or attributes within a page layout."
    },
    {
      "name": "Users module",
      "description": "Endpoints for managing users, including user roles, permissions, and profile details."
    },
    {
      "name": "Weather",
      "description": "Endpoints for fetching weather data, including current conditions and multi-day forecasts."
    },
    {
      "name": "Weather module",
      "description": "A collection of endpoints that provide weather-related functionalities, such as retrieving forecasts and current conditions."
    }
  ]
}
