import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const inputPath = path.join(__dirname, '../../../spec/weather/city.list.json');

const outDir = path.resolve(__dirname, '../src/spec/');

const outJsonFilename = 'openweather-cities.json';

const outJsonPath = path.join(outDir, outJsonFilename);
const outTsPath = path.join(outDir, 'openweather-cities.ts');

if (!fs.existsSync(inputPath)) {
	console.error('❌ Missing source JSON:', inputPath);
	console.error('   Place your OpenWeather cities JSON in the shared-spec folder.');
	process.exit(1);
}

fs.mkdirSync(outDir, { recursive: true });

// Copy JSON into spec output folder
fs.copyFileSync(inputPath, outJsonPath);

// Generate TS that imports the JSON (no giant literal types)
const ts = `
// This file is generated by scripts/build-openweather-cities-spec.ts
// Do not edit manually!

// Types for the OpenWeather city entries
export type City = {
  id: number;
  name: string;
  state: string; // may be empty string
  country: string; // ISO 3166-1 alpha-2
  coord: { lon: number; lat: number };
};

// Import the copied JSON (requires \`resolveJsonModule\` in tsconfig)
import rawCities from "./${outJsonFilename}";

export const cities = rawCities as ReadonlyArray<City>;

// Optional helpers
export type CityId = City["id"];
export type CountryCode = City["country"];
`;

fs.writeFileSync(outTsPath, ts, 'utf-8');

console.log('✅ Copied JSON →', outJsonPath);
console.log('✅ Generated TS  →', outTsPath);
